<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-Cluster-Network-Setup">
  <title>Cluster Network Setup</title>
  <para>
    An arbitrary number of networks of different types and with different properties can be
    configured for a cluster. There is a network config class that allows networks to be
    grouped in any number of network configs. The idea is, that any such network config
    reflects the network adapter configuration of a single or a group of nodes. Finally such a
    network config can be assigned to <link linkend="PropConf-Sets">Config Sets</link> or
    directly to cluster nodes. According to the chosen network config for a node, individual
    node network properties like IP or MAC addresses can then be assigned to the node in the
    <link linkend="sec-Enclosure-View-Network-Info">Enclosure View</link>.
  </para>
  <section xml:id="sec-Network-Definitions">
      <title>Network Definitions</title>
    <para>
      During the installation of Qlustar, the basic configuration parameters for the cluster
      network had to be entered. Often, additional networks need to be defined later. This
      can be accomplished within the networks dialog selectable via <guibutton>Manage
      Cluster</guibutton>-><guibutton>Networks</guibutton> from the main windows menu.
    </para>
    <mediaobject>
      <imageobject><imagedata
      fileref="images/network_config/networks.png"
      width="85%" format="PNG"/></imageobject>
      <textobject><phrase>
        Networks dialog
      </phrase></textobject>
      <caption><para>
        Networks dialog
      </para></caption>
    </mediaobject>
    <para>
      The Networks window displays all defined networks each in a separate tab. Each tab shows
      all the configurable parameter that define the corresponding network. The base settings
      of a network are its IP address and netmask as well as an optional gateway
      address. QluMan distinguishes two types of networks: <firstterm>Primary
      Networks</firstterm> and <firstterm>Slave Networks</firstterm>.
    </para>
    <para>
      A primary network is one that determines the IP address of a host using one of the
      options listed in the <guilabel>Configure via</guilabel> section of the dialog. The
      available options are:
      <variablelist>
	<varlistentry>
	  <term>
	    DHCP (boot)
	  </term>
	  <listitem>
	    <para>
	      Configuration via the DHCP server running on the head-node. This allows the host
	      to boot over the network using PXE. Every cluster must have one such network and
	      it is created automatically during the Qlustar installation process according to
	      the data provided from the installer.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    DHCP (external)
	  </term>
	  <listitem>
	    <para>
	      Configuration by an external DHCP server not under the control of QluMan. This
	      option only makes sense for nodes that have an adapter connected to a
	      cluster-external network, like e.g. a cluster FrontEnd node.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Static
	  </term>
	  <listitem>
	    <para>
	      Static configuration for each host individually. Select
	      <guibutton>Static</guibutton> for this method. The last two options are usually
	      used for the external networks of the head-node and login nodes.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </para>
    <para>    
      A slave network on the other hand, is tied to a primary network. The idea is, that the IP
      of a host in the slave network is determined by mapping the host part of the IP in the
      primary network into the network range of the slave network. In most cases, this means
      that the host IP of the primary and slave networks end in the same number. This is a
      convenient feature, mostly used for Infiniband and IPMI networks. It saves you from
      registering/managing additional MAC/IP addresses and makes IPs easily recognizable as
      belonging to the same host.
    </para>
    <note>
      <para>
	This mechanism requires the netmask of the slave network to be at least as large as the
	primary network it is slaved to. Hence, the GUI prevents smaller values to be selected.
      </para>
    </note>
    <bridgehead>
      Configuring the Boot network
    </bridgehead>
    <para>
    <mediaobject>
      <imageobject><imagedata
      fileref="images/network_config/boot.png"
      width="85%" format="PNG"/></imageobject>
      <textobject><phrase>
        The Boot network dialog
      </phrase></textobject>
      <caption><para>
        The Boot network dialog
      </para></caption>
    </mediaobject>
      Qlustar uses network-booting via PXE to start nearly all hosts in the cluster. The only
      system(s) that can not be network-booted is the <firstterm>head-node(s)</firstterm>
      itself. Every cluster should therefore have a network that is a <guibutton>Primary
      Network</guibutton> and configured via <guibutton>DHCP (boot)</guibutton>. Such a network
      is created by the Qlustar installer and called <classname>Boot</classname>. Changes to
      this network are rarely necessary but if changes were made, all nodes must be rebooted to
      get the updated configuration.
    </para>
    <note>
      <para>
	Changing the network address or mask may also require additional manual changes in the
	config of hosts booting from disk, specifically the <firstterm>head-node</firstterm>
	itself.
      </para>
    </note>
    <para>
      Individual IP addresses and MACs of a host can be configured in the <link
      linkend="sec-Enclosure-View-Network-Info">Enclosure View</link>, once the host has been
      assigned to a network config. As with other settings/configs, this assignment can also be
      done in the <link linkend="sec-Enclosure-View-Other-Settings">Enclosure View</link> by
      assigning a network config in one of the usual ways (direct assignment, host or global
      template).
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/invalid-network.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Invalid network configuration
        </phrase></textobject>
        <caption><para>
          Invalid network configuration
        </para></caption>
      </mediaobject>
      The GUI has some safeguards to prevent invalid network configurations. For example
      different networks must not overlap. Attempting to change the network address so that it
      overlaps another network won't be accepted: The <guibutton>Save</guibutton> button at the
      bottom of the window will be disabled and a red LED icon will appear with a tool-tip
      explaining why the selected configuration is not allowed.
    </para>
    <para>
      When changing the network IP address or netmask, the IP addresses of all hosts configured
      to be in that network will be remapped to reflect the changed values. This requires that
      a new netmask is large enough, so that the resulting network range can include all
      existing hosts in the cluster. Therefore, the GUI won't let you pick anything too
      small. If there are unused address ranges in the existing network and you need a smaller
      netmask than currently selectable, you will first have to change some host addresses so
      that all of them combined occupy a small enough subset of the current network.
    </para>
    <para>
      Changing the network address IP will automatically remap the cluster internal Head IP
      address as well, while changing the netmask will not. Note, that the Qlustar
      convention, to use the second last IP of the cluster network as the Head IP, is
      obviously not a requirement. Hence, this is not done automatically when changing the
      netmask. Furthermore, changing the Head IP involves some additional steps without which
      the nodes in the cluster won't function or even boot. The reason is that the Head IP
      also appears in the <classname>Global DHCP Template</classname> and may have been added
      to other templates too. These templates are simple, freely editable text blobs. A
      change of the network definitions will not change them, so you need to check and adjust
      each of them manually.
    </para>
    <para>
      Changes to the networks definition have wide-ranging effects. To prevent accidental
      changes or booting hosts while in between configurations any changes to the network are
      not saved instantly. Instead the <guibutton>Save</guibutton> button at the bottom of the
      window needs to be clicked to confirm the changes. Alternatively, the
      <guibutton>Undo</guibutton> button can be used to revert any changes to the last saved
      values. Any changes to a network must be saved or reverted before switching tabs or
      closing the window.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/global_config__network_settings__proxy__none.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Configuring an HTTP proxy
        </phrase></textobject>
        <caption><para>
          Configuring an HTTP proxy
        </para></caption>
      </mediaobject>
      If the head-node does not have direct access to the Internet, a <parameter>http
      proxy</parameter> must be configured. QluMan uses this proxy to download packages from
      the <guilabel>Qlustar repository</guilabel>, when creating a new chroot. The HTTP proxy
      can be configured under <guimenuitem>Manage Cluster</guimenuitem>-><guimenuitem>Global
      Configs</guimenuitem>-><guimenuitem>Network Settings</guimenuitem> (<xref
      linkend="sec-HTTP-Proxy"/>).
    </para>
    <bridgehead>
      Configuring slave networks
    </bridgehead>
    <para>
      For convenience, in a cluster with Infiniband and/or IPMI, the corresponding networks are
      usually setup to mirror the Boot network: If the Boot IP of a host ends in .10 then the
      Infiniband and IPMI IPs will usually also end in .10. Within QluMan, this relationship
      can be set up by configuring these special networks as a slave to the Boot network: In
      the tab of the network under consideration, simply select the network to be slaved to
      from the drop-down menu.
    </para>
    <para>
       In a slave network, the IP of a host is always derived from its IP in the network it is
       slaved to. During the initial part of a node's boot process, the qluman-execd writes the
       resulting static slave network information into the relevant configuration file, so that
       the adapter will later be configured via standard OS methods. Hence, the IPs in the
       slave network don't need to be set for each host individually.
    </para>
    <para>
      The hostnames corresponding to the IPs in the slave network are also under control of
      this mechanism. The name of a host in a slave network will be auto generated using the
      QluMan node name of the host as the stem and adding a prefix and/or postfix separated by
      a dash to it. The default Infiniband network setup for example has a postfix of
      <emphasis>ib</emphasis>, meaning a host named <parameter>beo-01</parameter> will be
      reachable on the Infiniband network as <parameter>beo-01-ib</parameter>. Such
      pre-/postfixes may be set/changed in the configuration dialog of the network.
    </para>
    <note>
      <para>
        Hostnames generated by QluMan are added to the DHCP (boot network only), NIS and ssh
        configs allowing them to be used within the cluster where necessary.
      </para>
    </note>
  </section>
  <section xml:id="sec-Network-Configs">
    <title>Network Configs</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/network-configs.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Network Configs dialog
        </phrase></textobject>
        <caption><para>
          Network Configs dialog
        </para></caption>
      </mediaobject>
      As part of the above mentioned reimplementation of QluMan network configuration
      management, a new config class <classname>Network Config</classname> has been added. It
      allows combining multiple network definitions (as described <link
      linkend="sec-Network-Definitions">above</link>) and link each of them to a physical
      adapter. Like any other config class, such a Network Config may
      then be assigned to the Global Template, Host Templates, Config Sets or individually to
      hosts. Every host must have exactly one assigned Network Config which must match its
      hardware (adapter names).
    </para>
    <note>
      <para>
        Hosts with different types of network adapters may need different Network Configs even
        if they are connected to the same networks, because the hardware specific
        network adapter name of each NIC can differ between these hosts.
      </para>
    </note>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/select-network-config.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Selecting a Network Config
        </phrase></textobject>
        <caption><para>
          Selecting a Network Config
        </para></caption>
      </mediaobject>
      There can be any number of Network Configs, but only one is shown at a time in the
      corresponding dialog. To view or edit a different Network Config, select the desired
      entry from the drop-down menu.
    </para>
    <para>
      The configuration of the selected Network Config is shown as a tree. The top-level items
      of the tree list the defined network definitions: Both the name and the network/mask of
      the corresponding network are shown for each entry. Below each network definition, the
      NIC information (device name and network type) for that network is displayed. QluMan
      currently supports three types of NICs: <firstterm>ETHER</firstterm> for Ethernet,
      <firstterm>IB</firstterm> for Infiniband/OmniPath and <firstterm>IPMI</firstterm>.
    </para>
  </section>
  <section xml:id="sec-Managing-Network-Configs">
    <title>Managing Network Configs</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/create-network-config.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Creating a Network Config
        </phrase></textobject>
        <caption><para>
          Creating a Network Config
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/new-network-config.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Naming
        </phrase></textobject>
        <caption><para>
          Naming
        </para></caption>
      </mediaobject>
      A new Network Config can be created by clicking the <guibutton>New</guibutton> button.
      This opens a dialog asking for the name of the new Config. Entering an unused
      name and pressing the <guibutton>Ok</guibutton> button will create it
      and select the new entry in the Networks Configs dialog. Initially this will be empty.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/delete-network-config-error.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Trying to delete a Network Config in use
        </phrase></textobject>
        <caption><para>
          Trying to delete a Network Config in use
        </para></caption>
      </mediaobject>
      A Network Config may be deleted by clicking the <guibutton>Delete</guibutton> button. It
      can only be deleted, if it is no longer directly assigned to a host or included in a
      Config Set. Otherwise an error dialog will pop up describing the locations where it is
      still in use.
    </para>
    <section xml:id="sec-Add-Network">
      <title>Adding a Network</title>
      <para>
	<mediaobject>
          <imageobject><imagedata
          fileref="images/network_config/add-network.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a network
          </phrase></textobject>
          <caption><para>
            Adding a network
          </para></caption>
	</mediaobject>
	<mediaobject>
          <imageobject><imagedata
          fileref="images/network_config/select-nic-for-network.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Selecting the NIC for a network
          </phrase></textobject>
          <caption><para>
            Selecting the NIC for a network
          </para></caption>
	</mediaobject>
	A network can be added to the Network Config by selecting a network definition from the
	entries below <guimenuitem>Add Network</guimenuitem> in the context menu. This opens a
	dialog where the type and name of the NIC for this network may be selected.
      </para>
      <para>
	<mediaobject>
          <imageobject><imagedata
          fileref="images/network_config/select-nic-for-network_type.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Selecting the NIC type
          </phrase></textobject>
          <caption><para>
            Selecting the NIC type
          </para></caption>
	</mediaobject>
	<mediaobject>
          <imageobject><imagedata
          fileref="images/network_config/select-nic-for-network_name.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Selecting the name of the NIC
          </phrase></textobject>
          <caption><para>
            Selecting the name of the NIC
          </para></caption>
	</mediaobject>
	The NIC type should be selected first using the corresponding drop-down menu. A
	selection of valid types is available to choose from. The drop-down menu for the NIC
	name lists all the previously used names of the same type for easy selection. A new
	name can also be entered directly, in case the NIC has a name not previously
	encountered.
      </para>
      <note>
	<para>
	  The name for Ethernet adapters is <link
	  xlink:href="https://www.freedesktop.org/wiki/Software/systemd/PredictableNetworkInterfaceNames/___blank___">generated
	  by systemd</link> according to the way the Ethernet chip is wired into or where the
	  network card is inserted on the mainboard (in case of add-on cards). This mechanism
	  generates names that are predictable even when another NIC fails or a new one is
	  added later on. It guarantees that the same name is used for a NIC on every boot.
	</para>
      </note>
      <note>
	<para>
          The special name <filename>BOOT</filename> indicates the NIC that is used to boot the
          node, no matter what the actual name is. This allows for a default config that works
          on any hardware and is sufficient for most cases. It should always be the choice for
          the boot network of the cluster.
	</para>
      </note>
      <para>
	The default name for Infiniband adapters is the kernel name of the
	<firstterm>IP-over-IB</firstterm> device, which usually has the form
	<filename>ib&#60;N&#62;</filename> starting with <filename>ib0</filename>. Even
	simpler, the name for IPMI adapters is <filename>ipmi0</filename>.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/select-network-config_done.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    New entry displayed
	  </phrase></textobject>
	  <caption><para>
	    New entry displayed
	  </para></caption>
	</mediaobject>
	After selecting the NIC type and name, click <guibutton>OK</guibutton> and the new
	entry will appear in the Network Config dialog. If more networks are needed, simply
	repeat the procedure above for each of them.
      </para>
    </section>
  </section>
  <section xml:id="sec-Host-Network-Settings">
    <title>Host specific Network Settings</title>
    <para>
      When all the networks have been defined and required Network Configs were created and
      assigned to a host through a template or directly, the final step of the network
      configuration involves the host's individual settings.
      <mediaobject>
        <imageobject><imagedata
        fileref="images/enclosure_view/show_networks.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Toggling the display of a host's network definitions
        </phrase></textobject>
        <caption><para>
          Toggling the display of a host's network definitions
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/host-network-settings.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          All network definitions of a host
        </phrase></textobject>
        <caption><para>
          All network definitions of a host
        </para></caption>
      </mediaobject>
      They are displayed by selecting the host in the <link
      linkend="sec-Enclosure-View">Enclosure View</link>. For each network the host
      belongs to, the Host IP, MAC address (where applicable) and optional host aliases are
      shown and can be set or changed.
    </para>
    <para>
      If the host already got a Network Config assigned at its creation time, either from the
      Global Template, by setting a Host Template or by copying the config from an existing
      host, then the boot network will already have a Host IP and MAC address filled in. Both
      of these are required for the host to be able to boot from the network and to receive the
      correct configuration at boot.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/host-network-settings_ip.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Node-specific IP settings
        </phrase></textobject>
        <caption><para>
          Node-specific IP settings
        </para></caption>
      </mediaobject>
      The Host IP can be entered directly or changed using the <guibutton>up</guibutton> or
      <guibutton>down</guibutton> arrows. Only the host part of the IP can be changed in this
      way, its network part is fixed and grayed out: The GUI ensures that only IPs being part
      of the corresponding network can be entered. If no Host IP has been manually set for the
      host yet, then the lowest IP in the network will be suggested and the <guilabel>Host
      IP</guilabel> will be color coded to indicate unsaved changes. More info about color
      coding and how to save changes can be found in <link
      linkend="sec-Enclosure-View-Network-Info">this section</link>.
    </para>
    <note>
      <para>
	The Host IP for slave networks is auto-generated by mapping the host's IP in the master
	network into the slave, such that the last digits of the IP are identical in both
	networks. It can therefore not be edited.
      </para>
    </note>
    <para>
      For networks that use <literal>DHCP(boot)</literal> to configure the network adapter, the
      correct MAC address must be given. It must be entered as six hexadecimal bytes separated
      by ":". For example: <emphasis>00:25:90:12:fe:cc</emphasis>. Again, color coding of the
      <guilabel>MAC</guilabel> label will show whether the entered MAC address is valid,
      although most invalid input is rejected by the GUI outright. For networks defined as
      <literal>DHCP(external)</literal>, the MAC field is purely informational and not used by
      QluMan.
    </para>
    <para>
      The last part of a host's network settings are optional host aliases. These are simply
      alternative names under which the host can be reached and which will be added to the NIS
      database. Aliases are entered as a space-separated list of hostnames and must be
      unique. For performance reasons, the uniqueness is not fully checked by the GUI, so care
      must be taken to avoid collisions.
    </para>
  </section>
  <section xml:id="sec-Hostnames">
    <title>Names of a Host</title>
    <para>
      A host can have multiple names. Typically there is at least one name for each network it
      is connected to. The primary name of a host in QluMan is its <literal>Cluster node
      name</literal>, which is its name shown in the Enclosure View tree. By convention and
      default, the head-node is named <emphasis>beosrv-c</emphasis> and the FrontEnd node
      <emphasis>login-c</emphasis>. Note, that these are their names in the cluster-internal
      boot network and not their real hostname (displayed by the <command>hostname</command>
      command). Per default, compute nodes are named <emphasis>beo-&#60;N&#62;</emphasis> with
      <emphasis>&#60;N&#62;</emphasis> being a two-digit running number and their
      <literal>Cluster node name</literal> will also be used as their real hostname.
    </para>
    <warning>
      <para>
	We strongly advise to keep the head-node <literal>Cluster node name</literal>
	<emphasis>beosrv-c</emphasis>. There are a lot of places where this name is hard-coded
	and changing it will likely cause problems.
      </para>
    </warning>
    <para>
      A host's <literal>Cluster node name</literal> will always resolve to its IP in the boot
      network. It is also used as the stem, when the name of the host in networks slaved to the
      boot network is generated with the configured pre-/suffix of the slave. E.g. per default,
      the name in the IPMI network has a suffix of <emphasis>ipmi</emphasis>, which means that
      a host with <literal>Cluster node name</literal> <emphasis>beo-01</emphasis> will become
      <emphasis>beo-01-ipmi</emphasis> in the IPMI network.
    </para>
    <para>
      Sometimes the generated names are inconvenient to remember, or the network does not have
      generated names at all, when it is neither the boot nor a slave network (e.g. the
      external network of the FrontEnd node). In such cases, a host can be given additional
      names by defining host aliases for it.
    </para>
    <para>
      Even stronger than an alias is the <literal>hostname override</literal>. The hostname
      override does not just add an additional name for the host, but also makes it the real
      hostname that is displayed by the <command>hostname</command> command) and will appear on
      the shell prompt, in logfiles or outgoing mails from that host. This is commonly used for
      FrontEnd nodes, so that the visible name matches the external name of the host that is
      used to connect to it.
    </para>
  </section>
  <section xml:id="sec-Configuring-IB">
    <title>Infiniband Network</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/infiniband.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IB network definition in the Networks dialog
        </phrase></textobject>
        <caption><para>
          IB network definition in the Networks dialog
        </para></caption>
      </mediaobject>
      For most practical purposes, <firstterm>Infiniband (IB)</firstterm> adapters need to be
      configured with an IP address (IPoIB) just like Ethernet adapters. If you have chosen to
      configure an IB network during installation, this section is mostly about how to review
      or change the initial settings. If not, a network definition for IB has to be created in
      the <link linkend="sec-Network-Definitions">Networks</link> dialog. There, a network IP
      address and a netmask can be chosen for the IBoIB Network.
    </para>
    <para>
      The Infiniband network must not collide with any other network. This is prevented
      automatically in the settings dialog. It is convenient to define the IB network as a
      slave to the boot network. Then the IB IP of each host is computed by mapping the host
      part of its Boot IP to the IB network and no further configuration is necessary. Example:
      If a host's boot network IP address is 192.168.17.100, the corresponding slaved IB IP
      address will become 192.168.18.100.
    </para>
    <note>
      <para>
	This mechanism requires the IB netmask to be at least as large as the Boot Network
	netmask. Hence, smaller values won't be selectable.
      </para>
    </note>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/network-configs__ib.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IB-adapter in the Network Config
        </phrase></textobject>
        <caption><para>
          IB-adapter in the Network Config
        </para></caption>
      </mediaobject>
      In order to have the IB adapter of a node configured correctly during the boot process,
      the network definition must also be added to the Network Config used by the host. It is
      not uncommon, that a cluster consists of hosts with IB and hosts without. In such cases,
      multiple Network Configs must be created (at least one with IB and one without IB) and
      assigned to the different hosts in one of the standard ways (via templates or
      directly). If the Network Config for a host includes a NIC of type
      <emphasis>IB</emphasis>, during its boot process, the necessary Infiniband kernel modules
      will be loaded and IP-over-IB will be set up with the IP mapping configured in the
      network definition.
    </para>
    <!-- FIXME: not implemented yet
    <note>
      <para>
	The <link linkend="chap-HWwizard">Hardware Wizard</link> auto-detects the presence of
	IB adapters and allows to conveniently recommend Network Configs that include an IB
	adapter.
      </para>
    </note>
    -->
    <section xml:id="sec-Configuring-OpenSM">
      <title>Activating/configuring OpenSM</title>
      <para>
	In an IB fabric, at least one node (or switch) has to run a subnet manager process that
	manages the IB routing tables. Qlustar provides <application>OpenSM</application> for
	this task. If the head-node is also part of the IB network, it's usually best to
	configure it to run OpenSM. This might have been chosen during installation, in which
	case there is nothing more to be done. If not, you have the option to run OpenSM on
	ordinary nodes too.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_all.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Activating OpenSM on nodes
	  </phrase></textobject>
	  <caption><para>
	    Activating OpenSM on nodes
	  </para></caption>
	</mediaobject>
	In this case, it is advisable to run OpenSM on two or three nodes (not more) for
	redundancy reasons. It is therefore best, to configure this directly for the chosen
	hosts, rather than using a Host Template or generic property set. After selecting the
	host(s) where OpenSM should run in the Enclosure View, open the context menu and select
	<guimenuitem>Set Generic Property</guimenuitem>-><guimenuitem>OpenSM
	Ports</guimenuitem>-><guimenuitem>ALL</guimenuitem>. The next time the host(s) boots,
	the OpenSM daemon will be started on all its Infiniband ports.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring OpenSM to run on a specific port
	  </phrase></textobject>
	  <caption><para>
	    Configuring OpenSM to run on a specific port
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_create_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a new port for OpenSM
	  </phrase></textobject>
	  <caption><para>
	    Adding a new port for OpenSM
	  </para></caption>
	</mediaobject>
	If a host has more than one IB port, OpenSM can also be configured to run only on a
	specific one rather than on all of them. The port can be specified by its number or by
	its unique ID. As this is an uncommon configuration and the unique ID is unknown
	beforehand, there is no preset value for this. To create a new value, first select an
	existing value, e.g. ALL, for the generic property <literal>OpenSM
	Ports</literal>. You can then edit the value in the <classname>Generic
	Properties</classname> box of a host. Editing the line and pressing
	<keycap>return</keycap> will create the new value. Beware that this will only affect
	one shown host. To assign the new value to other hosts, select them and then change
	the OpenSM Ports property through the context menu.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_add.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Adding an OpenSM option
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_edit.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Editing an OpenSM option
	  </para></caption>
	</mediaobject>
	In some circumstances, it might be necessary to run OpenSM with extra options. This can
	also be configured via <link linkend="Generic-Properties">Generic
	Properties</link>. The only preset value is the empty string, so you need to create a
	new value for the options you require. First add the empty value of the generic
	property <classname>OpenSM Options</classname> to one host. Then edit the value to your
	requirements and press <keycap>return</keycap> to create it. Finally add/change the
	OpenSM Options generic property for all relevant hosts.
      </para>
    </section>
  </section>
  <section xml:id="sec-IPMI-Settings">
    <title>IPMI settings</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IPMI settings in the Network Configuration dialog
        </phrase></textobject>
        <caption><para>
          IPMI settings in the Network Configuration dialog
        </para></caption>
      </mediaobject>
      Configuring <firstterm>IPMI</firstterm> is similar to Infiniband and also involves
      multiple steps, because there are a number of options to set. If you have chosen to
      configure an IPMI network during installation, a larger part of this section is about how
      to review or change the initial settings. If not, a network definition for IPMI has to be
      created in the <link linkend="sec-Network-Definitions">Networks</link> dialog.
    </para>
    <para>
      There, an IPMI network address and netmask can be chosen. The IPMI network must not
      collide with any other network. This is prevented automatically in the
      settings dialog. By making the network a slave to the boot network, the IPMI IP of each
      host is computed by mapping the host part of its Boot IP to the IPMI Network. Example:
      If a host's boot network IP address is 192.168.17.100, the corresponding slaved IPMI IP
      address will become 192.168.19.100.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/network-configs__ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          "IPMI-adapter" in the Network Config
        </phrase></textobject>
        <caption><para>
          "IPMI-adapter" in the Network Config
        </para></caption>
      </mediaobject>
      Just as in the case of an IB adapter, the network definition for IPMI must be added to
      the Network Config used by the host. It is not uncommon, that a cluster consists of hosts
      with IPMI and hosts without. In such cases, multiple Network Configs must be created (at
      least one with IPMI and one without IPMI) and assigned to the different hosts in one of
      the standard ways (via templates or directly). If the Network Config for a host includes
      a NIC of type <emphasis>IPMI</emphasis>, the node is ready for monitoring its
      temperature and fan speeds.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_initialize_add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Allowing an IPMI adapter to be initialized during boot
        </phrase></textobject>
        <caption><para>
          Allowing an IPMI adapter to be initialized during boot
        </para></caption>
      </mediaobject>
      Enabling IPMI nodes for remote control involves one more setting: The generic property
      <parameter>Initialize IPMI</parameter>. Per default, the settings of the IPMI cards are
      not touched by <productname>Qlustar</productname> as they retain their configuration
      across boot. However, if the <parameter>Initialize IPMI</parameter> generic property is
      assigned and set to <parameter>true</parameter>, the IPMI card network settings of the
      corresponding host will be set every time it boots. Changing the value of this property
      to <parameter>true</parameter> and after booting back to <parameter>false</parameter>,
      allows a one-time setup of the card's network properties.
    </para>
  </section>
  <section xml:id="sec-Global-Network-Settings">
    <title>Global Network Settings</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/dns_server.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Global Network Settings Dialog
        </phrase></textobject>
        <caption><para>
          Global Network Settings Dialog
        </para></caption>
      </mediaobject>
      Some network settings can not be assigned to a group of nodes but relate to the cluster
      as a whole and how it connects to the outside world. This includes the configuration of
      the <firstterm>dynamic name system (DNS)</firstterm> and the <firstterm>HTTP
      Proxy</firstterm>. To configure these global network settings, open <guilabel>Network
      Settings</guilabel> from the <guimenuitem>Manage
      Cluster</guimenuitem>-><guimenuitem>Global Configs</guimenuitem> menu.
    </para>
    <section xml:id="sec-DNS">
      <title>Dynamic Name System (DNS)</title>
      <para>
	The Dynamic Name System has a hierarchical design. Each correctly configured computer
	knows about a DNS server that will handle local requests. Should the request fall
	outside the scope of the local server, it will ask the next higher server in the
	hierarchy. Starting with Qlustar 11, local DNS requests are handled by
	<application>dnsmasq</application> which will answer requests concerning any QluMan
	configured node automatically. The handling of requests about external hosts are
	affected by three QluMan settings: The external DNS servers, the DNS search domains and
	Cluster-external Hosts.
    </para>
    <section xml:id="sec-DNS-external">
      <title>External DNS servers</title>
      <para>
	External DNS servers will be needed to resolve any DNS request about hosts outside of
	the cluster. Since this is used to resolve hostnames into IP addresses a nameserver
	can not be identified by its hostname, but must be specified by its IP address. This
	are usually servers maintained by the local IT department or by your internet service
	provider (ISP). There are also public DNS servers anyone can use as a fallback, for
	example Googles public DNS server (IP 8.8.8.8).
      </para>
      <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/dns_server__edit.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Editing a DNS server entry
        </phrase></textobject>
        <caption><para>
          Editing a DNS server entry
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/dns_server__save.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Saving the DNS server entry
        </phrase></textobject>
        <caption><para>
          Saving the DNS server entry
        </para></caption>
      </mediaobject>
	The nameserver specified during the installation process should already be set unless
	you upgraded from Qlustar 10.1. If the IP of the nameserver changes, it can be edited
	by either pressing the up/down arrows next to each part of the IP or by clicking at the
	number and entering it directly. Once the correct IP address has been entered it needs
	to be saved by either pressing <keycap>return</keycap>, or by clicking the
	<guibutton>Save</guibutton> button. The <guibutton>Undo</guibutton> button reverts the
	nameserver entry to the last saved IP.
      </para>
      <note>
	<para>
	  Saving changes in this dialog doesn't activate the new config immediately but only
	  saves them in the QluMan database. To finally activate them, the <classname>dnsmasq
	  Config</classname> must be written from the <link
	  linkend="sec-Writing-Config-Files">Write Files window</link>. This will reconfigure
	  and restart the dnsmasq server.
	</para>
      </note>
      <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/dns_server__add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Adding a DNS server
        </phrase></textobject>
        <caption><para>
          Adding a DNS server
        </para></caption>
      </mediaobject>
      For redundancy purposes more than one nameserver can be set. To add an additional
      nameserver click the <guibutton>Add</guibutton> button. This will add a new nameserver
      entry to the GUI defaulting to Googles public DNS server. The entry may then be edited as
      described above. Use this also when upgrading from a previous version of Qlustar to add
      the first nameserver.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/dns_server__up.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Reordering DNS servers
	  </phrase></textobject>
	  <caption><para>
	    Reordering DNS servers
	  </para></caption>
	</mediaobject>
	When a DNS request cannot be answered locally, the external nameservers will be asked
	one by one in the order shown in the GUI. This order can be changed by pressing the
	<guibutton>UP</guibutton> button next to the nameserver. This will move the respective
	nameserver up one position in the list.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/dns_server__del.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Removing a DNS server
	  </phrase></textobject>
	  <caption><para>
	    Removing a DNS server
	  </para></caption>
	</mediaobject>
	When a server is no longer valid or wanted, it can be removed by pressing the
	<guibutton>X</guibutton> button next to the nameserver.
      </para>
    </section>
    <section xml:id="sec-DNS-search-domain">
      <title>DNS search domains</title>
      <para>
	A DNS search domain is what the DNS service will use to resolve hostnames that are not
	fully qualified. A fully qualified domain name is one that can be resolved by working
	down from the root domain (which is just an empty string) and eventually ending up
	with an IP address. In less technical terms, it's one that ends in a top-level-domain
	such as .de, .net, .org, .com, etc..
      </para>
      <para>
	In practice, whenever a device tries to resolve a hostname that can not be resolved as
	is, the resolver code appends search domains to the hostname and tries the resulting
	names one by one to see if it resolves then. The list of search domains usually
	contains at least the main domain of the organization the cluster is located at, but
	often also sub-domains of it. Example: The search domain list contains
	my-department.my-firm.com and my-firm.com. A look-up for the host mailserv will then
	first try mailserv as is. If that fails, mailserv.my-department.my-firm.com is tried
	and if that also fails, finally mailserv.my-firm.com. This mechanism allows using the
	shorter hostname to refer to some hosts that are outside the cluster.
     </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/search_domains__edit.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing a search domain
	  </phrase></textobject>
	  <caption><para>
	    Editing a search domain
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/search_domains__add.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a search domain
	  </phrase></textobject>
	  <caption><para>
	    Adding a search domain
	  </para></caption>
	</mediaobject>
      	A search domain may be edited by clicking the text-field for the domain. As soon as
      	changes are made, the <guibutton>Undo</guibutton> and <guibutton>Save</guibutton>
      	buttons will become enabled. Changes are saved by either pressing
      	<keycap>return</keycap>, or by clicking the <guibutton>Save</guibutton> button. An
      	additional search domain can be included by clicking the <guibutton>add</guibutton>
      	button.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/search_domains__up1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Reordering search domains
	  </phrase></textobject>
	  <caption><para>
	    Reordering search domains
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/search_domains__up2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Deleting a search domain
	  </phrase></textobject>
	  <caption><para>
	    Deleting a search domain
	  </para></caption>
	</mediaobject>
	The search domains will be tried in the order shown in the GUI. Just like with the
	nameserver entries, the order can be changed by clicking the <guibutton>up</guibutton>
	button. This will move the selected domain one slot upwards. Search domains can also
	be removed by clicking the <guibutton>X</guibutton> button.
	</para>
	<note>
	  <para>
	    The DNS search domains are set via DHCP on each host as it boots and are not
	    updated at runtime. So any changes made, will only affect hosts booted after the
	    change was saved. Already running hosts need to be rebooted to catch the change.
	  </para>
	</note>
    </section>
    <section xml:id="sec-Cluster-external-Hosts">
      <title>Cluster-external Hosts</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/external_host.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Definitions of cluster-external hosts
	  </phrase></textobject>
	  <caption><para>
	    Definitions of cluster-external hosts
	  </para></caption>
	</mediaobject>
	While QluMan automatically manages the DNS entries for the nodes in the cluster (any
	node that is shown in the <link linkend="sec-Enclosure-View">Enclosure view</link>),
	sometimes there are also hosts outside of the cluster networks that QluMan should know
	about, e.g. external file-servers that are used in <link
	linkend="sec-Filesystem-Exports">Filesystem Exports</link>.
      </para>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/network_settings/external_host__add.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a cluster-external hosts
          </phrase></textobject>
          <caption><para>
            Adding a cluster-external hosts
          </para></caption>
        </mediaobject>
	To add an entry for such an external host, simply click the <guibutton>Add</guibutton>
	button and enter its name. QluMan also allows to add the host to the DNS config for
	the cluster, but by default, for new entries that is not the case, and the
	<guibutton>DNS external</guibutton> checkbox is checked.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/external_host__with_ip.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a DNS entry for a cluster-external host
	  </phrase></textobject>
	  <caption><para>
	    Adding a DNS entry for a cluster-external host
	  </para></caption>
	</mediaobject>
	To add a DNS entry for a cluster-external host, uncheck the <guibutton>DNS
	external</guibutton> checkbox. This activates the IP widget and you can enter the
	correct IP. To finalize the input and save the IP, press <keycap>return</keycap> or
	click the <guibutton>Save</guibutton> button.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/external_host__edit1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing a cluster-external host
	  </phrase></textobject>
	  <caption><para>
	    Editing a cluster-external host
	  </para></caption>
	</mediaobject>
	The name or IP of a cluster-external host may be edited at any time by selecting it,
	or by clicking the <guibutton>up</guibutton>/<guibutton>down</guibutton> arrows on the
	IP. Don't forget to press <keycap>return</keycap> or click the
	<guibutton>Save</guibutton> button to confirm the changes.
      </para>
      <note>
	<para>
	  To finally activate the changes to cluster-external hosts the <classname>dnsmasq
	  Config</classname> must be written from the Write Files window (see <xref
	  linkend="sec-Writing-Config-Files"/>). This will reconfigure and restart the dnsmasq
	  server so the new settings take effect. However this will only affect the DNS part of
	  the change. If hostnames used for <link linkend="sec-Filesystem-Exports">Filesystem
	  Exports</link> definitions are involved, a host that uses the corresponding mounts
	  will see the change only the next time it boots.
	</para>
      </note>
    </section>
    <section xml:id="sec-qlustar-common-path">
      <title>Netboot</title>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_settings/qlustar_common.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the qlustar/common path
        </phrase></textobject>
        <caption><para>
          Setting the qlustar/common path
        </para></caption>
      </mediaobject>
      <para>
        The qlustar/common path specifies the location of the <link
        xlink:href="../Administration_Manual/index.html#admin-man-sect-config-dir___blank___">cluster-wide
        configuration directory</link> on the head-node that is used for its NFS export.  This
        path value should not be changed unless there is a good reason for it. A custom value
        is usually required only for a head-node setup in high-availability mode.
      </para>
    </section>
    <section xml:id="sec-HTTP-Proxy">
      <title>Other Network Settings</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/proxy__none.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    HTTP Proxy configuration
	  </phrase></textobject>
	  <caption><para>
	    HTTP Proxy configuration
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/proxy__name.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Setting a name for the proxy server
	  </phrase></textobject>
	  <caption><para>
	    Setting a name for the proxy server
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/proxy__ip.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Setting an IP for the proxy server
	  </phrase></textobject>
	  <caption><para>
	    Setting an IP for the proxy server
	  </para></caption>
	</mediaobject>
	Sometimes the cluster head-node does not have direct access to the internet and
	requires a proxy server for a connection to the Qlustar repository servers. To enable
	support for such scenarios, click the check-mark before <guilabel>Http Proxy</guilabel>
	and enter the hostname of the proxy server together with the proxy port.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_settings/proxy__auth.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Setting authentication info for the proxy server
	  </phrase></textobject>
	  <caption><para>
	    Setting authentication info for the proxy server
	  </para></caption>
	</mediaobject>
	If the proxy requires authentication, click the check-mark before
	<guilabel>Authenticate</guilabel> and enter a username and password.
	The <guilabel>Http Proxy</guilabel> and <guilabel>User/Pass</guilabel> label will turn
	green when entries are edited with acceptable input but have not been saved yet. The
	labels will turn red when the current input is invalid and turn back to black once the
	input has been saved. The input can be saved by pressing <keycap>return</keycap>, or
	will be saved automatically when the input field looses focus. Leaving the user name
	field empty will disable authentication just the same as clearing the
	<guilabel>Authenticate</guilabel> check-mark.
      </para>
    </section>
  </section>
  </section>
</chapter>

