<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-Cluster-Network-Setup">
  <title>Cluster Network Setup</title>
  <para>
    Starting from Qlustar 10, the configuration of networks has been reimplemented and
    become a lot more powerful. An arbitrary number of networks of different types and with
    different properties can now be configured for a cluster. There is a new network config
    class that allows networks to be grouped in any number of network configs. The idea is,
    that any such network config reflects the network adapter configuration of a single or a
    group of nodes. Finally such a network config can be assigned to <link
    linkend="PropConf-Sets">Config Sets</link> or directly to cluster nodes. According to the
    chosen network config for a node, individual node network properties like IP or MAC
    addresses can then be assigned to the node in the <link
    linkend="sec-Enclosure-View">Enclosure View</link>.
  </para>
  <section xml:id="sec-Network-Definitions">
      <title>Network Definitions</title>
    <para>
      During the installation of Qlustar, the basic configuration parameters for the cluster
      network had to be entered. Often, additional networks need to be defined later. This
      can be accomplished within the networks dialog selectable via <guibutton>Manage
      Cluster</guibutton>-><guibutton>Networks</guibutton> from the main windows menu.
    </para>
    <mediaobject>
      <imageobject><imagedata
      fileref="images/network_config/networks.png"
      width="85%" format="PNG"/></imageobject>
      <textobject><phrase>
        Networks dialog
      </phrase></textobject>
      <caption><para>
        Networks dialog
      </para></caption>
    </mediaobject>
    <para>
      The Networks window displays all defined networks each in a separate tab. Each tab shows
      all the configurable parameter that define the corresponding network. The base settings
      of a network are its IP address and netmask as well as an optional gateway
      address. QluMan distinguishes two types of networks: <firstterm>Primary
      Networks</firstterm> and <firstterm>Slave Networks</firstterm>.
    </para>
    <para>
      A primary network is one that determines the IP address of a host using one of the
      options listed in the <guilabel>Configure via</guilabel> section of the dialog. The
      available options are:
      <variablelist>
	<varlistentry>
	  <term>
	    DHCP (boot)
	  </term>
	  <listitem>
	    <para>
	      Configuration via the DHCP server running on the headnode. This allows the host
	      to boot over the network using PXE. Every cluster must have one such network and
	      it is created automatically during the Qlustar installation process according to
	      the data provided from the installer.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    DHCP (external)
	  </term>
	  <listitem>
	    <para>
	      Configuration by an external DHCP server not under the control of QluMan. This
	      option only makes sense for nodes that have an adapter connected to a
	      cluster-external network, like e.g. a cluster FrontEnd node.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Static
	  </term>
	  <listitem>
	    <para>
	      Static configuration for each host individually. Select
	      <guibutton>Static</guibutton> for this method. The last two options are usually
	      used for the external networks of the headnode and login nodes.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </para>
    <para>    
      A slave network on the other hand, is tied to a primary network. The idea is, that the IP
      of a host in the slave network is determined by mapping the host part of the IP in the
      primary network into the network range of the slave network. In most cases, this means
      that the host IP of the primary and slave networks end in the same number. This is a
      convenient feature, mostly used for Infiniband and IPMI networks. It saves you from
      registering/managing additional MAC/IP addresses and makes IPs easily recognizable as
      belonging to the same host.
    </para>
    <note>
      <para>
	This mechanism requires the netmask of the slave network to be at least as large as the
	primary network it is slaved to. Hence, the GUI prevents smaller values to be selected.
      </para>
    </note>
    <bridgehead>
      Configuring the Boot network
    </bridgehead>
    <para>
    <mediaobject>
      <imageobject><imagedata
      fileref="images/network_config/boot.png"
      width="85%" format="PNG"/></imageobject>
      <textobject><phrase>
        The Boot network dialog
      </phrase></textobject>
      <caption><para>
        The Boot network dialog
      </para></caption>
    </mediaobject>
      Qlustar uses network-booting via PXE to start nearly all hosts in the cluster. The only
      system(s) that can not be network-booted is the <firstterm>headnode(s)</firstterm>
      itself. Every cluster should therefore have a network that is a <guibutton>Primary
      Network</guibutton> and configured via <guibutton>DHCP (boot)</guibutton>. Such a network
      is created by the Qlustar installer and called <classname>Boot</classname>. Changes to
      this network are rarely necessary but if changes were made, all nodes must be rebooted to
      get the updated configuration.
    </para>
    <note>
      <para>
	Changing the network address or mask may also require additional manual changes in the
	config of hosts booting from disk, specifically the <firstterm>headnode</firstterm>
	itself.
      </para>
    </note>
    <para>
      The IP addresses and MACs of individual hosts can be configured in the <link
      linkend="sec-Enclosure-View">Enclosure View</link> once the host has been assigned to a
      network config. As with other settings/configs, this assignment can also be done in the
      <link linkend="sec-Enclosure-View">Enclosure View</link> by assigning a network config in
      one of the available ways (direct assignment, host or global template).
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/invalid-network.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Invalid network configuration
        </phrase></textobject>
        <caption><para>
          Invalid network configuration
        </para></caption>
      </mediaobject>
      The GUI has some safeguards to prevent invalid network configurations. For example
      different networks must not overlap. Attempting to change the network address so that it
      overlaps another network won't be accepted: The <guibutton>Save</guibutton> button at the
      bottom of the window will be disabled and a red LED icon will appear with a tool-tip
      explaining why the selected configuration is not allowed.
    </para>
    <para>
      When changing the network IP address or netmask, the IP addresses of all hosts configured
      to be in that network will be remapped to reflect the changed values. This requires that
      a new netmask is large enough, so that the resulting network range can include all
      existing hosts in the cluster. Therefore, the GUI won't let you pick anything too
      small. If there are unused address ranges in the existing network and you need a smaller
      netmask than currently selectable, you will first have to change some host addresses so
      that all of them combined occupy a small enough subset of the current network.
    </para>
    <para>
      Changing the network address IP will automatically remap the cluster internal Head IP
      address as well, while changing the netmask will not. Note, that the Qlustar
      convention, to use the second last IP of the cluster network as the Head IP, is
      obviously not a requirement. Hence, this is not done automatically when changing the
      netmask. Furthermore, changing the Head IP involves some additional steps without which
      the nodes in the cluster won't function or even boot. The reason is that the Head IP
      also appears in the <classname>Global DHCP Template</classname> and may have been added
      to other templates too. These templates are simple, freely editable text blobs. A
      change of the network definitions will not change them, so you need to check and adjust
      each of them manually.
    </para>
    <para>
      Changes to the networks definition have wide-ranging effects. To prevent accidental
      changes or booting hosts while in between configurations any changes to the network are
      not saved instantly. Instead the <guibutton>Save</guibutton> button at the bottom of the
      window needs to be clicked to confirm the changes. Alternatively, the
      <guibutton>Undo</guibutton> button can be used to revert any changes to the last saved
      values. Any changes to a network must be saved or reverted before switching tabs or
      closing the window.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/proxy.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Configuring an HTTP proxy
        </phrase></textobject>
        <caption><para>
          Configuring an HTTP proxy
        </para></caption>
      </mediaobject>
      If the head-node does not have direct access to the Internet, a <parameter>http
      proxy</parameter> must be configured. QluMan uses this proxy to download packages from
      the <guilabel>Qlustar repository</guilabel>, when creating a new chroot. Open the HTTP
      proxy settings from the <guimenuitem>Manage Cluster</guimenuitem>-><guimenuitem>Global
      Configs</guimenuitem> menu. Click the
      check-mark before <guilabel>Http Proxy</guilabel> to enable proxy support and enter the
      hostname together with the port of the proxy. If the proxy requires authentication,
      click the check-mark before <guilabel>Authenticate</guilabel> and enter a username and
      password. The <guilabel>Http Proxy</guilabel> label and <guilabel>User/pass</guilabel>
      label will turn green when you edit the entries, the new input is acceptable but has
      not been saved. The labels will turn red when the current input is invalid and turn
      back to black once the input has been saved. The input can be saved by pressing return
      or will be saved automatically when the input field looses focus. Note that specifying
      an empty user name will disable authentication as will clearing the
      <guilabel>Authenticate</guilabel> check-mark.
    </para>
    <bridgehead>
      Configuring slave networks
    </bridgehead>
    <para>
      For convenience, in a cluster with Infiniband and/or IPMI, the corresponding networks are
      usually setup to mirror the Boot network: If the Boot IP of a host ends in .10 then the
      Infiniband and IPMI IPs will usually also end in .10. Within QluMan, this relationship
      can be set up by configuring these special networks as a slave to the Boot network: In
      the tab of the network under consideration, simply select the network to be slaved to
      from the drop-down menu.
    </para>
    <para>
       In a slave network, the IP of a host is always derived from its IP in the network it is
       slaved to. During the initial part of a node's boot process, the qluman-execd writes the
       resulting static slave network information into the relevant configuration file, so that
       the adapter will later be configured via standard OS methods. Hence, the IPs in the
       slave network don't need to be set for each host individually.
    </para>
    <para>
      The hostnames corresponding to the IPs in the slave network are also under control of
      this mechanism. The name of a host in a slave network will be auto generated using the
      QluMan node name of the host as the stem and adding a prefix and/or postfix separated by
      a dash to it. The default Infiniband network setup for example has a postfix of "ib",
      meaning a host named <parameter>beo-01</parameter> will be reachable on the Infiniband
      network as <parameter>beo-01-ib</parameter>. Such pre/postfixes may be set/changed
      in the configuration dialog of the network.
    </para>
    <note>
      <para>
        Hostnames generated by QluMan are added to the DHCP (boot network only), NIS and ssh
        configs allowing them to be used within the cluster where necessary.
      </para>
    </note>
  </section>
  <section xml:id="sec-Network-Configs">
    <title>Network Configs</title>
    <para>
      <!--cbox(file: network_config/network-configs.png: Network Configs dialog)-->
      Starting from QluMan10/Qlustar 10 a new config class
      <firstterm>Network Config</firstterm> has been added. This allows combining different
      network definitions from above for different hardware configurations and to assign this
      Network Config to the Global Template, Host Templates or individual hosts depending
      on circumstances. Every host should have a Network Config and at most one Network Config
      can be assigned to each host and must match the hosts hardware.
    </para>
    <note>
      <para>
        Hosts with different hardware may need different Network Configs even though they
        share the same networks because the hardware specific device name of each NIC
        differs.
      </para>
    </note>
    <para>
      <!--cbox(file: network_config/select-network-config.png: Selecting a Network Config)-->
      There can be any number of Network Configs and only one is shown at a time. To view or
      edit a different Network Config select the desired entry from the drop down menu.
    </para>
    <para>
      The configuration of the selected Network Config is shown as a tree. The top level items
      list the network definitions showing both the name and the network/mask of the
      respective network. Below that lists the NIC showing the name and network type of the
      hardware device. QluMan supports 3 types of NICs: <firstterm>ETHER</firstterm> for
      Ethernet, <firstterm>IB</firstterm> for Infiniband and <firstterm>IPMI</firstterm>.
    </para>
  </section>
  <section xml:id="sec-Create-Network-Config">
    <title>Creating a Network Config</title>
    <para>
      <!--cbox(file: network_config/create-network-config.png: )-->
      <!--cbox(file: network_config/new-network-config.png: )-->
      A new Network Config can be created by clicking the <guibutton>New</guibutton> button.
      This opens a dialog asking for the name of the new Network Config. Entering a unused
      name and pressing the <guibutton>Ok</guibutton> button will create a new Network Config
      and switch the Networks Configs dialog to the new config. Initially this will be empty.
    </para>
    <para>
      <!--cbox(file: network_config/delete-network-config-error.png: )-->
      A Network Config can be deleted by clicking the <guibutton>Delete</guibutton> button.
      A Network Config can only be deleted if it is no longer used to configure a host or
      just included in a Config Set. If the Network Config is still in use an error dialog
      will pop up describing where it is used.
    </para>
  </section>
  <section xml:id="sec-Add-Network">
    <title>Adding a Network</title>
    <para>
      <!--cbox(file: network_config/add-network.png: )-->
      <!--cbox(file: network_config/select-nic-for-network.png: )-->
      A Network can be added to the Network Config by selecting a network definition from the
      <guimenuitem>Add Network</guimenuitem> in the context menu. This opens a dialog to
      select the type and name of the NIC to be used for the network.
    </para>
    <para>
      <!--cbox(file: network_config/select-nic-for-network__type.png: )-->
      <!--cbox(file: network_config/select-nic-for-network__name.png: )-->
      The type of NIC used for the network should be selected first from the drop down menu.
      This will suggest a name for the NIC from previously used names of the same type. The
      drop down menu for the NIC name contains all the previously used names of the same type
      for easy selection. A new name can also be entered directly in case the NIC has a
      different name than previously encountered.
    </para>
    <para>
      The name for Ethernet adaptors is generated by systemd according to the way the
      Ethernet chip is wired into the mainboard or where the network card is plugged in in
      case of additional cards. This creates a name that is persistent even when a NIC fails or
      a new card is added later and ensures the same configuration is always used for the
      same NIC on every boot.
    </para>
    <note>
      <para>
        The special name <filename>BOOT</filename> is used to mean the NIC that is used to
        boot the system irrespective of the actual name. This allows for a default config
        that works on any hardware and is sufficient for most cases. It should be the choice
        for the boot network.
      </para>
    </note>
    <para>
      The name for Infiniband adaptors is the name of the <firstterm>IP-over-IB</firstterm>
      device in the kernel, which has the form <filename>ib<N></filename> starting with
      <filename>ib0</filename>. Even simpler the the name for IPMI adaptors is
      <filename>ipmi0</filename>.
    </para>
    <para>
      <!--cbox(file: network_config/select-nic-for-network__done.png: )-->
      After selecting the NIC type and name click <guibutton>OK</guibutton> and it will appear
      if the Network Config dialog. If more networks are wanted simply repeat until all
      networks have been added.
    </para>
  </section>
  <section xml:id="sec-Configuring-IB">
    <title>Infiniband Network</title>
    <para>
      For most practical purposes, <firstterm>Infiniband (IB)</firstterm> adapters need to be
      configured with an IP address (IPoIB) just like Ethernet adapters. If you have chosen to
      configure an IB network during installation, this section is mostly about how to review
      or change the initial settings. If not, a network definition for
      IB has to be created in the <link linkend="sec-Network-Definitions">Networks</link> dialog.
      An IB Network
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/infiniband.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IB network definition in the Networks dialog
        </phrase></textobject>
        <caption><para>
          IB network definition in the Networks dialog
        </para></caption>
      </mediaobject>
      address IP and netmask can then be chosen there. The Infiniband network must not collide
      with any other network. This is prevented automatically in the
      settings dialog. By making the network a slave to the boot network the Infiniband IP of each
      host is computed by mapping the host part of its Boot IP to the IB Network. Example: Boot IP
      Network 192.168.17.100 - IP IB network 192.168.18.100.
    </para>
    <note>
      <para>
	This mechanism requires the IB netmask to be at least as large as the Boot Network
	netmask. Hence, smaller values won't be selectable.
      </para>
    </note>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/network-configs__ib.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          "IB-adapter" in the Network Config
        </phrase></textobject>
        <caption><para>
          "IB-adapter" in the Network Config
        </para></caption>
      </mediaobject>
      In order to have a configured IB adapter during the boot process of a node, the network
      definition must also be added to the Network Config used by the host. It is not uncommon,
      that a cluster consists of hosts with IB and hosts without. In such cases multiple
      Network Configs must be created, with IB and without IB, and assigned to the
      different hosts. This is done most conveniently, by adding this
      property to the Config Set(s) used in the Host Template(s). If the Network Config for a host
      includes a NIC of type <parameter>IB</parameter> then Infiniband modules will be loaded and IP-over-IB will be
      configured during the boot process of the corresponding nodes with the IP mapping
      configured in the network definition.
    </para>
    <!-- FIXME: not implemented yet
    <note>
      <para>
	The <link linkend="chap-HWwizard">Hardware Wizard</link> auto-detects the presence of
	IB adapters and allows to conveniently recommends Network Configs that include an IB
	adapter.
      </para>
    </note>
    -->
    <section xml:id="sec-Configuring-OpenSM">
      <title>Activating/configuring OpenSM</title>
      <para>
	In an IB fabric, at least one node (or switch) has to run a subnet manager to manage
	the IB routing tables. Qlustar provides <application>OpenSM</application> for this
	task. If the head-node is also part of the IB network, it's usually best to configure
	it to run OpenSM. This might have
	been chosen during installation, in which case there is nothing more to be done. If
	not, you have the option to run OpenSM on ordinary nodes too.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_all.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Activating OpenSM on nodes
	  </phrase></textobject>
	  <caption><para>
	    Activating OpenSM on nodes
	  </para></caption>
	</mediaobject>
	In this case, it is advisable to run OpenSM on two or three nodes (not more) for
	redundancy reasons. It is therefore best, to configure this directly for the chosen
	hosts, rather than using a Host Template or generic property set. After selecting the
	host(s) where OpenSM should run in the Enclosure View, open the context menu and select
	<guimenuitem>Set Generic Property</guimenuitem>-><guimenuitem>OpenSM
	Ports</guimenuitem>-><guimenuitem>ALL</guimenuitem>. The next time the host(s) boots,
	the OpenSM daemon will be started on all its Infiniband ports.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring OpenSM to run on a specific port
	  </phrase></textobject>
	  <caption><para>
	    Configuring OpenSM to run on a specific port
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_create_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a new port for OpenSM
	  </phrase></textobject>
	  <caption><para>
	    Adding a new port for OpenSM
	  </para></caption>
	</mediaobject>
	If a host has more than one IB port, OpenSM can also be configured to run only on a
	specific one rather than on all of them. The port can be specified by its number or by
	its unique ID. As this is an uncommon configuration and the unique ID is unknown
	beforehand, there is no preset value for this. To create a new value, first select an
	existing value, e.g. ALL, for the generic property <literal>OpenSM
	Ports</literal>. You can then edit the value in the <classname>Generic
	Properties</classname> box of a host. Editing the line and pressing
	<keycap>return</keycap> will create the new value. Beware that this will only affect
	one shown host. To assign the new value to other hosts, select them and then change
	the OpenSM Ports property through the context menu.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_add.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Adding an OpenSM option
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_edit.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Editing an OpenSM option
	  </para></caption>
	</mediaobject>
	In some circumstances, it might be necessary to run OpenSM with extra options. This can
	also be configured via <link linkend="Generic-Properties">Generic
	Properties</link>. The only preset value is the empty string, so you need to create a
	new value for the options you require. First add the empty value of the generic
	property <classname>OpenSM Options</classname> to one host. Then edit the value to your
	requirements and press <keycap>return</keycap> to create it. Finally add/change the
	OpenSM Options generic property for all relevant hosts.
      </para>
    </section>
  </section>
  <section xml:id="sec-IPMI-Settings">
    <title>IPMI settings</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IPMI settings in the Network Configuration dialog
        </phrase></textobject>
        <caption><para>
          IPMI settings in the Network Configuration dialog
        </para></caption>
      </mediaobject>
      Configuring <firstterm>IPMI</firstterm> is similar to Infiniband and also involves
      multiple steps, because there are a number of options to set. If you have chosen to
      configure an IPMI network during installation, a larger part of this section is about how
      to review or change the initial settings. If not, IPMI first has to be activated in the
      <link linkend="sec-Configuring-the-Network">Network Configuration</link> dialog. There
      you can set the IPMI Network address IP and netmask. The IPMI address of a host is then
      determined with the same mapping as used when <link
      linkend="sec-Configuring-IB">configuring IB</link> and the same restrictions for the
      choice of netmask apply.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/hardware_property_set/ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the Hardware Property "IPMI-adapter"
        </phrase></textobject>
        <caption><para>
          Setting the Hardware Property "IPMI-adapter"
        </para></caption>
      </mediaobject>
      Sometimes, not all nodes in a cluster have IPMI. Therefore per default, no host is
      configured to setup IPMI in <application>QluMan</application>, unless it is assigned the
      hardware property <literal>IPMI Adapter</literal> with a value of
      <parameter>true</parameter>. The easiest way to achieve this, is to add the <literal>IPMI
      Adapter</literal> property to the Hardware Property Set(s) used in the Host Template(s)
      for the nodes with IPMI. With this assignment, a node is ready for monitoring its
      temperature and fan speeds.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_initialize_add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Allowing an IPMI adapter to be initialized during boot
        </phrase></textobject>
        <caption><para>
          Allowing an IPMI adapter to be initialized during boot
        </para></caption>
      </mediaobject>
      Enabling IPMI nodes for remote control involves two more settings. The first one is the
      generic property <parameter>Initialize IPMI</parameter>. Per default the settings of the
      IPMI cards are not touched by <productname>Qlustar</productname>. However, if the
      <parameter>Initialize IPMI</parameter> generic property is assigned and set to
      <parameter>true</parameter>, the IPMI card network settings of the corresponding host
      will be set every time it boots. Changing the value of this property to
      <parameter>true</parameter> and after booting back to <parameter>false</parameter> allows
      a one-time setup of the cards network properties.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_channel_add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the network channel of an IPMI adapter
        </phrase></textobject>
        <caption><para>
          Setting the network channel of an IPMI adapter
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_channel_edit.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Editing the network channel of an IPMI adapter
        </phrase></textobject>
        <caption><para>
          Editing the network channel of an IPMI adapter
        </para></caption>
      </mediaobject>
      The second generic property is the <parameter>IPMI Channel</parameter> to use. Per
      default channel 1 is used and this is the only preset value for the property. If you
      need to use a different channel, first add the generic property <parameter>IPMI
      Channel</parameter> to the <classname>Generic Property Set</classname> (or to a host
      directly) and then edit the value.
    </para>
  </section>
</chapter>

