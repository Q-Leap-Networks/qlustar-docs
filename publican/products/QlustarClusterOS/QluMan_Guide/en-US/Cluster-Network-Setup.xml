<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-Cluster-Network-Setup">
  <title>Cluster Network Setup</title>
  <para>
    Starting from Qlustar 10, the configuration of networks has been reimplemented and
    become a lot more powerful. An arbitrary number of networks of different types and with
    different properties can now be configured for a cluster. There is a new network config
    class that allows networks to be grouped in any number of network configs. The idea is,
    that any such network config reflects the network adapter configuration of a single or a
    group of nodes. Finally such a network config can be assigned to <link
    linkend="PropConf-Sets">Config Sets</link> or directly to cluster nodes. According to the
    chosen network config for a node, individual node network properties like IP or MAC
    addresses can then be assigned to the node in the <link
    linkend="sec-Enclosure-View">Enclosure View</link>.
  </para>
  <section xml:id="sec-Network-Definitions">
      <title>Network Definitions</title>
    <para>
      During the installation of Qlustar, the basic configuration parameters for the cluster
      network had to be entered. Often, additional networks need to be defined later. This
      can be accomplished within the networks dialog selectable via <guibutton>Manage
      Cluster</guibutton>-><guibutton>Networks</guibutton> from the main windows menu.
    </para>
    <!–cbox(file: images/network_config/networks.png caption: Networks dialog)–>
    <para>
      The Networks window shows all defined networks using tabs. Each tabs shows all the
      parameter that define a single network. This starts with the IP address, netmask and
      optional a gateway to the outside world. Qluman distinguishes two types of networks:
      <firstterm>Primary Networks</firstterm> and <firstterm>Slave Networks</firstterm>.
    </para>
    <para>
      A primary network is one that determines the IP address of a host using one of the
      <guilabel>Configure via</guilabel> options. The IP can be configured using the DHCP
      server running on the headnode by selecting <guibutton>DHCP (boot)</guibutton>. This
      allows the host to boot over the network using PXE and every cluster will have one such
      network. The IP can also be requested from an external DHCP server not under the control
      of QluMan by selecting <guibutton>DHCP (external)</guibutton> or configured static for
      each host individually by selecting <guibutton>Static</guibutton>. The last two options
      are usualy used for the external networks of the headnode and login nodes.
    </para>
    <para>    
      A slave network on the other hand is slaved to a primary network and the IP of a host is
      determined by mapping the host part of the IP in the primary network into the network
      range of the slave network. In usual confiuration this means the host IPs end in the same
      number for the primary and slave networks. This is generally used for the Infiniband and
      IPMI networks and makes IPs easily recognizable as belonging to the same host.
    </para>
    <note>
      <para>
	This mechanism requires the netmask of the slave network to be at least as large as the
        primary network it is slaved too. Hence, smaller values won't be selectable.
      </para>
    </note>
    <bridgehead>
      Configuring the Boot network
    </bridgehead>
    <para>
    <!–cbox(file: images/network_config/boot.png caption: Boot network)–>
      QluMan uses network booting via PXE to start nearly all hosts in the cluster. The only
      system that can not be network booted is the <firstterm>headnode</firstterm> itself.
      Every cluster should therefore have a network that is a <guibutton>Primary
      Networks</guibutton> and configured via <guibutton>DHCP (boot)</guibutton>. A network
      like this is created by the installer and called <classname>Boot</classname>. Changes to
      this network should only be done when the cluster is offline and after a change all nodes
      must be booted fresh to get the updated configuration.
    </para>
    <note>
      <para>
	Changing the network address or mask may also require additional changes in the config
        of hosts booting from disk, specifically the <firstterm>headnode</firstterm>
        itself.
      </para>
    </note>
    <para>
      The IP addresses and MACs of individual hosts can be configured in the <link
      linkend="sec-Enclosure-View">Enclosure View</link> once the host has be assigned to a
      network. This can also be done in the <link
      linkend="sec-Enclosure-View">Enclosure View</link> by assigning a network directly or
      more generally by adding a network config to a Config Set and the Config Set to a Host
      Template.
    </para>
    <para>
      <!–cbox(file: images/network_config/invalid-network.png caption: Invalid network config)–>
      The GUI has some safeguards to prevent invalid network configurations. For example
      different networks must not overlap. Attempting to change the network address so that it
      overlaps another network won't accept the change. The <guibutton>Save</guibutton> button
      at the bottom of the window will be disabled. A red LED icon will also appear with a
      tooltip explaining why the selected configuration can not be accepted.
    </para>
    <para>
      When changing the network IP address or netmask, the IP addresses of all hosts configured
      to be in that network will be remapped to reflect their new values. This requires that
      the new netmask is large enough, so that the resulting network range can include all
      existing hosts in the cluster. Therefore, the GUI won't let you pick anything too
      small. If there are unused address ranges in your existing network and you need a smaller
      netmask than currently selectable, you will first have to change some host addresses so
      that all of them combined occupy a small enough subset of the current network.
    </para>
    <para>
      Changing the network address IP will automatically remap the cluster internal Head IP
      address as well, while changing the netmask will not. Note, that the Qlustar
      convention, to use the second last IP of the cluster network as the Head IP, is
      obviously not a requirement. Hence, this is not done automatically when changing the
      netmask. Furthermore, changing the Head IP involves some additional steps without which
      the nodes in the cluster won't function or even boot. The point is that the Head IP
      also appears in the <classname>Global DHCP Template</classname> and may have been added
      to other templates. These templates are simple, freely editable text blobs. A
      change of the network definitions will not change them, so you need to check and adjust
      each of them manually.
    </para>
    <para>
      Changes to the networks definition have wide ranging effects. To prevent accidental
      changes or booting hosts while in between configurations any changes to the network are
      not saved instantly. Instead the <guibutton>Save</guibutton> button at the bottom of the
      window needs to be clicked to confirm the changed. Alternatively the
      <guibutton>Undo</guibutton> button can be used to revert any changes to the last saved
      values. Any changes to a network must be saved or reverted before switching tabs or
      closing the window.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/proxy.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Configuring an http proxy
        </phrase></textobject>
        <caption><para>
          Configuring an http proxy
        </para></caption>
      </mediaobject>
      If the head-node does not have direct access to the Internet, a <parameter>http
      proxy</parameter> must be configured. Qluman uses this proxy to download packages from
      the <guilabel>Qlustar repository</guilabel>, when creating a new chroot. Click the
      checkmark before <guilabel>Http Proxy</guilabel> to enable proxy support and enter the
      hostname together with the port of the proxy. If the proxy requires authentication,
      click the checkmark before <guilabel>Authenticate</guilabel> and enter a username and
      password. Like usual, the new settings will only take affect, when you click the
      <guibutton>Save</guibutton> button.
    </para>
    <bridgehead>
      Configuring slave networks
    </bridgehead>
    <para>
      In a cluster that has Infiniband or IPMI the respective networks are usually setup to
      mirror the ethernet network. If the IP of the host ends in .10 then the Infiniband and
      IPMI IPs will usually also end in .10. In QluMan this can be set up by configuring the
      network as a slave to the ethernet network by selecting a network to be slaved to from
      the drop down menu.
    </para>
    <para>
       A slave network always determines the IP of a host from the IP in the network it is
       slaved to and configures it automatically via the qluman-execd at boot. The IP in the
       slave network doesn't need to be set for each host individually. The hostname used in
       the NIS config for the IP in the slave network is also simplified. The name of a host in
       that network can also be autogenerated using the QluMan name of the host as stem and
       adding a prefix and/or postfix separated by a dash. The default Infiniband network setup
       for example has a postfix of "ib", meaning a host named <parameter>beo-01</parameter>
       will be reachable on the Infiniband network as <parameter>beo-01-ib</parameter>.
    </para>
    <note>
      <para>
        Hostnames are added to the DHCP (boot network only), NIS and ssh configs (not IPMI)
        allowing them to be used within the cluster.
      </para>
    </note>
  </section>
    <section xml:id="sec-Network-Configs">
    <title>Network Configs</title>
    <para>
    </para>
  </section>
    <section xml:id="sec-Configuring-IB">
    <title>Infiniband Network</title>
    <para>
      For most practical purposes, <firstterm>Infiniband (IB)</firstterm> adapters need to be
      configured with an IP address (IPoIB) just like Ethernet adapters. If you have chosen to
      configure an IB network during installation, this section is mostly about how to review
      or change the initial settings. If not, IB has to be activated first in the <link
      linkend="sec-Configuring-the-Network">Network Configuration</link> dialog. An IB Network
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/infiniband.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IB settings in the Network Configuration dialog
        </phrase></textobject>
        <caption><para>
          IB settings in the Network Configuration dialog
        </para></caption>
      </mediaobject>
      address IP and netmask can then be chosen there. The Infiniband network must not collide
      with the Cluster (Ethernet) or IPMI network. This is prevented automatically in the
      settings dialog. The Infiniband IP of each host is computed by mapping the host part of
      its Cluster Network IP to the IB Network. Example: IP Cluster Network 192.168.52.100 - IP
      IB network 192.168.53.100.
    </para>
    <note>
      <para>
	This mechanism requires the IB netmask to be at least as large as the Cluster Network
	netmask. Hence, smaller values won't be selectable.
      </para>
    </note>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/hardware_property_set/ib.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the Hardware Property "IB-adapter"
        </phrase></textobject>
        <caption><para>
          Setting the Hardware Property "IB-adapter"
        </para></caption>
      </mediaobject>
      In order to have a configured IB adapter during the boot process of a node, additional
      steps are necessary. It is not uncommon, that a cluster consists of hosts with IB and
      hosts without. Therefore, the pre-defined hardware property <parameter>IB
      Adapter</parameter> with a value of <parameter>true</parameter> must be assigned to a
      host, to explicitly enable IB for it. This is done most conveniently, by adding this
      property to the Hardware Property Set(s) used in the Host Template(s) for nodes with
      IB. If this assignment exists, Infiniband modules will be loaded and IP-over-IB will be
      configured during the boot process of the corresponding nodes with the IP mapping
      described above.
    </para>
    <note>
      <para>
	The <link linkend="chap-HWwizard">Hardware Wizard</link> auto-detects the presence of
	IB adapters and allows to conveniently set the IB hardware property.
      </para>
    </note>
    <section xml:id="sec-Configuring-OpenSM">
      <title>Activating/configuring OpenSM</title>
      <para>
	In an IB fabric, at least one node (or switch) has to run a subnet manager to manage
	the IB routing tables. Qlustar provides <application>OpenSM</application> for this
	task. If the head-node is also part of the IB network, it's usually best to configure
	it to run OpenSM. This might have
	been chosen during installation, in which case there is nothing more to be done. If
	not, you have the option to run OpenSM on ordinary nodes too.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_all.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Activating OpenSM on nodes
	  </phrase></textobject>
	  <caption><para>
	    Activating OpenSM on nodes
	  </para></caption>
	</mediaobject>
	In this case, it is advisable to run OpenSM on two or three nodes (not more) for
	redundancy reasons. It is therefore best, to configure this directly for the chosen
	hosts, rather than using a Host Template or generic property set. After selecting the
	host(s) where OpenSM should run in the Enclosure View, open the context menu and select
	<guimenuitem>Set Generic Property</guimenuitem>-><guimenuitem>OpenSM
	Ports</guimenuitem>-><guimenuitem>ALL</guimenuitem>. The next time the host(s) boots,
	the OpenSM daemon will be started on all its Infiniband ports.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring OpenSM to run on a specific port
	  </phrase></textobject>
	  <caption><para>
	    Configuring OpenSM to run on a specific port
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/port_create_1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a new port for OpenSM
	  </phrase></textobject>
	  <caption><para>
	    Adding a new port for OpenSM
	  </para></caption>
	</mediaobject>
	If a host has more than one IB port, OpenSM can also be configured to run only on a
	specific one rather than on all of them. The port can be specified by its number or by
	its unique ID. As this is an uncommon configuration and the unique ID is unknown
	beforehand, there is no preset value for this. To create a new value, first select an
	existing value, e.g. ALL, for the generic property <literal>OpenSM
	Ports</literal>. You can then edit the value in the <classname>Generic
	Properties</classname> box of a host. Editing the line and pressing
	<keycap>return</keycap> will create the new value. Beware that this will only affect
	one shown host. To assign the new value to other hosts, select them and then change
	the OpenSM Ports property through the context menu.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_add.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Adding an OpenSM option
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/network_config/opensm/option_edit.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing an OpenSM option
	  </phrase></textobject>
	  <caption><para>
	    Editing an OpenSM option
	  </para></caption>
	</mediaobject>
	In some circumstances, it might be necessary to run OpenSM with extra options. This can
	also be configured via <link linkend="Generic-Properties">Generic
	Properties</link>. The only preset value is the empty string, so you need to create a
	new value for the options you require. First add the empty value of the generic
	property <classname>OpenSM Options</classname> to one host. Then edit the value to your
	requirements and press <keycap>return</keycap> to create it. Finally add/change the
	OpenSM Options generic property for all relevant hosts.
      </para>
    </section>
  </section>
  <section xml:id="sec-IPMI-Settings">
    <title>IPMI settings</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/network_config/ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          IPMI settings in the Network Configuration dialog
        </phrase></textobject>
        <caption><para>
          IPMI settings in the Network Configuration dialog
        </para></caption>
      </mediaobject>
      Configuring <firstterm>IPMI</firstterm> is similar to Infiniband and also involves
      multiple steps, because there are a number of options to set. If you have chosen to
      configure an IPMI network during installation, a larger part of this section is about how
      to review or change the initial settings. If not, IPMI first has to be activated in the
      <link linkend="sec-Configuring-the-Network">Network Configuration</link> dialog. There
      you can set the IPMI Network address IP and netmask. The IPMI address of a host is then
      determined with the same mapping as used when <link
      linkend="sec-Configuring-IB">configuring IB</link> and the same restrictions for the
      choice of netmask apply.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/hardware_property_set/ipmi.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the Hardware Property "IPMI-adapter"
        </phrase></textobject>
        <caption><para>
          Setting the Hardware Property "IPMI-adapter"
        </para></caption>
      </mediaobject>
      Sometimes, not all nodes in a cluster have IPMI. Therefore per default, no host is
      configured to setup IPMI in <application>QluMan</application>, unless it is assigned the
      hardware property <literal>IPMI Adapter</literal> with a value of
      <parameter>true</parameter>. The easiest way to achieve this, is to add the <literal>IPMI
      Adapter</literal> property to the Hardware Property Set(s) used in the Host Template(s)
      for the nodes with IPMI. With this assignment, a node is ready for monitoring its
      temperature and fan speeds.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_initialize_add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Allowing an IPMI adapter to be initialized during boot
        </phrase></textobject>
        <caption><para>
          Allowing an IPMI adapter to be initialized during boot
        </para></caption>
      </mediaobject>
      Enabling IPMI nodes for remote control involves two more settings. The first one is the
      generic property <parameter>Initialize IPMI</parameter>. Per default the settings of the
      IPMI cards are not touched by <productname>Qlustar</productname>. However, if the
      <parameter>Initialize IPMI</parameter> generic property is assigned and set to
      <parameter>true</parameter>, the IPMI card network settings of the corresponding host
      will be set every time it boots. Changing the value of this property to
      <parameter>true</parameter> and after booting back to <parameter>false</parameter> allows
      a one-time setup of the cards network properties.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_channel_add.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Setting the network channel of an IPMI adapter
        </phrase></textobject>
        <caption><para>
          Setting the network channel of an IPMI adapter
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/generic_property_set/ipmi_channel_edit.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Editing the network channel of an IPMI adapter
        </phrase></textobject>
        <caption><para>
          Editing the network channel of an IPMI adapter
        </para></caption>
      </mediaobject>
      The second generic property is the <parameter>IPMI Channel</parameter> to use. Per
      default channel 1 is used and this is the only preset value for the property. If you
      need to use a different channel, first add the generic property <parameter>IPMI
      Channel</parameter> to the <classname>Generic Property Set</classname> (or to a host
      directly) and then edit the value.
    </para>
  </section>
</chapter>

