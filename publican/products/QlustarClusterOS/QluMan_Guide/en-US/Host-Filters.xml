<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-Host-Filters">
  <title>Host Filters</title>
  <section xml:id="sec-Host-Filter-Overview">
    <title>Overview</title>
    <para>
      <!--cbox(file: filter_editor/main.png)-->
      Host filters define a set of hosts by specifying any number of criteria. The set of
      hosts defined by a filter is dynamic: Changes made to the properties of hosts are
      automatically reflected in the hostlist a filter evaluates to. Every time a filter is
      used, the criteria defining it are evaluated from scratch. Hence, host filters provide
      a powerful tool to classify hosts into groups, in a way that will dynamically take into
      account changes made to the cluster. They can be used in various ways within
      <application>QluMan</application>:
    </para>
    <para>
      <itemizedlist>
	<listitem>
	  <para>
	    In <link linkend="sec-RXE-Pre-Defined">pre-defined commands</link>, to either
	    specify, the set of hosts, where a command should be executed or to supply the
	    resulting hostlist as an argument to the command.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    As user input for <link linkend="sec-RXE-Pre-Defined">pre-defined</link> or <link
	    linkend="sec-RXE-Custom">custom commands</link>.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    In the <link linkend="sec-Enclosure-View">Enclosure View</link> to modify the
	    selection.
	  </para>
	</listitem>
      </itemizedlist>
    </para>
  </section>
  <section xml:id="sec-Host-Filter-Editor">
    <title>Host Filter Editor</title>
    <para>
      <!--cbox(file: filter_editor__select_filter.png)-->
      The filter editor window is split into two areas. At the top the definition of the
      currently selected filter is shown. You can select the filter to be displayed from the
      dropdown menu. At the bottom the hosts that pass all the filters are displayed in the
      compact HostList format. This format is used by a number of other programs including
      pdsh and SLURM (the <link
      xlink:href="https://code.google.com/p/pdsh/wiki/HostListExpressions/___blank___">pdsh
      Wiki</link> has a detailed discussion on the syntax).
    </para>
    <para>
      <!--cbox(file: filter_editor__new3.png)-->
      <!--cbox(file: filter_editor__new2.png)-->
      <!--cbox(file: filter_editor__new.png)-->
      <!--cbox(file: filter_editor__new5.png)-->
      <!--cbox(file: filter_editor__new4.png)-->
    </para>
    <para>
      Select <guimenuitem>new filter</guimenuitem> from the dropdown menu to start defining a
      new filter. Then add filters from the context menu, until the desired subset of hosts
      is displayed in the bottom half of the window. Using their context menu, filters can be
      edited or removed and sub-filters be added. The <guimenuitem>Reset filter</guimenuitem>
      menu item clears the filter, so one can start from scratch. To finally create (save)
      the new filter click <guibutton>Save as</guibutton> and enter a name for it.
    </para>
    <section xml:id="sec-Host-Filter-Edit">
      <title>Editing a Filter</title>
      <para>
	Editing a filter is similar to creating a new one. First select the filter from the
	dropdown menu to display it's current definition. Then add, edit or remove individual
	filters as desired. Finally click <guibutton>Save as</guibutton> to save the altered
	filter, Using an existing name will replace the old filter. Using a different name will
	create a new filter.
      </para>
    </section>
    <section xml:id="sec-Host-Filter-Types">
      <title>Types of Filters</title>
      <para>
	<!--cbox(file: filter_editor__new3.png)-->
	A filter can be added from the context menu (right mouse click) in the top area.  For a
	host to show up in the filtered list (bottom part), it must pass all the filters added.
	Each filter narrows down the list. Any number of filters can be added and they do not
	have to be unique. For example you can add a Hostname filter that selects all hosts
	that begin with <systemitem class="systemname">beo</systemitem> and a Host Template
	filter that selects all <systemitem class="systemname">Demo VM</systemitem> nodes. A
	host has to pass all top-level filters to show up. Currently,
	<application>QluMan</application> provides six top-level filters: Hostname,
	HostTemplate, Enclosure, HEADNODE, HEADNODES and ONLINE. Additional ones will be added
	in future versions.
      </para>
      <section xml:id="sec-Host-Filter-Hostname">
	<title>Hostname Filter</title>
	<para>
	  <!--cbox(file: filter_editor__2_hostnames2.png)-->
	  <!--cbox(file: filter_editor__add__hostname.png)-->
	  <!--cbox(file: filter_editor__2_hostnames1.png)-->
	  Adding a Hostname filter opens up a pop-up dialog asking for the hostname or a
	  regular expression to filter for. The input must be a regular expression in
	  <literal>python</literal> syntax and is matched against the beginning of the
	  hostname. If a match against the full hostname is desired then "$" should be added at
	  the end. A ".*" can be added to the front, to match anywhere in the hostname instead
	  of matching against the beginning.
	</para>
	<para>
	  Multiple hostname patterns can be added to a Hostname filter through the context
	  menu. 
	  <note>
	    <para>
	      Note that this is <emphasis role="bold">additive</emphasis>: If a host matches at
	      least one pattern, it will be included in the resulting list.
	    </para>
	  </note>
	</para>
      </section>
      <section xml:id="sec-Host-Filter-HostTemplate">
	<title>Host Template Filter</title>
	<para>
	  <!--cbox(file: filter_editor__hotstemplate__add_template1.png)-->
	  <!--cbox(file: filter_editor__hotstemplate.png)-->
	  <!--cbox(file: filter_editor__add_hosttemplate.png)-->
	  <!--cbox(file: filter_editor__hotstemplate2.png)-->
	  <!--cbox(file: filter_editor__hotstemplate__add_template2.png)-->
	  Adding a Host Template filter does not pop up a dialog. Instead it adds an empty Host
	  Template filter. This simply selects all hosts with an assigned Host Template. Hosts
	  that do not have a Host Template will not pass this filter. The filter can be made
	  more specific by adding Host Template patterns to it through the context menu. This
	  opens up a pop-up dialog, from where an existing Host Template name can be selected.
	</para>
	<para>
	  The result is a list of hosts, for which the associated Host Template matches the
	  given pattern.  Adding multiple Host Template names is again additive, just like with
	  Hostname patterns.
	</para>
      </section>
      <section xml:id="sec-Host-Filter-Enclosure">
	<title>Enclosure Filter</title>
	<para>
	  <!--cbox(file: filter_editor__enclosure.png)-->
	  <!--cbox(file: filter_editor__add__enclosure.png)-->
	  <!--cbox(file: filter_editor__enclosure2.png)-->
	  <!--cbox(file: filter_editor__enclosure__add.png)-->
	  Adding an Enclosure filter also does not bring up a dialog. Like a Host Template
	  filter, it selects all hosts that are part of an enclosure. Unlike the Hostname and
	  Host Template filters though, an Enclosure filter allows for two different
	  specifications: The name <emphasis role="bold">and</emphasis> the type of an
	  enclosure can be matched. Just like Hostname and Host Template filters the Enclosure
	  filter is additive. Adding sub-filters for both the Enclosure name and the Enclosure
	  type will filter hosts that match at least one of those criteria. To filter for hosts
	  that match both, an Enclosure name and an Enclosure type two separate Enclosure
	  filters have to be used, to get the intersection of both filters. The first one to
	  filter the name and the second to filter the type.
	</para>
      </section>
    </section>
    <section xml:id="sec-Host-Filter-Inverting">
      <title>Inverting a Filter</title>
      <para>
	Every filter, sub-filter and pattern can be inverted through the context menu. The
	context menu for a pattern contains menu entries for both the pattern and the
	enclosing filter separated by a line. The first <emphasis
	role="bold">Invert</emphasis> entry will invert the specific pattern that was
	selected, while the second <emphasis role="bold">Invert</emphasis> will invert the
	whole filter.
      </para>
      <para>
	<!--cbox(file: filter_editor__invert_filter.png)-->
	<!--cbox(file: filter_editor__invert_pattern.png)-->
	<!--cbox(file: filter_editor__invert.png)-->
	Besides the obvious, this can also be useful in finding hosts that are not configured
	correctly. For example, adding an empty Host Template filter and inverting it, will
	show all hosts without a Host Template. Adding a second filter, that selects all
	switches, power controllers and other special devices (they usually don't need a Host
	Template) and also inverting that, results in a list of all hosts, that are neither
	properly configured nodes (missing Host Template) nor special devices.
      </para>
    </section>
    <section xml:id="sec-Host-Filter-AddSub">
      <title>Additive versus subtractive</title>
      <para>
	<!--cbox(file: filter_editor__subtractive.png)-->
	When constructing a filter, it is important to remember, that all top-level filters
	are subtractive. A host must pass all top-level filters to show up in the result. On
	the other hand, all patterns and sub-filters are additive. Matching any one of them
	within a top-level filter adds the host to the result of that filter. Hence, when
	subtractive behavior is desired for patterns or sub-filters, each pattern or
	sub-filter must be added to its own top-level filter. For example, to select all
	hosts that start with <systemitem class="systemname">beo</systemitem> as well as end
	on "1" two Hostname filters have to be added.
      </para>
    </section>
  </section>
</chapter>

