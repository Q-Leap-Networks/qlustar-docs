<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:id="chap-Other-Configs">
  <title>Other Configs</title>
  <section xml:id="sec-Qlustar-OS-Images">
    <title>Qlustar OS Images</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/QlustarImages/main.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The Qlustar OS Image configuration window
        </phrase></textobject>
        <caption><para>
          The Qlustar OS Image configuration window
        </para></caption>
      </mediaobject>
      Qlustar OS images can be defined and configured in the <classname>Qlustar
      Images</classname> dialog accessible via <guimenuitem>Manage
      Configs</guimenuitem>-><guimenuitem>Qlustar Images</guimenuitem>. Each image has a unique
      name, a flavor (e.g. <classname>trusty</classname>), a version, an optional <link
      linkend="sec-UnionFS-Chroots">chroot</link> and one or more image modules.
    </para>
    <section xml:id="sec-Image-Versioning">
      <title>Image Versioning</title>
      <para>
	Currently available image versions are 9, 9.1, 9.2 (all meta-versions), 9.1.1 and
	9.2.0. Note, that selecting meta-versions (like e.g. 9) has implications on the update
	process. They allow tracking the newest x.y (x.y.z) releases automatically. Example: If
	you have installed version 9 of the modules, you will currently get the 9.2 (most
	recent 9.y) versions, but if a 9.3 would become
	available, <code>apt-get dist-upgrade</code> will update to 9.3 versions
	automatically. So with this choice, updates will usually include larger changes,
	since new <emphasis role="bold">feature</emphasis> releases (like 9.3) will
	automatically be installed.
      </para>
      <para>
	Similarly, if you have selected the 9.2 version (currently default after a fresh
	installation) you will currently get 9.2.0 (most recent 9.2.z version) and
	<code>apt-get dist-upgrade</code> will update the modules/images to 9.2.1
	automatically once available. So this choice will update to new <emphasis
	role="bold">maintenance</emphasis> releases automatically. The most conservative
	choice would be to explicitly select a x.y.z version (currently 9.2.0), since then
	images will only receive bug fix updates without explicitly changing the version in
	<productname>Qlustar</productname>. See also the discussion in the general <link
	xlink:href="../Administration_Manual/index.html#chap-Updating-Qlustar___blank___">
	Qlustar Update Guide</link>
      </para>
    </section>
    <section xml:id="sec-Image-Properties">
      <title>Image Properties</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/QlustarImages/modules.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a module to a Qlustar Image
	  </phrase></textobject>
	  <caption><para>
	    Adding a module to a Qlustar Image
	  </para></caption>
	</mediaobject>
	A couple of images are pre-defined during the installation process. The dialog shows
	the images sorted by their names. Expanding an entry shows its configuration and allows
	to select a <link linkend="sec-UnionFS-Chroots">UnionFS chroot</link> via the drop-down
	menu. Each image contains at least the <classname>core module</classname>. Additional
	modules can be added or removed using the context menu when hovering over an
	entry. Only modules that are not already chosen are available for selection.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/QlustarImages/new.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Qlustar Image
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Qlustar Image
	  </para></caption>
	</mediaobject>
	New images can be added through the context menu or by pressing the
	<guibutton>New</guibutton> button at the bottom of the dialog. Like before, you should
	then enter the name for the new config, choose a <link
	linkend="sec-UnionFS-Chroots">UnionFS chroot</link> and optionally provide a
	description for the new image. Existing images can be removed via the context menu.
      </para>
    </section>
  </section>
  <section xml:id="sec-NIS-Hosts">
    <title>NIS hosts</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/nis/host_header.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The NIS host-header configuration window
        </phrase></textobject>
        <caption><para>
          The NIS host-header configuration window
        </para></caption>
      </mediaobject>
      <firstterm>NIS</firstterm> (Network Information System) is used to manage hostname
      resolution within a Qlustar cluster. For all hosts that are managed within
      <application>QluMan</application> itself, a corresponding NIS entry is created
      automatically. However, administrators might want to add other hosts that are not part of
      the cluster to the NIS database as well. To allow this, the creation of the NIS hosts
      database is split into a header part that can be freely edited by the admin, and an
      auto-created part with the hosts managed by <application>QluMan</application>.
    </para>
    <para>
      To edit the header part, choose <guimenuitem>Manage
      Configs</guimenuitem>-><guimenuitem>NIS Host Header</guimenuitem> from the main menu and
      press <guibutton>Edit</guibutton>. The top part of the window popping up can then freely
      be edited. When done press <guibutton>Save</guibutton>. Note that entries for the
      head-node are automatically created upon installation and should remain unchanged unless
      one of the head-node's IP changes. The final resulting NIS hosts file can then be
      previewed and written to disk by pressing the corresponding dialogs at the bottom of the
      dialog. Upon writing the file, the NIS database is automatically rebuilt on the NIS
      master server.
    </para>
  </section>
  <section xml:id="sec-SSH-Hosts">
    <title>SSH host files</title>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/ssh_hosts/known.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The SSH known hosts header configuration window
        </phrase></textobject>
        <caption><para>
          The SSH known hosts header configuration window
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/ssh_hosts/equiv.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The SSH shosts.equiv header configuration window
        </phrase></textobject>
        <caption><para>
          The SSH shosts.equiv header configuration window
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/ssh_hosts/authorized_keys.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The SSH root authorized_keys configuration window
        </phrase></textobject>
        <caption><para>
          The SSH root authorized_keys configuration window
        </para></caption>
      </mediaobject>
      To simplify ssh remote logins to cluster nodes, three ssh configuration files are
      provided and managed by <application>QluMan</application>: (a)
      <filename>ssh_known_hosts</filename> (holds ssh host keys of cluster nodes), (b)
      <filename>shosts.equiv</filename> (enables login without password between machines
      within the cluster) and (c) <filename>authorized_keys</filename> (used to
      allow password-less root login to nodes with the specified ssh public keys).
    </para>
    <para>
      The first two config files consist of a configurable header part, where additional hosts
      can freely be entered and an auto-generated part for the hosts managed by
      <application>QluMan</application>. The <filename>authorized_keys</filename> one just has
      the configurable part. Ssh host info for the head-node and a possibly configured
      frontend-node are automatically inserted during the installation process.
    </para>
    <para>
      Management of the three configs is similar to the <classname>NIS hosts</classname>
      dialog: To edit the header part of either config, select <guimenuitem>Manage
      Configs</guimenuitem>-><guimenuitem>SSH Configs</guimenuitem> from the main menu. Then
      choose the config to work on by using the drop-down menu at the bottom left and press
      <guibutton>Edit</guibutton>. The top part of the window popping up can then freely be
      edited. When done press <guibutton>Save</guibutton>. Finally, the resulting ssh host
      files can be previewed and written to disk by pressing the corresponding buttons at the
      bottom of the dialog.
      <note>
	<para>
	  There is no preview of the <filename>authorized_keys</filename> file, as this is
	  automatically written to <filename>/root/.ssh</filename> during the boot phase on
	  hosts, that are not head-nodes.
	</para>
      </note>
    </para>
  </section>
  <section xml:id="sec-UnionFS-Chroots">
    <title>UnionFS Chroots</title>
    <para>
      In most practical cases, a <productname>Qlustar</productname> image should be configured
      with an associated <classname>UnionFS chroot</classname>. Exceptions are single purpose
      images e.g. for Lustre servers. By design, images are stripped down to the functionality
      (programs) that is most often needed on a compute/storage node. This keeps them small
      while still providing fast, network-independent access to programs/files typically used.
    </para>
    <para>
      To complement the image and provide the full richness of the packages/programs available
      in the chosen Linux distribution, the UnionFS chroot (holding a full installation of
      e.g. Ubuntu) is exported via NFS by one of the head-nodes and technically <emphasis
      role="bold">merged below</emphasis> the content of the <classname>Qlustar OS
      image</classname>. In practice, this means that all files belonging to the chroot will be
      available on the nodes configured to use the chroot, but if a file/program is also in the
      node's image, that version will be used. Hence, this method combines the <emphasis
      role="bold">compactness and speed</emphasis> of the imaging approach with the <emphasis
      role="bold">completeness</emphasis> of a full OS installation to give you the best of all
      worlds.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/menu-manage_cluster/manage_chroots.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Starting chroot management
        </phrase></textobject>
        <caption><para>
          Starting chroot management
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/main.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          The Manage Chroot dialog
        </phrase></textobject>
        <caption><para>
          The Manage Chroot dialog
        </para></caption>
      </mediaobject>
      As explained before (see <xref linkend="sec-Qlustar-OS-Images"/>), the chroot associated
      with an image is easily selectable via the Qlustar Images dialog. The management of
      the chroots themselves is possible via the <classname>Manage Chroots</classname> dialog.
      It is accessible via the main menu (<guimenuitem>Manage
      Cluster</guimenuitem>-><guimenuitem>Manage Chroots</guimenuitem>) and provides a number
      of actions related to chroots. Manipulation of the contents of chroots is explained <link
      xlink:href=
      "../First_Steps_Guide/index.html#sec-Adding-Software___blank___">elsewhere</link>.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/select_chroot.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Selecting a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Selecting a UnionFS chroot
        </para></caption>
      </mediaobject>
      To <emphasis role="bold">specify a chroot</emphasis> to operate on, select it via the
      corresponding pull-down menu. This will show its description, as well as its properties
      like the NFS server that serves it, the filesystem path on the server, the flavor (edge
      platform, trusty/wheezy/...)  and the version of the <productname>Qlustar</productname>
      feature release (always being of the form x.y, e.g 9.2).
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/new1.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Creating a new UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Creating a new UnionFS chroot
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/new2.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Creation process of a new UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Creation process of a new UnionFS chroot
        </para></caption>
      </mediaobject>
      When <emphasis role="bold">generating a new chroot</emphasis>, a name for the chroot
      must be specified and optionally a description of its purpose. Furthermore, you can
      select an NFS server where the chroot will be located (currently only one option), a
      flavor (aka edge platform) and <productname>Qlustar</productname> version. Finally you
      have the possibility to select <classname>Qlustar tasks</classname>. These are topic
      package bundles, each consisting of a collection of packages relevant to a certain
      field of HPC applications. Pressing the <guibutton>OK</guibutton> button then starts
      the generation of the chroot. You can follow the rather lengthy process (count a couple
      of minutes) in its own window.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/clone1.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Cloning a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Cloning a UnionFS chroot
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/clone2.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Cloning process of a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Cloning process of a UnionFS chroot
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/edit.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Changing the description of a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Changing the description of a UnionFS chroot
        </para></caption>
      </mediaobject>
      <emphasis role="bold">Cloning an existing chroot</emphasis> is mostly useful when you
      want to test an upgrade to a new release or for other tests. Pressing the
      <guibutton>Clone</guibutton> button, opens a sub-window in which you can specify the
      name of the new cloned chroot and optionally a description of its purpose. Pressing the
      <guibutton>OK</guibutton> button then starts the cloning process. You can again watch
      this in its own window. Editing a chroot allows to modify it's description.
    </para>
    <para>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/remove1.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Removing a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Removing a UnionFS chroot
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/remove2.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Removal process of a UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Removal process of a UnionFS chroot
        </para></caption>
      </mediaobject>
      <mediaobject>
        <imageobject><imagedata
        fileref="images/manage_chroots/remove3.png"
        width="85%" format="PNG"/></imageobject>
        <textobject><phrase>
          Attempting to delete a used UnionFS chroot
        </phrase></textobject>
        <caption><para>
          Attempting to delete a used UnionFS chroot
        </para></caption>
      </mediaobject>
      <emphasis role="bold">Removal of a chroot</emphasis>, by pressing the
      <guibutton>Remove</guibutton> button, first asks you for a final confirmation. If you
      then press the <guibutton>Delete</guibutton> button, the chroot will be removed
      provided it is not still in use by a Qlustar image. If it is, a list of
      images that are associated with the chroot is displayed. You would then first have to
      reconfigure these images to use another chroot before trying to remove again. <emphasis
      role="bold">Renaming of a chroot</emphasis> is not supported directly. To rename, you'd
      have to clone the original chroot, giving the clone the new desired name and afterwards
      remove the old chroot.
    </para>
  </section>
</chapter>

