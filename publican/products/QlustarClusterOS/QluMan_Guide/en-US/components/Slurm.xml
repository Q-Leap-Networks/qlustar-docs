<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section [
<!ENTITY % BOOK_ENTITIES SYSTEM "../QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<section xmlns="http://docbook.org/ns/docbook"
	 xmlns:xlink="http://www.w3.org/1999/xlink"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
	 xml:id="sec-slurm-component">
  <title>Slurm Configuration and Management</title>
  <section xml:id="sec-Slurm-Config">
    <title>Slurm Configuration</title>
    <section xml:id="sec-Slurm-Config-Overview">
      <title>Overview</title>
      <para>
	The slurm configuration module comes in four parts:
      </para>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>
	      The overall slurm configuration, controlled via two templates in the
	      <classname>Config Header</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of slurm nodes, done via the <classname>Node
	      Groups</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of partitions, achieved by using the
	      <classname>Partitions</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of <firstterm>GRES</firstterm> (generic resources) groups,
	      settable using the <classname>Gres Groups</classname> tab.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	Assignment of hosts to node groups and/or partitions is possible by adding the latter
	to the relevant <classname>Config Sets</classname> and <classname>Host
	Templates</classname> or by <link linkend="sec-Enclosure-View">direct assignment</link>
	through the config (set) context menu in the enclosure view.
      </para>
    </section>
    <section xml:id="sec-Slurm-Config-Header">
      <title>Slurm Config Header</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/config.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing the Slurm config header
	  </phrase></textobject>
	  <caption><para>
	    Editing the Slurm config header
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/editing.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Saving the Slurm config header
	  </phrase></textobject>
	  <caption><para>
	    Saving the Slurm config header
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/cgroups.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing the Slurm cgroups config
	  </phrase></textobject>
	  <caption><para>
	    Editing the Slurm cgroups config
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/preview.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Previewing the slurm config files
	  </phrase></textobject>
	  <caption><para>
	    Previewing the slurm config files
	  </para></caption>
	</mediaobject>
	The overall slurm configuration is split into two templates, the slurm config and
	<filename>cgroups.conf</filename>. On write, <application>QluMan</application> adds
	the NodeName and PartitionName lines at the end of the slurm config template to
	generate the <filename>slurm.conf</filename> file, while the
	<filename>cgroup.conf</filename> file gets written as is. For the syntax of both
	templates, please refer to the slurm documentation (e.g. <code>man
	slurm.conf</code>). To edit one of the templates, select it, click the
	<guibutton>Edit</guibutton> button and start making changes. Click
	<guibutton>Save</guibutton> to save the changes or <guibutton>Undo</guibutton> to
	discard them. Use the <guibutton>Preview</guibutton> button to check changes before
	writing them.
      </para>
    </section>
    <section xml:id="sec-Slurm-Node-Groups">
      <title>Slurm Node Groups</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/main.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring Slurm node groups
	  </phrase></textobject>
	  <caption><para>
	    Configuring Slurm node groups
	  </para></caption>
	</mediaobject>
	Slurm node properties are configured from two sources:
      </para>
      <para>
	<orderedlist>
	  <listitem>
	    <para>
	      The <xref linkend="Hardware-Properties" endterm="Hardware-Properties"/>
	      assigned to a host. The number of CPUs, sockets, cores and the size of its main
	      memory is derived from there.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The slurm node groups. Every host can belong to at most one such group. The
	      membership is assigned (see <xref linkend="sec-Slurm-Assign-Hosts"/>) by adding
	      the desired node group to the <link linkend="sec-PropConf-Sets">Config Set</link>
	      that is assigned to the node via its <link linkend="Host-Templates">Host
	      Template</link> or via the alternative ways to assign config classes.
	    </para>
	    <para>
	      Each Node Group is a collection of slurm node properties, that will be set for
	      the members of the group. Per default, only the <code>MemSpecLimit</code>
	      property is defined, but other properties like <parameter>Feature</parameter> or
	      <parameter>Weight</parameter> can be added by using the <link
	      linkend="sec-Slurm-Property-Editor">Slurm Property Editor</link>.
	    </para>
	  </listitem>
	</orderedlist>
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new3.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	A new node group can be created by clicking the <guibutton>New Node Group</guibutton>
	button or selecting <guimenuitem>New Node Group</guimenuitem> from the context
	menu. This opens a dialog asking for the name of the new group.  An existing node
	group can be renamed or deleted from the context menu.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/rename1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Renaming a Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Renaming a Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/rename2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Renaming a Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Renaming a Slurm node group
	  </para></caption>
	</mediaobject>
	The context menu also allows to add properties to a group. Note, that some properties
	are <emphasis role="bold">unique</emphasis>, i.e. only one value can be selected for
	the property. Adding a second value of the same property will automatically replace
	the old value in that case. Other properties are not unique. Adding multiple values
	to such properties results in a comma separated list of values in the
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/add_property1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a Slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Adding a Slurm node property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/change_property.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Changing a Slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Changing a Slurm node property
	  </para></caption>
	</mediaobject>
	<filename>slurm.conf</filename> file. An example for this is the
	<parameter>Feature</parameter> property. Properties can also be changed directly
	using the pull-down menu. If a change will cause a duplicate value, the previous
	(duplicate) value is automatically removed.
      </para>
    </section>
    <section xml:id="sec-Slurm-Partitions">
      <title>Slurm Partitions</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/partitions.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring Slurm partitions
	  </phrase></textobject>
	  <caption><para>
	    Configuring Slurm partitions
	  </para></caption>
	</mediaobject>
	The management of Slurm partitions works exactly the same way as that of slurm node
	groups. Please see <xref linkend="sec-Slurm-Node-Groups"/> for how to create, rename
	and change partitions.
      </para>
    </section>
    <section xml:id="sec-Slurm-Property-Editor">
      <title>Slurm Property Editor</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/starting.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Starting the Slurm property editor
	  </phrase></textobject>
	  <caption><para>
	    Starting the Slurm property editor
	  </para></caption>
	</mediaobject>
	The Slurm property editor for node or partition properties can be opened by clicking
	the <guibutton>Properties</guibutton> button at the bottom of the Slurm main
	dialog. If the <classname>Node Groups</classname> tab is selected, the editor for
	node properties will be opened. If the <classname>Partitions</classname> tab is
	selected, the editor for partition properties will be opened.
      </para>
      <para>
	To add a new property, enter the name of the property in the name field. If the name
	does not already exist, the <guibutton>New Property</guibutton> button will be
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/main.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    The Slurm property editor
	  </phrase></textobject>
	  <caption><para>
	    The Slurm property editor
	  </para></caption>
	</mediaobject>
	enabled. Click on it to create the property. <application>QluMan</application> has a
	white-list of known valid properties, e.g. <parameter>Weight</parameter> and allows
	adding such a property without further questions. In this case,
	<application>QluMan</application> will also set the unique flag and add all known
	property values automatically.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Defining a slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Defining a slurm node property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new_bad.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    An invalid property is rejected
	  </phrase></textobject>
	  <caption><para>
	    An invalid property is rejected
	  </para></caption>
	</mediaobject>
	When a property is created that is not part of the white-list
	(<parameter>Gres</parameter> in the screenshot) a dialog opens up, asking for
	confirmation. Note that adding an unknown property can lead to a failure when trying to
	restart slurm. Therefore make sure to only add properties you are certain slurm will
	know about. A property without values can be deleted by clicking the
	<guibutton>Delete</guibutton> button.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new_good.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    A new allowed property
	  </phrase></textobject>
	  <caption><para>
	    A new allowed property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/add_value.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding new property values
	  </phrase></textobject>
	  <caption><para>
	    Adding new property values
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/delete.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Deleting a property
	  </phrase></textobject>
	  <caption><para>
	    Deleting a property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/delete_value.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Deleting a property value
	  </phrase></textobject>
	  <caption><para>
	    Deleting a property value
	  </para></caption>
	</mediaobject>
	To add values to a property, first select the desired property using the pull-down
	menu from the name. Then enter the new property using <guibutton>Add
	Value</guibutton> at the bottom and finally press <keycap>return</keycap> to add it. To
	delete a value, select <guimenuitem>Delete value</guimenuitem> from the context menu.
      </para>
    </section>
    <section xml:id="sec-Slurm-Gres-Groups">
      <title>Slurm Gres Groups</title>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/main.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            The Slurm Gres Group editor
          </phrase></textobject>
          <caption><para>
            The Slurm Gres Group editor
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/select.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Selecting a Slurm Gres Group to configure
          </phrase></textobject>
          <caption><para>
            Selecting a Slurm Gres Group to configure
          </para></caption>
        </mediaobject>
        Currently, Slurm Gres Groups are used in Qluman mainly to handle the setup of GPUs for
        slurm. The <link linkend="sec-GPUwizard">GPU Wizard</link> is the most convenient and
        accurate way to create such resource groups. Supplementing the wizard, the
        <guimenuitem>Gres Groups</guimenuitem> tab allows creating and managing any type of
        resource group, as well as binding GPUs to specific CPU sets, which is not possible via
        the wizard. To view or modify a Gres Group, select the group from the drop down
        menu. Use the <guibutton>Preview</guibutton> button to check the resulting config file
        changes before writing them.
      </para>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new1.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new2.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        A new Gres Group can be created by clicking the <guibutton>New Gres Group</guibutton>
        button. This opens a dialog asking for the type, name and description of the new
        group. An existing type can be selected from the drop down menu or a new type can be
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new3.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new4.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/delete_group.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Deleting a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Deleting a Slurm Gres group
          </para></caption>
        </mediaobject>
        entered directly. After entering a new unique group name the <guibutton>OK</guibutton>
        button becomes selectable. A group that is not in use can be deleted by clicking
        <guibutton>Delete Group</guibutton>.
      </para>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/new1.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a Gres entry
          </phrase></textobject>
          <caption><para>
            Adding a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/new2.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a Gres entry
          </phrase></textobject>
          <caption><para>
            Adding a Gres entry
          </para></caption>
        </mediaobject>
        A Gres Group can have multiple entries. A new entry may be added to a group by clicking
        on <guibutton>New Entry</guibutton>. Initially, the entry is blank and at least the
        <classname>type column</classname> must be filled in. For resources that can be
        allocated in multiple pieces, a count can be set, indicating the number of resource
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/type.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the type of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the type of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/count.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the count for a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the count for a Gres entry
          </para></caption>
        </mediaobject>
        pieces available. For resources that have a device file associated with it, its path
        can be set in the <classname>file column</classname>.
      </para>
      <note>
	<para>
	  For resources that have an associated file, the count is not applicable, since there
	  is always only exactly one file.
	</para>
      </note>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/file.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the associated device name of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the associated device name of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/cpus.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting associated CPUs of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting associated CPUs of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/delete.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Deleting a Gres entry
          </phrase></textobject>
          <caption><para>
            Deleting a Gres entry
          </para></caption>
        </mediaobject>
	Optionally, an entry can also be associated with a set of CPUs. The CPUs to be
        used can be entered as a comma-separated list or, for recurring sets, selected from the
        drop-down menu. An entry can be deleted from the group by selecting <guibutton>Delete
        Entry</guibutton>. A group that is no longer in use can be deleted by selecting
        <guibutton>Delete Group</guibutton>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Assign-Hosts">
      <title>Assigning Hosts to Slurm Node Groups, Partitions and Gres Groups</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Assigning a Slurm Node Group
	  </phrase></textobject>
	  <caption><para>
	    Assigning a Slurm Node Group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Assigning a Slurm Partition
	  </phrase></textobject>
	  <caption><para>
	    Assigning a Slurm Partition
	  </para></caption>
	</mediaobject>
	Hosts are assigned to Slurm <classname>Node/Gres Groups</classname> and <emphasis
	role="bold">Partitions</emphasis> by use of the global or a <link
	linkend="Host-Templates">Host Template</link> (through its corresponding <link
	linkend="sec-PropConf-Sets">Config Set</link>) or by <link
	linkend="sec-Enclosure-View">direct assignment</link>, i.e. the standard <link
	linkend="sec-Levels-of-Configuration">four levels of configuration</link>. A
	<classname>Config Set</classname> may contain at most one <classname>Node
	Group</classname> but any number of <classname>Gres Groups</classname> or
	<classname>Partitions</classname>,
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host4.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Slurm properties in a Config Set
	  </phrase></textobject>
	  <caption><para>
	    Slurm properties in a Config Set
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host5.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Slurm property assignment chain
	  </phrase></textobject>
	  <caption><para>
	    Slurm property assignment chain
	  </para></caption>
	</mediaobject>
	since a host can be member of an arbitrary number of Slurm partitions. They can all be
	assigned by selecting them via <guimenuitem>Add Config</guimenuitem> in the context
	menu of a <classname>Config Set</classname> or via the Enclosure View context menu of
	the host(s).
      </para>
      <note>
	<para>
	  The <link linkend="sec-Levels-of-Configuration">four levels of configuration</link>
	  allow overriding a setting in one particular level with a different value in a higher
	  level. They do not allow removing a setting though. For this purpose, there exists a
	  <literal>NONE</literal> value for <classname>Node Group</classname>,
	  <classname>Partition</classname> and <classname>Gres Group</classname>. Assigning
	  <literal>NONE</literal>, removes the setting from lower levels without replacing it
	  with a different group or partition.
	</para>
	</note>
    </section>
    <section xml:id="sec-GPUwizard">
      <title>GPU Wizard</title>
      <section xml:id="sec-GPUwizard-purpose">
	<title>Purpose</title>
	<para>
	  When setting up Slurm, the basic node config is derived from the hosts <link
	  linkend="Hardware-Properties">Hardware Properties</link>. However, configuring GPUs
	  is more complex: This is done through the Slurm <link
	  linkend="sec-Slurm-Gres-Groups">Gres Groups</link> as part of the slurm config
	  class. <classname>Gres Groups</classname> are used to specify the type and number of
	  GPUs of a host. When submitting jobs that require GPUs, this information is then used
	  to determine the nodes that satisfy the job requirements. All the necessary settings
	  for the desired configuration of the nodes may also be done manually and can be
	  changed later through the slurm config dialog from the main window.
	</para>
	<para>
	  As a convenient alternative, the <classname>GPU Wizard</classname> guides you through
	  the necessary configuration steps. It uses the auto-detected GPUs of hosts to suggest
	  their optimal configuration options. Furthermore, it attempts to establish a balance
	  between the available configuration strategies: Using templates or individually
	  assigned config sets and/or config classes.
	</para>
	<note>
	  <para>
	    For Nvidia GPUs to be detected on a host, it must have booted a Qlustar image that
	    includes the nvidia module. Otherwise GPUs will be missed. Only nodes on which GPUs
	    have been detected, can be configured through the GPU Wizard.
	  </para>
	</note>
      </section>
      <section xml:id="sec-GPUwizard-host-selection">
	<title>Selecting Hosts</title>
	<para>
	  The first step in the wizard is to select the hosts that should be
	  configured. Initially, the lists of hosts is empty. One or more of the four buttons
	  at the bottom have to be pressed to pre-select hosts that should be considered.
	</para>
	<para>
	  <mediaobject>
            <imageobject><imagedata
            fileref="images/slurm/gpu_wizard/host_selection1.png"
            width="85%" format="PNG"/></imageobject>
            <textobject><phrase>
              The host selection window
            </phrase></textobject>
            <caption><para>
              The host selection window
            </para></caption>
	  </mediaobject>
	  The <guibutton>Unconfigured</guibutton> button adds all hosts that do not have any
	  GPU configured at all. The <guibutton>Partially Configured</guibutton> button adds
	  hosts that already have some GPUs configured correctly, but not all of them. The
	  <guibutton>Wrongly Configured</guibutton> button adds hosts, where the configured
	  GPUs do not match the GPUs detected at boot, e.g. when the GPU cards have been
	  swapped for a newer model on the hosts. Finally, the <guibutton>Selected</guibutton>
	  button adds hosts, that have been selected in the enclosure view, including hosts
	  that are already configured correctly.
	</para>
	<note>
	  <para>
	  Only hosts with auto-detected GPUs will be shown, even if others are selected.
	</para>
	</note>
	<para>
	  <mediaobject>
            <imageobject><imagedata
            fileref="images/slurm/gpu_wizard/host_selection2.png"
            width="85%" format="PNG"/></imageobject>
            <textobject><phrase>
              Selecting a host group for configuration
            </phrase></textobject>
            <caption><para>
              Selecting a host group for configuration
            </para></caption>
	  </mediaobject>
	  Once one or more of the buttons are pressed, the affected hosts will show up in the
	  table. To keep things compact, hosts with identically detected GPUs are grouped
	  together and shown in <emphasis>hostlist syntax</emphasis>. Select one of the shown
	  groups by clicking on the corresponding row and then press
	  <guibutton>Next</guibutton> to start the configuration.
	</para>
      </section>
      <section xml:id="sec-GPUwizard-assignment-method">
	<title>Choosing the assignment option</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/modify.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Modifying an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Modifying an existing Config Set
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/clone.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Cloning an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Cloning an existing Config Set
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/assign.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Directly assigning Gres Groups
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Directly assigning Gres Groups
	    </para></caption>
	  </mediaobject>
	  There are three different ways, how the GPU configuration can be achieved: On the
	  wizard's <classname>Config Set Page</classname> you have the option to a) add
	  (modify) the GPU config to the <classname>Config Set</classname> of the
	  currently assigned Host Template, b) clone the <classname>Config Set</classname>
	  currently active or c) assign <link linkend="sec-Slurm-Gres-Groups">Gres
	  Groups</link> directly to the group of selected hosts. Select the desired method and
	  press <guibutton>Next</guibutton> to continue to the next step.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/host_template_clone.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The GPU Wizard Host Template page
	    </phrase></textobject>
	    <caption><para>
	      The GPU Wizard Host Template page
	    </para></caption>
	  </mediaobject>
	  In case the <emphasis>clone Config Set</emphasis> option is selected,
	  the <classname>Host Template Page</classname> will appear and offer the choice to
	  either modify the currently used <link linkend="Host-Templates">Host Template</link>
	  or to create a clone of it for further modification.
	</para>
	<note>
	  <para>
	    For the options that would modify an existing entity (Config set or Host template),
	    the wizard dialogs always show other non-selected hosts, that would also be
	    affected by the modifications.
	  </para>
	</note>
      </section>
      <section xml:id="sec-GPUwizard-gres-assignment">
	<title>Creating/assigning Gres groups</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group1.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Hostlist with unconfigured GPUs
	    </phrase></textobject>
	    <caption><para>
	      Hostlist with unconfigured GPUs
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group2.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Assigning a matching existing Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Assigning a matching existing Gres Group
	    </para></caption>
	  </mediaobject>
	  The next step is to possibly create and finally assign <link
	  linkend="sec-Slurm-Gres-Groups">Gres Groups</link> to the list of selected hosts. The
	  corresponding wizard page shows the unconfigured GPUs, each in a separate column. If
	  an existing <classname>Gres Group</classname> exists that includes all or a subset of
	  the unconfigured GPUs, the context menu allows to select it. This would conclude the
	  assignment process.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group3.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Selected GPUs assignable to a new Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Selected GPUs assignable to a new Gres Group
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group4.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Naming a new GPU Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Naming a new GPU Gres Group
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group5.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Hostlist with all GPUs assigned/configured
	    </phrase></textobject>
	    <caption><para>
	      Hostlist with all GPUs assigned/configured
	    </para></caption>
	  </mediaobject>
	  Alternatively, when one or more GPUs are selected, a new <classname>Gres
	  Group</classname> can be created that the GPUs will be a member of. The new group
	  will have to be given a name and optionally a description. Once all GPUs are assigned
	  to a Gres Group, you can finish the process by pressing
	  <guibutton>Finish</guibutton>.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/action.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Different options for direct assignment
	    </phrase></textobject>
	    <caption><para>
	      Different options for direct assignment
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/existing.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Direct assignment using an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      Direct assignment using an existing Config Set
	    </para></caption>
	  </mediaobject>
	  In case <emphasis>direct assignment</emphasis> has been selected, one more wizard
	  page allows to fine-tune the assignment. An additional <emphasis>Action</emphasis>
	  column appears that allows to a) either use and assign an existing <classname>Config
	  Set</classname>, b) create and assign a new one
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/directly.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Choosing direct assignment of the Gres Groups
	    </phrase></textobject>
	    <caption><para>
	      Choosing direct assignment of the Gres Groups
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/new_set.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Using and naming a new Config Set for direct assignment
	    </phrase></textobject>
	    <caption><para>
	      Using and naming a new Config Set for direct assignment
	    </para></caption>
	  </mediaobject>
	  or c) directly assign the <classname>Gres Groups</classname> to the selected
	  hosts. When choosing option b), the blank field of the <emphasis>New Config
	  Set</emphasis> column becomes editable by double-clicking.
	</para>
	<para>
	  Like with other properties, the optimal way for configuring (via template or
	  different direct assignment variations) is often a matter of taste and a trade-off
	  between simplicity, clarity and precision concerning your individual configuration
	  policy.
	</para>
      </section>
    </section>
  </section>
  <section xml:id="sec-Slurm-Manage">
    <title>Slurm Management</title>
      <para>
	The QluMan Slurm Component provides extensive functionality to manage and operate more
	or less all aspects and features of the Slurm workload manager. In Qlustar 9.2, QluMan
	supports the included Slurm version 16.05. All QluMan Slurm functionality is accessible
	underneath the <guimenuitem>Components->Slurm</guimenuitem> top-level menu entry.
      </para>
      <para>
	The following management and operation sub-components are available:
      </para>
      <section xml:id="sec-Slurm-Manage-Overview">
	<title>Slurm Overview</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/Overview/cluster_usage_overview_menu.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Invoking the Slurm Overview
	    </phrase></textobject>
	    <caption><para>
	      Invoking the Slurm Overview
	    </para></caption>
	  </mediaobject>
	  The <application>Slurm Overview</application> window provides a summary of the
	  utilization of the cluster. It is split into 2 parts: The <classname>Cluster Usage
	  Overview</classname> tab and the <classname>Job Overview</classname> tab.
	</para>
	<bridgehead>Cluster Usage Overview</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/Overview/cluster_usage_overview.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Cluster Usage Overview
	    </phrase></textobject>
	    <caption><para>
	      The Cluster Usage Overview
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/Overview/cluster_usage_overview_tooltip.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Tool-tip with more details
	    </phrase></textobject>
	    <caption><para>
	      Tool-tip with more details
	    </para></caption>
	  </mediaobject>
	  The <classname>Cluster Usage Overview</classname> provides continuously updated
	  information and charts about <classname>Node</classname>, <classname>CPU
	  Core</classname> and <classname>Memory</classname> utilization by Slurm jobs. Every
	  information field in the tables has a tool-tip that supplies more detailed information
	  about it.
	</para>
	<note>
	  <para>
	    The colors used in the <classname>Cluster Usage Overview</classname> can be changed
	    in the <link linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	  </para>
	</note>
	<bridgehead>Job Overview</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/Overview/job_overview.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Job Overview
	    </phrase></textobject>
	    <caption><para>
	      The Job Overview
	    </para></caption>
	  </mediaobject>
	  The <classname>Job Overview</classname> display consists of two tables and four
	  charts being continuously updated. The <classname>Running</classname> table provides
	  summary information about running jobs of users. It shows the color representing the
	  user (if his share is displayed in one of the charts), his username, the count of
	  utilized CPU cores, the number of used nodes and the number of running jobs. The
	  <classname>Pending</classname> table provides the total number of requested CPU cores
	  and the number of pending jobs for the same user.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/Overview/job_overview_tooltip.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Tool-tip shows username
	    </phrase></textobject>
	    <caption><para>
	      Tool-tip shows username
	    </para></caption>
	  </mediaobject>
	  The job statistics is graphically displayed in the four pie-charts
	  <classname>Allocated CPU Cores by User</classname>, <classname>Used Nodes by
	  User</classname>, <classname>Pending CPU Cores by User</classname> and
	  <classname>Pending Jobs by User</classname>. Every slice of the pie-chart has a
	  tool-tip showing the name of the user it corresponds to together with his share in
	  percentage of the corresponding resource. The used colors change randomly with every
	  new invocation of the window.
	</para>
	<note>
	  <para>
	    Only the users with the highest percentage of jobs are shown in the pie-charts (a
	    maximum of 10 users being displayed).
	  </para>
	</note>
      </section>
    <section xml:id="sec-Slurm-Manage-Job-Management">
      <title>Job Management</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_full.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    The Job Management Window.
	  </phrase></textobject>
	  <caption><para>
	    The Job Management Window.
	  </para></caption>
	</mediaobject>
	The <classname>Job Management</classname> window shows a continuously updated table
	with all current jobs of the cluster. Since a single job has about 100 properties,
	every QluMan user is able to customize the job properties he wants to be displayed and
	which ones should be hidden in the table (see <link
	linkend="sec-Slurm-Manage-Customize-Columns">Customize Columns</link> for more detailed
	information).
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_sort.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Sorting the jobs table.
	  </phrase></textobject>
	  <caption><para>
	    Sorting the jobs table.
	  </para></caption>
	</mediaobject>
	To sort the job table entries, one just has to click on the title of the property one
	wants to sort for (for example <emphasis>Job Id</emphasis>).  Clicking the title again
	changes the sort order.  You can also move a column with drag and drop and change its
	width.
      </para>
      <para>
	These settings can be stored in layouts. Just modify the Job Management the way you
	want it and hit the <classname>Save</classname> Button. You can restore a layout by
	selecting it in the Layout combo box and press <classname>Load</classname>. When the
	Job Management gets opened it always uses the last state as layout. This is the layout
	that was set when you closed the Job Management the last time.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_drag.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Moving a column.
	  </phrase></textobject>
	  <caption><para>
	    Moving a column.
	  </para></caption>
	</mediaobject>
	If you want to change the state of a job you just have to open its context-menu and
	select one of the following actions:
	<variablelist>
	<varlistentry>
	  <term>Kill Job</term>
	  <listitem>
	    <para>
	      This kills a job and sets its state to CANCELED.
	    </para>
	  </listitem>
	</varlistentry>
	</variablelist>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_context.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Context-menu for a job.
	  </phrase></textobject>
	  <caption><para>
	    Context-menu for a job.
	  </para></caption>
	</mediaobject> 
	<variablelist>
	<varlistentry>
	  <term>Suspend Job</term>
	  <listitem>
	    <para>
	      This suspends a job and sets its state to SUSPENDED.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Resume Job</term>
	  <listitem>
	    <para>
	      This resumes a suspended job and sets its state to RUNNING.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Requeue Job</term>
	  <listitem>
	    <para>
	      This kills a job and puts it back into the queue with state PENDING.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Requeue and Hold Job</term>
	  <listitem>
	    <para>
	      This kills a job, puts it back in the queue with state PENDING and places a hold
	      on it.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Hold Job</term>
	  <listitem>
	    <para>
	      This prevents a pending job from getting started.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Release Job</term>
	  <listitem>
	    <para>
	      This releases a job that was in the HOLD state.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Set Priority</term>
	  <listitem>
	    <para>
	      This allows to manually set the priority of a job.
	    </para>
	  </listitem>
	</varlistentry>
	</variablelist>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_action_to_all_user.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Acting on all jobs of a user.
	  </phrase></textobject>
	  <caption><para>
	    Acting on all jobs of a user.
	  </para></caption>
	</mediaobject>
	Depending on the state of a selected job some actions might be disabled (e.g. a job
	cannot be released if it wasn't on hold before). As long as there is no conflict
	concerning their job states, it is possible to collectively manipulate either a list of
	jobs selected with the mouse or all jobs of the user of the currently selected job.
	If you want to get more information about a job, open the context-menu and select
	<emphasis>More Information</emphasis> (see <link
	linkend="sec-Slurm-Manage-More-Information">More Job Information</link> for details).
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_management/job_management_activate_filter.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Activating job filters.
	  </phrase></textobject>
	  <caption><para>
	    Activating job filters.
	  </para></caption>
	</mediaobject>
	Clicking on <classname>Activate Filter</classname> at the bottom of the window, allows
	to activate one or more custom filters (created using the <link
	linkend="sec-Slurm-Manage-Job-Filter-Editor">Job Filter Editor</link>) by checking the
	corresponding entry. This can be useful to restrict the list of displayed jobs
	according to some criteria (e.g. a certain user). All currently active filters are
	shown in the bottom left corner of the <classname>Job Management</classname>
	window. They can be deactivated again by unchecking their entry in the
	<classname>Activate Filter</classname> sub-window.
      </para>
      <note>
	<para>
	  The column height of the job table is customizable in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	</para>
      </note>
    </section>
    <section xml:id="sec-Slurm-Manage-Customize-Columns">
      <title>Customize Columns</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/customize_columns/customize_columns_full.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Selecting the job columns to be displayed.
	  </phrase></textobject>
	  <caption><para>
	    Selecting the job columns to be displayed.
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/customize_columns/customize_columns_drag.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Activating a specific column
	  </phrase></textobject>
	  <caption><para>
	    Activating a specific column
	  </para></caption>
	</mediaobject>
	The <classname>Customize Columns</classname> dialog displays all known columns
	(properties of a job) in two lists. The columns in the left list will be shown in the
	jobs table, the ones in the right list won't. To show or hide columns just select them
	and drag them either into the left or right list.
	Confirm your changes with <emphasis>OK</emphasis>.
      </para>
      <note>
	<para>
	  The order of the columns in the left list is not important, because it is not the
	  order how they will be shown in the <classname>Job Management</classname> table.
	</para>
      </note>
    </section>
    <section xml:id="sec-Slurm-Manage-More-Information">
      <title>More Information</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/more_information/more_information_context.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Getting detailed job information.
	  </phrase></textobject>
	  <caption><para>
	    Getting detailed job information.
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/more_information/more_information_full.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    View detailed job information.
	  </phrase></textobject>
	  <caption><para>
	    View detailed job information.
	  </para></caption>
	</mediaobject>
	This dialog opens after you select <classname>Get more information</classname> in the
	context-menu of a job. It shows the properties and their corresponding values of the
	selected job in a table. There are two filters that may be applied: One is for hiding
	all properties with a value of 0, None, False or empty, the other one for hiding exotic
	properties which one is rarely interested in. Per default, both filters are enabled. To
	disable them, you have to check the corresponding entry at the bottom of the dialog.
      </para>
      <note>
	<para>
	  The column height of the table is editable in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	</para>
      </note>
    </section>
    <section xml:id="sec-Slurm-Manage-Activate-Filter">
      <title>Activate Filter</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/active_filters/active_filters_full.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Choosing job filters.
	  </phrase></textobject>
	  <caption><para>
	    Choosing job filters.
	  </para></caption>
	</mediaobject> 
	If you created some custom filters, they will be listed here (For information about
	creating custom filters see <link linkend="sec-Slurm-Manage-Job-Filter-Editor">Job
	Filter Editor</link>). Select one or more filters to be applied to the current job
	table. All active filters are shown as a comma-separated list in the bottom-left
	corner of the <classname>Job Management</classname> window.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Job-Filter-Editor">
      <title>Job Filter Editor</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_filter_editor/job_filter_editor_new_filtername.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a new job filter.
	  </phrase></textobject>
	  <caption><para>
	    Adding a new job filter.
	  </para></caption>
	</mediaobject> 
	As mentioned before, in the <classname>Job Filter Editor</classname> dialog it is
	possible to create custom filters for the <classname>Job Management</classname>
	table. After it has been opened, a new filter may be created by clicking <classname>New
	Filter</classname> and then insert a name for the filter. After confirming with
	<emphasis>OK</emphasis> the filter is created and a new window comes up, where
	properties can be assigned to it. To add properties, right-click for the
	context-menu and select the property you want to filter with.
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_filter_editor/job_filter_editor_contextmenu.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a filter property.
	  </phrase></textobject>
	  <caption><para>
	    Adding a filter property.
	  </para></caption>
	</mediaobject>
      </para>
      <para>
	In the current example, we chose to filter by <emphasis>Job Id</emphasis>. A new dialog
	pops up. Now one can select a range of job ids to be displayed. Since a job id is
	always an integer, one has the option to select among the filter types
	<emphasis>between x and y</emphasis>, <emphasis>bigger than x</emphasis> and
	<emphasis>less than x</emphasis>.
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/job_filter_editor/job_filter_editor_jobid_filter.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Filtering by job id.
	  </phrase></textobject>
	  <caption><para>
	    Filtering by job id.
	  </para></caption>
	</mediaobject> 
	<mediaobject> 
	  <imageobject><imagedata 
	  fileref="images/slurm/job_filter_editor/job_filter_editor_jobid_filter1.png" 
	  width="85%" format="PNG"/></imageobject> 
	  <textobject><phrase> 
	    Job Id filter is created. 
	  </phrase></textobject> 
	  <caption><para> 
	    Job Id filter is created. 
	  </para></caption> 
	</mediaobject> 
	Choose the filter type you want, set the values and confirm with OK. Consequently, the
	property is now part of the new filter. One can combine multiple properties in one
	custom filter. Each additional property narrows down the possible jobs to be
	displayed. After adding all desired properties, hit the <classname>Save</classname>
	button. Now the new filter can be applied in the <classname>Job Management</classname>
	window.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Node-State-Management">
      <title>Node State Management</title>
      <para>
	The <classname>Node State Management</classname> dialog lists all hosts that are
	registered with Slurm. There are three different kind of views showing the existing
	hosts. The color of the LED in front of the hostname indicates the Slurm state a node
	is in. When hovering over a particular node, a tool-tip describing the state appears.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    Partition View
	  </term>
	  <listitem>
	    <para>
	      <mediaobject>
	        <imageobject><imagedata
	        fileref="images/slurm/node_state_management/node_state_management_full.png"
	        width="85%" format="PNG"/></imageobject>
	        <textobject><phrase>
	          The Partition View.
	        </phrase></textobject>
	        <caption><para>
	          The Partition View.
	        </para></caption>
	      </mediaobject> 
	      This tree shows all Slurm partitions and their assigned compute nodes when
	      uncollapsed. This can be used to act on all nodes found in one or more
	      partitions.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Enclosure View
	  </term>
	  <listitem>
	    <para>
	      <mediaobject>
	        <imageobject><imagedata
	        fileref="images/slurm/node_state_management/node_state_management_enclosure_view.png"
	        width="85%" format="PNG"/></imageobject>
	        <textobject><phrase>
	          The Enclosure View
	        </phrase></textobject>
	        <caption><para>
	          The Enclosure View
	        </para></caption>
	      </mediaobject> 
	      This tree has the same structure as the <classname>Enclosure View</classname>
	      dialog. It is useful when acting on a group of nodes located in specific
	      enclosures (e.g. to drain all nodes in a certain rack, because of a planned
	      maintenance for that rack).
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    NodeState View
	  </term>
	  <listitem>
	    <para>
	      <mediaobject>
	        <imageobject><imagedata
	        fileref="images/slurm/node_state_management/node_state_management_node_state_view.png"
	        width="85%" format="PNG"/></imageobject>
	        <textobject><phrase>
	          The NodeState View
	        </phrase></textobject>
	        <caption><para>
	          The NodeState View
	        </para></caption>
	      </mediaobject> 
	      This tree shows all current node states in the cluster and their corresponding
	      nodes when uncollapsed. It can be used to conveniently act on all nodes in a
	      specific state (e.g. to undrain all previously drained nodes).
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_state_management/node_state_management_drag.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Selecting nodes via drag&amp;drop
	  </phrase></textobject>
	  <caption><para>
	    Selecting nodes via drag&amp;drop
	  </para></caption>
	</mediaobject> 
	To manage one or more nodes, they have to be selected first. Use the preferred view and
	move the node(s) to the right list via <emphasis>drag&amp;drop</emphasis>. One can also
	move a whole group of nodes, for example all nodes from a rack by dragging the name of
	the rack to the right tree. All nodes in this list are available for later actions. You
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_state_management/node_state_management_hostlist.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Selecting nodes via hostlist.
	  </phrase></textobject>
	  <caption><para>
	    Selecting nodes via hostlist.
	  </para></caption>
	</mediaobject> 
	can also select multiple nodes for drag&amp;drop or enter a hostlist in the
	<classname>Hostlist</classname> field (e.g. beo-[01-04]). The nodes will appear in the
	right list, if the hostlist is valid.
      </para>
      <para>
	There are seven possible actions that may be applied to the selected nodes:
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_state_management/node_state_management_actions.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Selecting an action.
	  </phrase></textobject>
	  <caption><para>
	    Selecting an action.
	  </para></caption>
	</mediaobject> 
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    Drain
	  </term>
	  <listitem>
	    <para>
	      The node is currently executing a job, but will not be allocated additional
	      jobs. The node state will be changed to state <emphasis>DRAINED</emphasis> when
	      the last job on it completes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Undrain
	  </term>
	  <listitem>
	    <para>
	      This will undrain all selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Set to POWER SAVE
	  </term>
	  <listitem>
	    <para>
	      The nodes will be put into power save mode. Power management mode needs to be
	      configured in the slurm config for this to work.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Power up
	  </term>
	  <listitem>
	    <para>
	      The nodes will be powered up. Power management mode needs to be configured in the
	      slurm config for this to work.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Start Slurmd
	  </term>
	  <listitem>
	    <para>
	      This starts the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Stop Slurmd
	  </term>
	  <listitem>
	    <para>
	      This stops the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Restart Slurmd
	  </term>
	  <listitem>
	    <para>
	      This restarts the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	Once the desired nodes are selected, an action can be chosen and then executed by
	clicking the <classname>Execute</classname> button. In case the action was operating on
	the nodes slurmd, an RXengine window comes up, in which one can track the success of
	the remote slurmd operation. To clear the complete list of selected nodes, one can
	click the <classname>Clear</classname> button. To remove only a subset of nodes, one
	can select them in the right list and remove them via the context-menu.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Reservations">
      <title>Slurm Reservations</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/reservation/reservation_full.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    The Slurm Reservations window.
	  </phrase></textobject>
	  <caption><para>
	    The Slurm Reservations window.
	  </para></caption>
	</mediaobject> 
	The <classname>Slurm Reservations</classname> window shows a table of all active
	reservations and their most important properties. Furthermore, it allows to manipulate
	the reservations and create new ones.
      </para>
      <bridgehead>Creating a new Reservation</bridgehead>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/reservation/reservation_add.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Reservation.
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Reservation.
	  </para></caption>
	</mediaobject>
	To create a new reservation, click the <classname>Add reservation</classname> button. A
	new dialog pops up. The following parameters can be specified:
	<variablelist>
	  <varlistentry>
	    <term>
	      Name
	    </term>
	    <listitem>
	      <para>
		Here a custom name can be specified for the reservation. If no custom name is
		given Slurm automatically creates one based on the first user or account name
		chosen for the reservation and a numeric suffix.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Account(s)
	    </term>
	    <listitem>
	      <para>
		To create a reservation, one has to either select one or more accounts and/or
		one or more users who will be allowed to use it. Select one or more accounts by
		checking their entries in the pop-up. All users of the selected accounts may
		utilize the reservation.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      User(s)
	    </term>
	    <listitem>
	      <para>
		To create a reservation, one has to either select one or more accounts and/or
		one or more users who will be allowed to use it. Select one or more users by
		checking their entries in the pop-up. In case accounts are also set, the
		<classname>Select User</classname> dialog shows only the users belonging to the
		selected accounts.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Partition
	    </term>
	    <listitem>
	      <para>
		The partition the reservation applies to.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Start Time
	    </term>
	    <listitem>
	      <para>
		The start time of the reservation. The default value is
		<emphasis>now</emphasis>. By changing the Start Time, Duration or End Time
		all timing values will be recalculated.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Duration
	    </term>
	    <listitem>
	      <para>
		The duration of the reservation. Set a count of days and/or hours and
		minutes. By changing the Start Time, Duration or End Time, all timing values
		will be recalculated.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      End Time
	    </term>
	    <listitem>
	      <para>
		The End Time of the reservation. By changing the Start Time, Duration or End
		Time, all timing values will be recalculated.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Nodes and Cores
	    </term>
	    <listitem>
	      <para>
		One may either choose to set a Node Count and Core Count or a fixed Node List
		and Cores per Node. In the former case, Slurm will randomly select the nodes
		and cores for your reservation. By choosing the second variation one can
		explicitly select the nodes for the reservation and the number of cores from
		every node.
		<variablelist>
		  <varlistentry>
		    <term>
		      Node Count / Core Count
		    </term>
		    <listitem>
		      <para>
			Number of nodes and cores to be reserved.
		      </para>
		    </listitem>
		  </varlistentry>
		  <varlistentry>
		    <term>
		      Node List / Cores per Node
		    </term>
		    <listitem>
		      <para>
			Identify the node(s) to be reserved. For every node you can set the
			number of cores.
		      </para>
		    </listitem>
		  </varlistentry>
		</variablelist>
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>
	      Flags
	    </term>
	    <listitem>
	      <para>
		Flags associated with the reservation. The following flags can be set:
		<itemizedlist>
		  <listitem>
		    <para>
		      ANY_NODES: Use any compute nodes
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      DAILY: Set DAILY flag
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      FIRST_CORES: Use only first cores on each node
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      IGNORE_JOBS: Ignore running jobs
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      MAINT: Set MAINT flag
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      OVERLAP: Permit to overlap others
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      PART_NODES: Use partition nodes only
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      STATIC_ALLOC: Static node allocation
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      TIME_FLOAT: Time offset is relative
		    </para>
		  </listitem>
		  <listitem>
		    <para>
		      WEEKLY: Set WEEKLY flag
		    </para>
		  </listitem>
		</itemizedlist>
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
	Confirm by clicking the <classname>Add reservation</classname> button.
      </para>
      <bridgehead>Updating a Reservation</bridgehead>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/reservation/reservation_update.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Updating a reservation.
	  </phrase></textobject>
	  <caption><para>
	    Updating a reservation.
	  </para></caption>
	</mediaobject>
	To update a reservation one just has to select it and open its context-menu. Choose
	<classname>Update Reservation</classname>. A window pops up with all the properties set
	to the values of the existing reservation. To modify the reservation just make the
	desired changes and click the <classname>Update Reservation</classname> button.
	<note>
	  <para>
	     Not all properties are changeable. To edit the <classname>Start Time</classname>
	     of a reservation, the current and the new <classname>Start Time</classname> have
	     to be in the future. In case a value for <classname>Nodes per Core</classname> was
	     set, the reservation will not be updateable anymore.
	  </para>
	</note>
      </para>
      <mediaobject>
	<imageobject><imagedata
	fileref="images/slurm/reservation/reservation_delete.png"
	width="85%" format="PNG"/></imageobject>
	<textobject><phrase>
	  Deleting a reservation.
	</phrase></textobject>
	<caption><para>
	  Deleting a reservation.
	</para></caption>
      </mediaobject>
      <bridgehead>Deleting a Reservation</bridgehead>
      <para>
	To delete a reservation one just has to choose <classname>Delete
	Reservation</classname> from its context-menu .
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Accounting">
      <title>Slurm Accounting</title>
      <section xml:id="sec-Slurm-Manage-Manage-Accounts">
	<title>Manage Slurm Accounts</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/menu.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Accessing Slurm Accounting.
	    </phrase></textobject>
	    <caption><para>
	      Accessing Slurm Accounting.
	    </para></caption>
	  </mediaobject> 
	  To open the <classname>Manage Slurm Accounts</classname> dialog go
	  <guimenu>Components-> Slurm->Manage->Accounting->Manage Accounts</guimenu>. There
	  will be a tab for every cluster known to the Slurm accounting database. Each tab
	  contains a tree with the accounts and users that are registered in the corresponding
	  <mediaobject> 
	    <imageobject><imagedata 
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_full.png" 
	    width="85%" format="PNG"/></imageobject> 
	    <textobject><phrase> 
	      Managing Slurm Accounts. 
	    </phrase></textobject> 
	    <caption><para> 
	      Managing Slurm Accounts. 
	    </para></caption> 
	  </mediaobject> 
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_add_account.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Adding a Slurm Account.
	    </phrase></textobject>
	    <caption><para>
	      Adding a Slurm Account.
	    </para></caption>
	  </mediaobject>
	  Slurm instance. To better distinguish between accounts and users, they are identified
	  by pre-defined color codes (See <link linkend="sec-Look-Feel-Preferences">Preferences
	  Dialog</link> for changing the corresponding colors). At the bottom of the dialog you
	  can see a legend for the color codes.
	</para>
	<bridgehead>Adding an Account</bridgehead>
	<para>
	  Clicking the <classname>Add Account</classname> button will open a new dialog.  Here
	  you have to specify a name for the new account. Optionally, you can also specify a
	  parent account and a description. If an account had been selected before, the
	  <classname>Add Account</classname> button was clicked, this account will be
	  pre-filled as the parent account. When you are finished, confirm with the
	  <emphasis>OK</emphasis> button.
	</para>
	<note>
	  <para>
	  Account names have to be unique!
	  </para>
	</note>
	<bridgehead>Deleting an Account</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_delete_account_error.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Trying to delete a non-empty Account.
	    </phrase></textobject>
	    <caption><para>
	      Trying to delete a non-empty Account.
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_account_contextmenu.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Deleting an Account.
	    </phrase></textobject>
	    <caption><para>
	      Deleting an Account.
	    </para></caption>
	  </mediaobject>
	  Before being able to delete an account, it has to be assured, that the account
	  contains no more users (See below to learn how to remove users from an
	  account). Optionally, one can remove users from an account in the <link
	  linkend="sec-Slurm-Manage-Manage-Users-delete-user">Manage Slurm Users</link>
	  dialog.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_user_contextmenu.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Deleting a User from an Account.
	    </phrase></textobject>
	    <caption><para>
	      Deleting a User from an Account.
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_delete_defuser_error.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Error when removing from default Account.
	    </phrase></textobject>
	    <caption><para>
	      Error when removing from default Account.
	    </para></caption>
	  </mediaobject>
	  After all users are removed from the account, one can delete it via its context-menu
	  by selecting <classname>Delete Account</classname>.
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Accounts-delete-user">Deleting a user from an Account</bridgehead>
	<para>
	  To delete a user from an account use its context-menu and select <classname>Delete
	  User</classname>.
	</para>
	<note>
	  <para>
	    You can't remove a user from his default account. First <link
	    linkend="sec-Slurm-Manage-Manage-Users-change-def">change the default account of
	    the user</link> and then delete the old one.
	  </para>
	</note>
	<bridgehead>Show Account/User Properties</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_accounts/manage_accounts_account_properties.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Show the properties of an Account.
	    </phrase></textobject>
	    <caption><para>
	      Show the properties of an Account.
	    </para></caption>
	  </mediaobject>
	  To show the properties of an account or user bring up its context-menu and select
	  <classname>Show Account Properties</classname> or <classname>Show User
	  Properties</classname> depending on what was selected. Two filters are available in
	  this dialog: One for hiding all properties with a value of <literal>0</literal> or
	  <literal>empty</literal> and one for hiding exotic properties which are not of
	  interest in most cases. By default, both filters are enabled. To disable them, their
	  corresponding entry has to be checked at the bottom of the dialog.
	  <!--Write how to edit properties after this is completly implemented-->
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Manage-Users">
	<title>Manage Slurm Users</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_users/manage_users_full.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Manage Users Dialog.
	    </phrase></textobject>
	    <caption><para>
	      The Manage Users Dialog.
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_users/manage_users_def_is_set.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      A User's default Account is highlighted.
	    </phrase></textobject>
	    <caption><para>
	      A User's default Account is highlighted.
	    </para></caption>
	  </mediaobject>
	  The <classname>Manage Users</classname> dialog allows to assign accounts to a user,
	  set and change a user's default account, register new users and delete users. When
	  a user is selected, the accounts he is a member of are checked in the
	  <classname>Accounts</classname> list displayed at the right. His default account is
	  highlighted with the specific color set for default accounts in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>. By default, system
	  users are hidden. To show them, just check the <emphasis>Show system users (UID &lt;
	  1000)</emphasis> checkbox.
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-register-user">Registering a User with Slurm</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_users/manage_users_set_def.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Registering a User with Slurm.
	    </phrase></textobject>
	    <caption><para>
	      Registering a User with Slurm.
	    </para></caption>
	  </mediaobject>
	  To register a user with Slurm, uncollapse the <classname>Unregistered
	  Users</classname> and select the desired user. Every user needs a default account, so
	  this has to be defined first. To do so, select <classname>Set as Default
	  Account</classname> in the context-menu of the account you want to be the default. By
	  doing this, the user will be registered with this default account. If you just select
	  some accounts for an unregistered user by checking them and then pressing the
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_users/manage_users_remove_user.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Deleting a User.
	    </phrase></textobject>
	    <caption><para>
	      Deleting a User.
	    </para></caption>
	  </mediaobject>
	  <classname>Create</classname> button, the user will be registered with a default
	  account set randomly among the chosen ones.
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-delete-user">Deleting
	a User</bridgehead>
	<para>
	  To delete a user, bring up his context-menu and select <classname>Remove
	  User</classname>.
	</para>
	<note>
	  <para>
	    Be sure that the user has no active jobs.
	  </para>
	</note>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-assign-to-accounts">Assigning a User to Accounts</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/accounting/manage_users/manage_users_assign_accounts.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Assigning A User to Accounts.
	    </phrase></textobject>
	    <caption><para>
	      Assigning A User to Accounts.
	    </para></caption>
	  </mediaobject>
	  Selecting a registered Slurm user displays the accounts he is member of in the
	  <classname>Accounts</classname> list to the right. To add/remove him to/from an
	  account (un)check it and hit the <classname>Activate Changes</classname> button.
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-change-def">Changing the Default Account of a User</bridgehead>
	<para>
	  To change the default account of a user, select him in the <classname>Registered
	  Slurm Users</classname> tree and bring up the context-menu of the account you want to
	  set as the new default. Then select <classname>Set as Default Account</classname>.
	</para>
      </section>
      <!---
      <section xml:id="sec-Slurm-Manage-Manage-QOS">
	<title>Manage QOS</title>
	<para>

	</para>
      </section>
      -->
      <section xml:id="sec-Slurm-Manage-Cluster-Usage">
	<title>Cluster Usage</title>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/cluster_usage/cluster_usage_full.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Slurm Cluster Usage Display
	    </phrase></textobject>
	    <caption><para>
	      The Slurm Cluster Usage Display
	    </para></caption>
	  </mediaobject>
	<para>
	  The <classname>Cluster Usage</classname> display uses the Slurm utility
	  <application>sreport</application> to generate reports of job usage and cluster
	  utilization. For detailed information about the type of reports and options read the
	  <link xlink:href="https://slurm.schedmd.com/sreport.html___blank___">sreport
	  manpage</link>. Select your report type (for example <emphasis>cluster</emphasis>) in
	  the left combo box and then the report options from the combobox right to it. Per
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/cluster_usage/cluster_usage_full2.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Cluster Usage by Account/User.
	    </phrase></textobject>
	    <caption><para>
	      Cluster Usage by Account/User.
	    </para></caption>
	  </mediaobject>
	  default the time period used for the report is the past day. You can change this by
	  modifying the start and the end time. The colors used in the window are customizable
	  in the <link linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	</para>
	<note>
	  <para>
	    <application>sreport</application> will only be able to show utilization data if
	    Slurm Accounting is activated. This is the default on Qlustar clusters.
	  </para>
	</note>
      </section>
      <section xml:id="sec-Slurm-Manage-Fair-Share">
	<title>Fair Share</title>
	<para>
	  The <classname>Fair Share</classname> view uses the Slurm utility
	  <application>sshare</application> to display Slurm fair-share information. We provide
	  two versions of views, a basic and a long one. The long version shows additional
	  information that is needed less often. By default we show the basic view, but you can
	  easily switch by checking the <classname>long</classname> checkbox at the bottom
	  right of the window.
	</para>
	<bridgehead>Account View</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/fair_share/fair_share_account_view.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Fair-share Account View.
	    </phrase></textobject>
	    <caption><para>
	      Fair-share Account View.
	    </para></caption>
	  </mediaobject>
	  The <classname>Account View</classname> shows the Slurm fair-share information
	  for all registered Slurm accounts. The used colors are customizable in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	</para>
	<bridgehead>Detailed Account View</bridgehead>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/fair_share/fair_share_detailed_account_view.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Fair-share detailed Account View.
	    </phrase></textobject>
	    <caption><para>
	      Fair-share detailed Account View.
	    </para></caption>
	  </mediaobject>
	  The <classname>Detailed Account View</classname> shows the Slurm fair-share
	  information for all registered Slurm accounts including the information for
	  individual users that are member of the accounts. The used colors are customizable in
	  the <link linkend="sec-Look-Feel-Preferences">Preferences Dialog</link>.
	</para>
	<para>For more information about <application>sshare</application> and the meaning of
	the displayed quantities, read the <link
	xlink:href="https://slurm.schedmd.com/sshare.html___blank___">sshare manpage</link>.
	</para>
	<note>
	  <para>
	    <application>sshare</application> will only be able to show fair-share data if the
	    fair-share option is activated in the Slurm config. This is the default on Qlustar
	    clusters.
	  </para>
	</note>
      </section>
      <section xml:id="sec-Slurm-Manage-Job-Priorities">
	<title>Job Priorities</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/job_priorities/job_priorities_full.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Job Priorities View.
	    </phrase></textobject>
	    <caption><para>
	      The Job Priorities View.
	    </para></caption>
	  </mediaobject>
	  The <classname>Job Priorities</classname> dialog uses the Slurm utility
	  <application>sprio</application> to display the values of the individual factors that
	  are used to calculate a job's scheduling priority when the <application>multi-factor
	  priority plugin</application> is installed. This is information needed, when
	  analyzing why certain pending jobs run earlier than others.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/job_priorities/job_priorities_full_long.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The Job Priorities View (long version).
	    </phrase></textobject>
	    <caption><para>
	      The Job Priorities View (long version).
	    </para></caption>
	  </mediaobject>
	  We provide two versions of the view, a basic and a long one. The long version shows
	  additional information that is needed less often. By default we show the basic view,
	  but you can easily switch by checking the <classname>long</classname> checkbox at the
	  bottom right of the window. For more information about
	  <application>sprio</application> read the <link
	  xlink:href="https://slurm.schedmd.com/sprio.html___blank___">sprio manpage</link>.
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Settings">
	<title>QluMan Slurm Settings</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/settings.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      QluMan Slurm settings.
	    </phrase></textobject>
	    <caption><para>
	      QluMan Slurm settings.
	    </para></caption>
	  </mediaobject>
	  The <classname>QluMan Slurm Settings</classname> dialog allows to customize the
	  update intervals for information about jobs, nodes, partitions and Slurm
	  accounting. This information flow is provided by the QluMan Slurm daemon running on
	  the cluster and the QluMan GUI automatically subscribes to it. Shorter update
	  intervals mean more server load and more network traffic. In most cases, the default
	  values should be adequate.
	</para>
	<note>
	  <para>
	    Whenever you modify some property/value in the QluMan GUI for example for a job
	    the GUI will always get an immediate update for that. The update intervals only
	    affect changes that are not the consequence of an explicit action by a QluMan user.
	  </para>
	</note>
      </section>
    </section>
  </section>
</section>


