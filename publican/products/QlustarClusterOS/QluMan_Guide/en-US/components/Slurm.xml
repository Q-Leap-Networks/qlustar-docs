<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section [
<!ENTITY % BOOK_ENTITIES SYSTEM "../QluMan_Guide.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<section xmlns="http://docbook.org/ns/docbook"
	 xmlns:xlink="http://www.w3.org/1999/xlink"
	 xmlns:xi="http://www.w3.org/2001/XInclude"
	 xml:id="sec-slurm-component">
  <title>Slurm Configuration and Management</title>
  <section xml:id="sec-Slurm-Config">
    <title>Slurm Configuration</title>
    <section xml:id="sec-Slurm-Config-Overview">
      <title>Overview</title>
      <para>
	The slurm configuration module comes in four parts:
      </para>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>
	      The overall slurm configuration, controlled via two templates in the
	      <classname>Config Header</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of slurm nodes, done via the <classname>Node
	      Groups</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of partitions, achieved by using the
	      <classname>Partitions</classname> tab.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The configuration of <firstterm>GRES</firstterm> (generic resources) groups,
	      settable using the <classname>Gres Groups</classname> tab.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
      <para>
	Assignment of hosts to node groups and/or partitions is possible by adding the latter
	to the relevant <classname>Config Sets</classname> and <classname>Host
	Templates</classname> or by <link linkend="sec-Enclosure-View">direct assignment</link>
	through the config (set) context menu in the enclosure view.
      </para>
    </section>
    <section xml:id="sec-Slurm-Config-Header">
      <title>Slurm Config Header</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/config.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing the Slurm config header
	  </phrase></textobject>
	  <caption><para>
	    Editing the Slurm config header
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/editing.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Saving the Slurm config header
	  </phrase></textobject>
	  <caption><para>
	    Saving the Slurm config header
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/config/cgroups.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Editing the Slurm cgroups config
	  </phrase></textobject>
	  <caption><para>
	    Editing the Slurm cgroups config
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/preview.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Previewing the slurm config files
	  </phrase></textobject>
	  <caption><para>
	    Previewing the slurm config files
	  </para></caption>
	</mediaobject>
	The overall slurm configuration is split into two templates, the slurm config and
	<filename>cgroups.conf</filename>. On write, <application>QluMan</application> adds
	the NodeName and PartitionName lines at the end of the slurm config template to
	generate the <filename>slurm.conf</filename> file, while the
	<filename>cgroup.conf</filename> file gets written as is. For the syntax of both
	templates, please refer to the slurm documentation (e.g. <code>man
	slurm.conf</code>). To edit one of the templates, select it, click the
	<guibutton>Edit</guibutton> button and start making changes. Click
	<guibutton>Save</guibutton> to save the changes or <guibutton>Undo</guibutton> to
	discard them. Use the <guibutton>Preview</guibutton> button to check changes before
	writing them.
      </para>
    </section>
    <section xml:id="sec-Slurm-Node-Groups">
      <title>Slurm Node Groups</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/main.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring Slurm node groups
	  </phrase></textobject>
	  <caption><para>
	    Configuring Slurm node groups
	  </para></caption>
	</mediaobject>
	Slurm node properties are configured from two sources:
      </para>
      <para>
	<orderedlist>
	  <listitem>
	    <para>
	      The <xref linkend="Hardware-Properties" endterm="Hardware-Properties"/>
	      assigned to a host. The number of CPUs, sockets, cores and the size of its main
	      memory is derived from there.
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      The slurm node groups. Every host can belong to at most one such group. The
	      membership is assigned (see <xref linkend="sec-Slurm-Assign-Hosts"/>) by adding
	      the desired node group to the <link linkend="PropConf-Sets">Config Set</link>
	      that is assigned to the node via its <link linkend="Host-Templates">Host
	      Template</link> or via the alternative ways to assign config classes.
	    </para>
	    <para>
	      Each Node Group is a collection of slurm node properties, that will be set for
	      the members of the group. Per default, only the <code>MemSpecLimit</code>
	      property is defined, but other properties like <parameter>Feature</parameter> or
	      <parameter>Weight</parameter> can be added by using the <link
	      linkend="sec-Slurm-Property-Editor">Slurm Property Editor</link>.
	    </para>
	  </listitem>
	</orderedlist>
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/new3.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Creating a new Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Creating a new Slurm node group
	  </para></caption>
	</mediaobject>
	A new node group can be created by clicking the <guibutton>New Node Group</guibutton>
	button or selecting <guimenuitem>New Node Group</guimenuitem> from the context
	menu. This opens a dialog asking for the name of the new group.  An existing node
	group can be renamed or deleted from the context menu.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/rename1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Renaming a Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Renaming a Slurm node group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/rename2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Renaming a Slurm node group
	  </phrase></textobject>
	  <caption><para>
	    Renaming a Slurm node group
	  </para></caption>
	</mediaobject>
	The context menu also allows to add properties to a group. Note, that some properties
	are <emphasis role="bold">unique</emphasis>, i.e. only one value can be selected for
	the property. Adding a second value of the same property will automatically replace
	the old value in that case. Other properties are not unique. Adding multiple values
	to such properties results in a comma separated list of values in the
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/add_property1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding a Slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Adding a Slurm node property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/node_groups/change_property.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Changing a Slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Changing a Slurm node property
	  </para></caption>
	</mediaobject>
	<filename>slurm.conf</filename> file. An example for this is the
	<parameter>Feature</parameter> property. Properties can also be changed directly
	using the pull-down menu. If a change will cause a duplicate value, the previous
	(duplicate) value is automatically removed.
      </para>
    </section>
    <section xml:id="sec-Slurm-Partitions">
      <title>Slurm Partitions</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/partitions.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Configuring Slurm partitions
	  </phrase></textobject>
	  <caption><para>
	    Configuring Slurm partitions
	  </para></caption>
	</mediaobject>
	The management of Slurm partitions works exactly the same way as that of slurm node
	groups. Please see <xref linkend="sec-Slurm-Node-Groups"/> for how to create, rename
	and change partitions.
      </para>
    </section>
    <section xml:id="sec-Slurm-Property-Editor">
      <title>Slurm Property Editor</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/starting.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Starting the Slurm property editor
	  </phrase></textobject>
	  <caption><para>
	    Starting the Slurm property editor
	  </para></caption>
	</mediaobject>
	The Slurm property editor for node or partition properties can be opened by clicking
	the <guibutton>Properties</guibutton> button at the bottom of the Slurm main
	dialog. If the <classname>Node Groups</classname> tab is selected, the editor for
	node properties will be opened. If the <classname>Partitions</classname> tab is
	selected, the editor for partition properties will be opened.
      </para>
      <para>
	To add a new property, enter the name of the property in the name field. If the name
	does not already exist, the <guibutton>New Property</guibutton> button will be
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/main.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    The Slurm property editor
	  </phrase></textobject>
	  <caption><para>
	    The Slurm property editor
	  </para></caption>
	</mediaobject>
	enabled. Click on it to create the property. <application>QluMan</application> has a
	white-list of known valid properties, e.g. <parameter>Weight</parameter> and allows
	adding such a property without further questions. In this case,
	<application>QluMan</application> will also set the unique flag and add all known
	property values automatically.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Defining a slurm node property
	  </phrase></textobject>
	  <caption><para>
	    Defining a slurm node property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new_bad.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    An invalid property is rejected
	  </phrase></textobject>
	  <caption><para>
	    An invalid property is rejected
	  </para></caption>
	</mediaobject>
	When a property is created that is not part of the white-list
	(<parameter>Gres</parameter> in the screenshot) a dialog opens up, asking for
	confirmation. Note that adding an unknown property can lead to a failure when trying to
	restart slurm. Therefore make sure to only add properties you are certain slurm will
	know about. A property without values can be deleted by clicking the
	<guibutton>Delete</guibutton> button.
      </para>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/new_good.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    A new allowed property
	  </phrase></textobject>
	  <caption><para>
	    A new allowed property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/add_value.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Adding new property values
	  </phrase></textobject>
	  <caption><para>
	    Adding new property values
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/delete.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Deleting a property
	  </phrase></textobject>
	  <caption><para>
	    Deleting a property
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/property_editor/delete_value.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Deleting a property value
	  </phrase></textobject>
	  <caption><para>
	    Deleting a property value
	  </para></caption>
	</mediaobject>
	To add values to a property, first select the desired property using the pull-down
	menu from the name. Then enter the new property using <guibutton>Add
	Value</guibutton> at the bottom and finally press <keycap>return</keycap> to add it. To
	delete a value, select <guimenuitem>Delete value</guimenuitem> from the context menu.
      </para>
    </section>
    <section xml:id="sec-Slurm-Gres-Groups">
      <title>Slurm Gres Groups</title>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/main.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            The Slurm Gres Group editor
          </phrase></textobject>
          <caption><para>
            The Slurm Gres Group editor
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/select.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Selecting a Slurm Gres Group to configure
          </phrase></textobject>
          <caption><para>
            Selecting a Slurm Gres Group to configure
          </para></caption>
        </mediaobject>
        Currently, Slurm Gres Groups are used in Qluman mainly to handle the setup of GPUs for
        slurm. The <link linkend="sec-GPUwizard">GPU Wizard</link> is the most convenient and
        accurate way to create such resource groups. Supplementing the wizard, the
        <guimenuitem>Gres Groups</guimenuitem> tab allows creating and managing any type of
        resource group, as well as binding GPUs to specific CPU sets, which is not possible via
        the wizard. To view or modify a Gres Group, select the group from the drop down
        menu. Use the <guibutton>Preview</guibutton> button to check the resulting config file
        changes before writing them.
      </para>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new1.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new2.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        A new Gres Group can be created by clicking the <guibutton>New Gres Group</guibutton>
        button. This opens a dialog asking for the type, name and description of the new
        group. An existing type can be selected from the drop down menu or a new type can be
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new3.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/new4.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Creating a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Creating a Slurm Gres group
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/delete_group.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Deleting a Slurm Gres group
          </phrase></textobject>
          <caption><para>
            Deleting a Slurm Gres group
          </para></caption>
        </mediaobject>
        entered directly. After entering a new unique group name the <guibutton>OK</guibutton>
        button becomes selectable. A group that is not in use can be deleted by clicking
        <guibutton>Delete Group</guibutton>.
      </para>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/new1.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a Gres entry
          </phrase></textobject>
          <caption><para>
            Adding a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/new2.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Adding a Gres entry
          </phrase></textobject>
          <caption><para>
            Adding a Gres entry
          </para></caption>
        </mediaobject>
        A Gres Group can have multiple entries. A new entry may be added to a group by clicking
        on <guibutton>New Entry</guibutton>. Initially, the entry is blank and at least the
        <classname>type column</classname> must be filled in. For resources that can be
        allocated in multiple pieces, a count can be set, indicating the number of resource
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/type.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the type of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the type of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/count.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the count for a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the count for a Gres entry
          </para></caption>
        </mediaobject>
        pieces available. For resources that have a device file associated with it, its path
        can be set in the <classname>file column</classname>.
      </para>
      <note>
	<para>
	  For resources that have an associated file, the count is not applicable, since there
	  is always only exactly one file.
	</para>
      </note>
      <para>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/file.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting the associated device name of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting the associated device name of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/cpus.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Setting associated CPUs of a Gres entry
          </phrase></textobject>
          <caption><para>
            Setting associated CPUs of a Gres entry
          </para></caption>
        </mediaobject>
        <mediaobject>
          <imageobject><imagedata
          fileref="images/slurm/gres_groups/entry/delete.png"
          width="85%" format="PNG"/></imageobject>
          <textobject><phrase>
            Deleting a Gres entry
          </phrase></textobject>
          <caption><para>
            Deleting a Gres entry
          </para></caption>
        </mediaobject>
	Optionally, an entry can also be associated with a set of CPUs. The CPUs to be
        used can be entered as a comma-separated list or, for recurring sets, selected from the
        drop-down menu. An entry can be deleted from the group by selecting <guibutton>Delete
        Entry</guibutton>. A group that is no longer in use can be deleted by selecting
        <guibutton>Delete Group</guibutton>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Assign-Hosts">
      <title>Assigning Hosts to Slurm Node Groups, Partitions and Gres Groups</title>
      <para>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host1.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Assigning a Slurm Node Group
	  </phrase></textobject>
	  <caption><para>
	    Assigning a Slurm Node Group
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host2.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Assigning a Slurm Partition
	  </phrase></textobject>
	  <caption><para>
	    Assigning a Slurm Partition
	  </para></caption>
	</mediaobject>
	Hosts are assigned to Slurm <classname>Node/Gres Groups</classname> and <emphasis
	role="bold">Partitions</emphasis> by use of a <link linkend="Host-Templates">Host
	Template</link> and its corresponding <link linkend="PropConf-Sets">Config Set</link>
	or by <link linkend="sec-Enclosure-View">direct assignment</link>. A <classname>Config
	Set</classname> may contain at most one <classname>Node Group</classname> but any
	number of <classname>Gres Groups</classname> or <classname>Partitions</classname>,
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host4.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Slurm properties in a Config Set
	  </phrase></textobject>
	  <caption><para>
	    Slurm properties in a Config Set
	  </para></caption>
	</mediaobject>
	<mediaobject>
	  <imageobject><imagedata
	  fileref="images/slurm/assign_host5.png"
	  width="85%" format="PNG"/></imageobject>
	  <textobject><phrase>
	    Slurm property assignment chain
	  </phrase></textobject>
	  <caption><para>
	    Slurm property assignment chain
	  </para></caption>
	</mediaobject>
	since a host can be member of an arbitrary number of slurm partitions. They can all be
	assigned by selecting them via <guimenuitem>Add Config</guimenuitem> in the context
	menu of the <classname>Config Set</classname> or via the Enclosure View context menu of
	hosts.
      </para>
    </section>
    <section xml:id="sec-GPUwizard">
      <title>GPU Wizard</title>
      <section xml:id="sec-GPUwizard-purpose">
	<title>Purpose</title>
	<para>
	  When setting up Slurm, the basic node config is derived from the hosts <link
	  linkend="Hardware-Properties">Hardware Properties</link>. However, configuring GPUs
	  is more complex: This is done through the Slurm <link
	  linkend="sec-Slurm-Gres-Groups">Gres Groups</link> as part of the slurm config
	  class. <classname>Gres Groups</classname> are used to specify the type and number of
	  GPUs of a host. When submitting jobs that require GPUs, this information is then used
	  to determine the nodes that satisfy the job requirements. All the necessary settings
	  for the desired configuration of the nodes may also be done manually and can be
	  changed later through the slurm config dialog from the main window.
	</para>
	<para>
	  As a convenient alternative, the <classname>GPU Wizard</classname> guides you through
	  the necessary configuration steps. It uses the auto-detected GPUs of hosts to suggest
	  their optimal configuration options. Furthermore, it attempts to establish a balance
	  between the available configuration strategies: Using templates or individually
	  assigned config sets and/or config classes.
	</para>
	<note>
	  <para>
	    For Nvidia GPUs to be detected on a host, it must have booted a Qlustar image that
	    includes the nvidia module. Otherwise GPUs will be missed. Only nodes on which GPUs
	    have been detected, can be configured through the GPU Wizard.
	  </para>
	</note>
      </section>
      <section xml:id="sec-GPUwizard-host-selection">
	<title>Selecting Hosts</title>
	<para>
	  The first step in the wizard is to select the hosts that should be
	  configured. Initially, the lists of hosts is empty. One or more of the four buttons
	  at the bottom have to be pressed to pre-select hosts that should be considered.
	</para>
	<para>
	  <mediaobject>
            <imageobject><imagedata
            fileref="images/slurm/gpu_wizard/host_selection1.png"
            width="85%" format="PNG"/></imageobject>
            <textobject><phrase>
              The host selection window
            </phrase></textobject>
            <caption><para>
              The host selection window
            </para></caption>
	  </mediaobject>
	  The <guibutton>Unconfigured</guibutton> button adds all hosts that do not have any
	  GPU configured at all. The <guibutton>Partially Configured</guibutton> button adds
	  hosts that already have some GPUs configured correctly, but not all of them. The
	  <guibutton>Wrongly Configured</guibutton> button adds hosts, where the configured
	  GPUs do not match the GPUs detected at boot, e.g. when the GPU cards have been
	  swapped for a newer model on the hosts. Finally, the <guibutton>Selected</guibutton>
	  button adds hosts, that have been selected in the enclosure view, including hosts
	  that are already configured correctly.
	</para>
	<note>
	  <para>
	  Only hosts with auto-detected GPUs will be shown, even if others are selected.
	</para>
	</note>
	<para>
	  <mediaobject>
            <imageobject><imagedata
            fileref="images/slurm/gpu_wizard/host_selection2.png"
            width="85%" format="PNG"/></imageobject>
            <textobject><phrase>
              Selecting a host group for configuration
            </phrase></textobject>
            <caption><para>
              Selecting a host group for configuration
            </para></caption>
	  </mediaobject>
	  Once one or more of the buttons are pressed, the affected hosts will show up in the
	  table. To keep things compact, hosts with identically detected GPUs are grouped
	  together and shown in <emphasis>hostlist syntax</emphasis>. Select one of the shown
	  groups by clicking on the corresponding row and then press
	  <guibutton>Next</guibutton> to start the configuration.
	</para>
      </section>
      <section xml:id="sec-GPUwizard-assignment-method">
	<title>Choosing the assignment option</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/modify.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Modifying an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Modifying an existing Config Set
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/clone.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Cloning an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Cloning an existing Config Set
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/config_set/assign.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      GPU Wizard: Directly assigning Gres Groups
	    </phrase></textobject>
	    <caption><para>
	      GPU Wizard: Directly assigning Gres Groups
	    </para></caption>
	  </mediaobject>
	  There are three different ways, how the GPU configuration can be achieved: On the
	  wizard's <classname>Config Set Page</classname> you have the option to a) add
	  (modify) the GPU config to the <classname>Config Set</classname> of the
	  currently assigned Host Template, b) clone the <classname>Config Set</classname>
	  currently active or c) assign <link linkend="sec-Slurm-Gres-Groups">Gres
	  Groups</link> directly to the group of selected hosts. Select the desired method and
	  press <guibutton>Next</guibutton> to continue to the next step.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/host_template_clone.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      The GPU Wizard Host Template page
	    </phrase></textobject>
	    <caption><para>
	      The GPU Wizard Host Template page
	    </para></caption>
	  </mediaobject>
	  In case the <emphasis>clone Config Set</emphasis> option is selected,
	  the <classname>Host Template Page</classname> will appear and offer the choice to
	  either modify the currently used <link linkend="Host-Templates">Host Template</link>
	  or to create a clone of it for further modification.
	</para>
	<note>
	  <para>
	    For the options that would modify an existing entity (Config set or Host template),
	    the wizard dialogs always show other non-selected hosts, that would also be
	    affected by the modifications.
	  </para>
	</note>
      </section>
      <section xml:id="sec-GPUwizard-gres-assignment">
	<title>Creating/assigning Gres groups</title>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group1.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Hostlist with unconfigured GPUs
	    </phrase></textobject>
	    <caption><para>
	      Hostlist with unconfigured GPUs
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group2.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Assigning a matching existing Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Assigning a matching existing Gres Group
	    </para></caption>
	  </mediaobject>
	  The next step is to possibly create and finally assign <link
	  linkend="sec-Slurm-Gres-Groups">Gres Groups</link> to the list of selected hosts. The
	  corresponding wizard page shows the unconfigured GPUs, each in a separate column. If
	  an existing <classname>Gres Group</classname> exists that includes all or a subset of
	  the unconfigured GPUs, the context menu allows to select it. This would conclude the
	  assignment process.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group3.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Selected GPUs assignable to a new Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Selected GPUs assignable to a new Gres Group
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group4.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Naming a new GPU Gres Group
	    </phrase></textobject>
	    <caption><para>
	      Naming a new GPU Gres Group
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/assign_group5.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Hostlist with all GPUs assigned/configured
	    </phrase></textobject>
	    <caption><para>
	      Hostlist with all GPUs assigned/configured
	    </para></caption>
	  </mediaobject>
	  Alternatively, when one or more GPUs are selected, a new <classname>Gres
	  Group</classname> can be created that the GPUs will be a member of. The new group
	  will have to be given a name and optionally a description. Once all GPUs are assigned
	  to a Gres Group, you can finish the process by pressing
	  <guibutton>Finish</guibutton>.
	</para>
	<para>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/action.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Different options for direct assignment
	    </phrase></textobject>
	    <caption><para>
	      Different options for direct assignment
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/existing.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Direct assignment using an existing Config Set
	    </phrase></textobject>
	    <caption><para>
	      Direct assignment using an existing Config Set
	    </para></caption>
	  </mediaobject>
	  In case <emphasis>direct assignment</emphasis> has been selected, one more wizard
	  page allows to fine-tune the assignment. An additional <emphasis>Action</emphasis>
	  column appears that allows to a) either use and assign an existing <classname>Config
	  Set</classname>, b) create and assign a new one
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/directly.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Choosing direct assignment of the Gres Groups
	    </phrase></textobject>
	    <caption><para>
	      Choosing direct assignment of the Gres Groups
	    </para></caption>
	  </mediaobject>
	  <mediaobject>
	    <imageobject><imagedata
	    fileref="images/slurm/gpu_wizard/direct_assign/new_set.png"
	    width="85%" format="PNG"/></imageobject>
	    <textobject><phrase>
	      Using and naming a new Config Set for direct assignment
	    </phrase></textobject>
	    <caption><para>
	      Using and naming a new Config Set for direct assignment
	    </para></caption>
	  </mediaobject>
	  or c) directly assign the <classname>Gres Groups</classname> to the selected
	  hosts. When choosing option b), the blank field of the <emphasis>New Config
	  Set</emphasis> column becomes editable by double-clicking.
	</para>
	<para>
	  Like with other properties, the optimal way for configuring (via template or
	  different direct assignment variations) is often a matter of taste and a trade-off
	  between simplicity, clarity and precision concerning your individual configuration
	  policy.
	</para>
      </section>
    </section>
  </section>
  <section xml:id="sec-Slurm-Manage">
    <title>Slurm Management</title>
      <para>
	The QluMan Slurm Component provides extensive functionality to manage and operate more
	or less all aspects and features of the Slurm workload manager. In Qlustar 9.2, QluMan
	supports the included Slurm version 16.05.
      </para>
      <para>
	The following management and operation sub-components are available:
      </para>
      <section xml:id="sec-Slurm-Manage-Overview">
	<title>Overview</title>
	<para>
	  <!--cbox(file: slurm/Overview/cluster_usage_overview_menu.png caption:)-->
	  In the <application>Slurm Overview</application> you get a close look over your cluster. This Overview
	  splitts itself into 2 parts: a <classname>Cluster Usage Overview</classname> and a <classname>Job
	  Overview</classname>.
	</para>
	<bridgehead>Cluster Usage Overview</bridgehead>
	<para>
	  <!--cbox(file: slurm/Overview/cluster_usage_overview.png caption:)-->
	  The <classname>Cluster Usage Overview</classname> provides live information and charts for
	  <classname>Nodes</classname>, <classname>CPU Cores</classname> and <classname>Memory</classname>. Every
	  property in the table has a tooltip for deeper information about it. 
	  <!--cbox(file: slurm/Overview/cluster_usage_overview_tooltip.png caption:)-->
	</para>
	<note>
	  <para>
	    You can change the colors for the <classname>Cluster Usage Overview</classname> in <link
	    linkend="sec-Look-Feel-Preferences">Preferences</link>.
	  </para>
	</note>
	<bridgehead>Job Overview</bridgehead>
	<para>
	  <!--cbox(file: slurm/Overview/job_overview.png caption:)-->
	  The <classname>Job Overview</classname> consists of 2 tables and 4 charts, which gets live updates. The
	  <classname>Running</classname> table provides running job informations for every user. The column are
	  holding the color of the user (if he is part of a chart), the username, the count of running cpu cores,
	  used nodes and running jobs. The <classname>Pending</classname> table provides the pending cpu cores and
	  jobs for the same user. These job informations are mirrored by the 4 pie-charts <classname>Allocated CPU
	  Cores by User</classname>, <classname>Used Nodes by User</classname>, <classname>Pending CPU Cores by
	  User</classname> and <classname>Pending Jobs by User</classname>. Every part of the pie-chart has a
	  tooltip with the name of the user.
	  <!--cbox(file: slurm/Overview/job_overview_tooltip.png caption:)-->
	</para>
      </section>
    <section xml:id="sec-Slurm-Manage-Job-Management">
      <title>Job Management</title>
      <para>
	<!--cbox(file: slurm/job_management/job_management_full.png caption:)-->
	In the <classname>Job Management</classname> are all of your current jobs. Because a job has about 100
	propteries you are able to decide which propteries you are interested in and which you want to hide in the
	Job Management (see <link linkend="sec-Slurm-Manage-Customize-Columns">Customize Columns</link> for further
	informations). To sort the job table you just have to click on the title of the proptery you want to sort
	for (for example <emphasis>Job Id</emphasis>). <!--cbox(file: slurm/job_management/job_management_sort.png
	caption:)--> Click the title again for changing the sort order. You can also move a column with drag and
	drop and change its width. <!--cbox(file: slurm/job_management/job_management_drag.png caption:)--> These
	settings will be saved when the window gets closed. If you want to take action on a job you just have to go
	into its contextmenu and select between the following actions:
	<variablelist>
	<varlistentry>
	  <term>Kill Job</term>
	  <listitem>
	    <para>
	      This kills a Job and set its state to CANCELED.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Suspend Job</term>
	  <listitem>
	    <para>
	      This suspends a Job and set its state to SUSPENDED.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Resume Job</term>
	  <listitem>
	    <para>
	      This resumes a suspended Job and set its state to RUNNING.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Requeue Job</term>
	  <listitem>
	    <para>
	      This kills a Job and set it back in the queue with state PENDING.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Requeue and Hold Job</term>
	  <listitem>
	    <para>
	      This kills a Job and set it back in the queue with state PENDING. The Job gets hold.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Hold Job</term>
	  <listitem>
	    <para>
	      This prevents a pending job from getting started.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Release Job</term>
	  <listitem>
	    <para>
	      This releases a job that was hold.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Set Priority</term>
	  <listitem>
	    <para>
	      This let you set the Priority of a Job manually.
	    </para>
	  </listitem>
	</varlistentry>
	</variablelist>
	<!--cbox(file: slurm/job_management/job_management_context.png caption:)--> 
	Depending on the state of the selected jobs some actions might be disabled. You are able to take this
	action on all selected jobs or all jobs of this user on condition that there is no conflict with the job
	states.	<!--cbox(file: slurm/job_management/job_management_action_to_all_user.png caption:)-->
	If you want to get more informations from a job go into the contextmenu and select <emphasis>More
	Information</emphasis> (see <link linkend="sec-Slurm-Manage-More-Informations">More Information</link> for
	further informations). In <classname>Activate Filter</classname> you can set one or more custom filter
	(created in the <link linkend="sec-Slurm-Manage-Job-Filter-Editor">Job Filter Editor</link>) as active.  
	<!--cbox(file:slurm/job_management/job_management_activate_filter.png caption:)--> 
	All active filters are shown after the <classname>Active Filter</classname> label. For creating custom
	filters see <link linkend="sec-Slurm-Manage-Job-Filter-Editor">Job Filter Editor</link>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Customize-Columns">
      <title>Customize Columns</title>
      <para>
	<!--cbox(file: slurm/customize_columns/customize_columns_full.png caption:)-->
	In the <classname>Customize Columns</classname> dialog are all known columns (Properties of a Job) listed
	in 2 lists, seperated on whether they are shown or hidden. To show or hide a column just select the columns
	you want to show/hide and drag them in the right list. 
	<!--cbox(file: slurm/customize_columns/customize_columns_drag.png caption:)-->
	The order of this list is not important because this is not the order how the columns are shown in the Job
	Management. Confirm your changes with <emphasis>OK</emphasis>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-More-Informations">
      <title>More Informations</title>
      <para>
	<!--cbox(file: slurm/more_information/more_information_full.png caption:)-->
	This dialog opens after you select <classname>Get more informations</classname> in the context menu of a
	Job. <!--cbox(file: slurm/more_information/more_information_context.png caption:)--> It uses a table to
	show the propteries and the corresponding values for the selected Job. There are 2 filters included in this
	dialog. One for hiding all properties if the value is 0/None/False or empty and one for hiding exotic
	propteries which are not interesting in most cases. Standardly both filters are enabled. To disable them you
	have to uncheck the corresponding checkbox at the bottom of the Dialog.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Activate-Filter">
      <title>Activate Filter</title>
      <para>
	If you created some custom filters they will be listed here (For creating custom filters see <link
	linkend="sec-Slurm-Manage-Job-Filter-Editor">Job Filter Editor</link>).
	<!--cbox(file: slurm/active_filters/active_filters_full.png caption:)--> 
	Select one or more filters for the current jobs. All active filters are shown comma-separated in the
	<classname>Active Filter</classname> label of the <classname>Job Management</classname>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Job-Filter-Editor">
      <title>Job Filter Editor</title>
      <para>
	As mentioned before we are able to create custom filters for our <classname>Job Management</classname>. To
	do this we first have to create a new filter by clicking <classname>New Filter</classname> and then insert
	a name for the filter.
	<!--cbox(file: slurm/job_filter_editor/job_filter_editor_new_filtername.png caption:)--> 
	After this is done we created a filter. To add some values to this filter go in the contextmenu and select
	the proptery you want to filter by. 
	<!--cbox(file: slurm/job_filter_editor/job_filter_editor_contextmenu.png caption:)--> 
	In this example we use the <emphasis>Job Id</emphasis>. A new dialog pops up. Here you can select what kind
	of filtering you want. Because the job id is always an integer you have the filtertypes <emphasis>between x
	and y</emphasis>, <emphasis>bigger then x</emphasis> and <emphasis>less then x</emphasis>.
	<!--cbox(file: slurm/job_filter_editor/job_filter_editor_jobid_filter.png caption:)--> 
	Choose the filtertype you want, set the values and confirm with OK. The value is now added to our custom
	filter. You can combine multiple values in one custom filter.
	<!--cbox(file: slurm/job_filter_editor/job_filter_editor_jobid_filter1.png caption:)--> 
	After we made our changes we hit the <classname>Save</classname> button. Now our filter can be used in the
	<classname>Job Management</classname>.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Node-State-Management">
      <title>Node State Management</title>
      <para>
	In the <classname>Node State Management</classname> are all known hosts listed. We have 3 different kind of
	trees which are containing the hosts.
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    Partition View
	  </term>
	  <listitem>
	    <para>
	      This tree shows all partitions with the corresponding nodes.
	      <!--cbox(file: slurm/node_state_management/node_state_management_full.png caption:)--> 
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Enclosure View
	  </term>
	  <listitem>
	    <para>
	      This tree is like the <classname>Enclosure View</classname> dialog.
	      <!--cbox(file: slurm/node_state_management/node_state_management_enclosure_view.png caption:)--> 
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    NodeState View
	  </term>
	  <listitem>
	    <para>
	      This tree shows all nodestates with the corresponding nodes.
	      <!--cbox(file: slurm/node_state_management/node_state_management_node_state_view.png caption:)--> 
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	To manage one or more nodes you first have to select them. Use the preffered view and move the node to the
	right list via drag&amp;drop. You can also move for exampe all nodes from a rack by draging the name of the
	rack to the right tree.
	<!--cbox(file: slurm/node_state_management/node_state_management_drag.png caption:)--> 
	All nodes in this list are selected for later actions. You can select multiple nodes for moving or input a
	hostlist in the <classname>Hostlist</classname> label (e.g. beo-[01-04]). 
	<!--cbox(file: slurm/node_state_management/node_state_management_hostlist.png caption:)--> 
	The nodes will be selected, if the hostlist is valid.
      </para>
      <para>
	We have 7 actions to use for our selected nodes:
	<!--cbox(file: slurm/node_state_management/node_state_management_actions.png caption:)--> 
      </para>
      <variablelist>
	<varlistentry>
	  <term>
	    Drain
	  </term>
	  <listitem>
	    <para>
	      The node is currently executing a job, but will not be allocated to additional jobs. The node state
	      will be changed to state <emphasis>DRAINED</emphasis> when the last job on it completes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Undrain
	  </term>
	  <listitem>
	    <para>
	      This will undrain all selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Set to <quote>POWER SAVE</quote>
	  </term>
	  <listitem>
	    <para>
	      ff
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Power up
	  </term>
	  <listitem>
	    <para>
	      The node will be powered up.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Start Slurmd
	  </term>
	  <listitem>
	    <para>
	      This starts the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Stop Slurmd
	  </term>
	  <listitem>
	    <para>
	      This stops the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>
	    Restart Slurmd
	  </term>
	  <listitem>
	    <para>
	      This restarts the Slurmd on the selected nodes.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
      <para>
	To perform an action you just have to select your nodes, choose an action and click the
	<classname>Execute</classname> button.  If you want to clear the selection you can click the
	<classname>Clear</classname> button to remove the whole selection or go in the contextmenu of the node you
	want to remove from selection.
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Reservations">
      <title>Reservations</title>
      <para>
	<!--cbox(file: slurm/reservation/reservation_full.png caption:)--> 
	In the Reservations dialog are all active reservations listed with some infos about them.
      </para>
      <bridgehead>Create a Reservation</bridgehead>
      <para>
	To create a reservation click the <classname>Add reservation</classname> button. A new dialog pops up.
	<!--cbox(file: slurm/reservation/reservation_add.png caption:)--> 
	Choose a <emphasis>User</emphasis> from an selected <emphasis>Account</emphasis>, a
	<emphasis>Duration</emphasis> for the reservation (this is possible by directly entering
	<emphasis>Duration</emphasis> or <emphasis>End Time</emphasis>). You also have to enter <emphasis>Node
	Count</emphasis>. All other informations are optional. Confirm by clicking the <classname>Add
	reservation</classname> button.
      </para>
      <bridgehead>Delete a Reservation</bridgehead>
      <para>
	To delete a reservation you just have to go into its contextmenu and choose <classname>Delete
	Reservation</classname>.
	<!--cbox(file: slurm/reservation/reservation_delete.png caption:)--> 
      </para>
    </section>
    <section xml:id="sec-Slurm-Manage-Accounting">
      <title>Accounting</title>
      <para>
	<!--cbox(file: slurm/accounting/menu.png caption:)--> 
      </para>
      <section xml:id="sec-Slurm-Manage-Manage-Accounts">
	<title>Manage Slurm Accounts</title>
	<para>
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_full.png caption:)--> 
	  To open the <classname>Manage Slurm Accounts</classname> dialog go <guimenu>Components->
	  Slurm->Manage->Accounting->Manage Accounts</guimenu>. Here we can see a tab for every cluster known to
	  slurm. Each tab contains a tree with the accounts and users that are registered in slurm. To get a better
	  view of the Accounts and Users, they have colors set (See <link
	  linkend="sec-Look-Feel-Preferences">Preferences</link> for changing these colors). At the bottom of the
	  dialog you can see for what each color stands for.
	</para>
	<bridgehead>Add an Account</bridgehead>
	<para>
	  Clicking the <classname>Add Account</classname> button will open a new dialog.
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_add_account.png caption:)-->
	  Here you have to input at least a name for the new account. Optionally you can also set a parent account
	  and a description. If an account was selected before the <classname>Add Account</classname> button was
	  clicked, this account will be prefilled in the parent account combo box. When you are finished confirm
	  with the OK button.
	</para>
	<note>
	  <para>
	  Accountnames have to be unique!
	  </para>
	</note>
	<bridgehead>Delete an Account</bridgehead>
	<para>
	  To delete an account you have to be sure that the account has no users in it (See <link
	  linkend="sec-Slurm-Manage-Manage-Accounts-delete-user">Delete an User from an Account</link> to delete an
	  user in the <classname>Manage Accounts</classname> dialog. 
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_delete_account_error.png caption:)-->
	  You can also delete it in the <link linkend="sec-Slurm-Manage-Manage-Users-delete-user">Manage
	  Users</link> dialog. If the user has this account set as default account you have to set another account
	  ass default (See <link linkend="sec-Slurm-Manage-Manage-Users-change-def">Changing the Default
	  Account</link> in the<classname> Manage Users</classname> dialog).
	</para>
	<para>
	  After all users are deleted from the account you can go into its contextmenu and select <classname>Delete
	  Account</classname>.
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_account_contextmenu.png caption:)-->
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Accounts-delete-user">Delete an User from an Account</bridgehead>
	<para>
	  Delete a user from an account by going into its contextmenu and select <classname>Delete
	  User</classname>.
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_user_contextmenu.png caption:)-->
	</para>
	<note>
	  <para>
	    You cant delete an user from its default account. First <link
	    linkend="sec-Slurm-Manage-Manage-Users-change-def">change the default account from the user</link> to
	    delete it.
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_delete_defuser_error.png caption:)-->
	  </para>
	</note>
	<bridgehead>Show Account/User Properties</bridgehead>
	<para>
	  <!--cbox(file: slurm/accounting/manage_accounts/manage_accounts_account_properties.png caption:)-->
	  To show the properties of an account or user go into its contextmenu and select <classname>Show Account
	  Properties</classname> or <classname>Show User Properties</classname> depending on what you did
	  select. Here are the properties of that account/user. There are 2 filters included in this dialog. One
	  for hiding all properties if the value is 0 or empty and one for hiding exotic propteries which are not
	  needed in most cases. Standardly both filters are enabled. To disable them you have to uncheck the
	  corresponding checkbox at the bottom of the Dialog.
	  <!--Write how to edit properties after this is completly implemented-->
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Manage-Users">
	<title>Manage Slurm Users</title>
	<para>
	  <!--cbox(file: slurm/accounting/manage_users/manage_users_full.png caption:)-->
	  In the <classname>Manage Users</classname> dialog we are able to change the accounts a user is in, set
	  and change default accounts, register user in slurm and delete user. By selecting an user you see his
	  accounts in the right <classname>Accounts</classname> list. The default account is highlighted in the
	  color set in <link linkend="sec-Look-Feel-Preferences">Preferences</link>. By default the system users
	  are hidden. To show them just check the <emphasis>Show system users (UID &lt; 1000)</emphasis> checkbox.
	  <!--cbox(file: slurm/accounting/manage_users/manage_users_def_is_set.png caption:)-->
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-register-user">Register an User in Slurm</bridgehead>
	<para>
	  <!--cbox(file: slurm/accounting/manage_users/manage_users_set_def.png caption:)-->
	  For registering a user in Slurm go to the <classname>Unregistered Users</classname> and select the user
	  you want to register. Every user needs an default account so we have to set this first. Go in the
	  contextmenu of the account you want to set as default and select <classname>Set as Default
	  Account</classname>. The user will be registered to Slurm with an default account. If you just set some
	  accounts for an unregistered user it will choose a default account randomly. 
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-delete-user">Delete an User</bridgehead>
	<para>
	  To delete a user go into its contextmenu and select <classname>Remove User</classname>.
	  <!--cbox(file: slurm/accounting/manage_users/manage_users_remove_user.png caption:)-->
	</para>
	<note>
	  <para>
	    Be sure that the User has no active Jobs.
	  </para>
	</note>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-assign-to-accounts">Assign an User to Accounts</bridgehead>
	<para>
	  <!--cbox(file: slurm/accounting/manage_users/manage_users_assign_accounts.png caption:)-->
	  Select a registered slurm user to see the accounts he is in on the
	  <classname>Accounts</classname> list. Check the accounts you want to set and hit the <classname>Activate
	  Changes</classname> button.
	</para>
	<bridgehead xml:id="sec-Slurm-Manage-Manage-Users-change-def">Change the Default Account of an User</bridgehead>
	<para>
	  To change the default account of a user select him in the <classname>Users</classname> tree and go into
	  the contextmenu of the new account you want to set as default. Then select <classname>Set as Default
	  Account</classname>.
	</para>
      </section>
      <!---
      <section xml:id="sec-Slurm-Manage-Manage-QOS">
	<title>Manage QOS</title>
	<para>

	</para>
      </section>
      -->
      <section xml:id="sec-Slurm-Manage-Cluster-Usage">
	<title>Cluster Usage</title>
	<para>
	  <!--cbox(file: slurm/cluster_usage/cluster_usage_full.png caption:)-->
	  <!--cbox(file: slurm/cluster_usage/cluster_usage_full2.png caption:)-->
	  The <classname>Cluster Usage</classname> uses <application>sreport</application> to generate reports of
	  job usage and cluster utilization for Slurm jobs saved to the Slurm Database, slurmdbd. For detailed
	  information to the reports and options see <link
	  xlink:href="https://slurm.schedmd.com/sreport.html___blank___">sreport manpage</link>. Select your report
	  type (for example <emphasis>cluster</emphasis>) in the left combo box and then the option from the
	  combobox left to it. Per default the time of the period from the report is yesterday. You can change this
	  by modifying the start and the endtime. The color are set in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences</link>.
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Fair-Share">
	<title>Fair Share</title>
	<para>
	  <classname>Fair Share</classname> uses <application>sshare</application> to view Slurm share
	  information. We provide 2 views with a long and a short version. By default we show the short version but
	  you can change this by checking the <classname>long</classname> checkbox.
	</para>
	<bridgehead>Account View</bridgehead>
	<para>
	  <!--cbox(file: slurm/fair_share/fair_share_account_view.png caption:)-->
	  The <classname>Account View</classname> shows all the Slurm share information for the accounts. The colors
	  are set in the <link linkend="sec-Look-Feel-Preferences">Preferences</link>.
	</para>
	<bridgehead>Detailed Account View</bridgehead>
	<para>
	  <!--cbox(file: slurm/fair_share/fair_share_detailed_account_view.png caption:)-->
	  The <classname>Detailed Account View</classname> shows all the Slurm share information for the accounts
	  with the users in it. The color are set in the <link
	  linkend="sec-Look-Feel-Preferences">Preferences</link>
	</para>
	<para>For more information about <application>sshare</application> see <link
	  xlink:href="https://slurm.schedmd.com/sshare.html___blank___">sshare manpage</link>.
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Job-Priorities">
	<title>Job Priorities</title>
	<para>
	  <!--cbox(file: slurm/job_priorities/job_priorities_full.png caption:)-->
	  <!--cbox(file: slurm/job_priorities/job_priorities_full_long.png caption:)-->
	  <classname>Job Priorities</classname> uses <application>sprio</application> to view the components of a
	  job's scheduling priority when the multi-factor priority plugin is installed. For more information about
	  <application>sprio</application> see <link
	  xlink:href="https://slurm.schedmd.com/sprio.html___blank___">sprio manpage</link>.
	</para>
      </section>
      <section xml:id="sec-Slurm-Manage-Settings">
	<title>Settings</title>
	<para>
	  <!--cbox(file: slurm/settings.png caption:)-->
	  In the <classname>Settings</classname> dialog are the update intervals for jobs, nodes, partitions and
	  slurm accounting. Here you can modify how often you want QluMan to look for changes on your cluster.
	</para>
	<note>
	  <para>
	    If you modify something in the QluMan for example a job you will automatically get the update for
	    that. The update interval is just for changes that does not happen in the QluMan.
	  </para>
	</note>
      </section>
    </section>
  </section>
</section>


