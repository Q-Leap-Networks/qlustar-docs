<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE article [
<!ENTITY % BOOK_ENTITIES SYSTEM "Release_Notes.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<article version="5.0" xmlns="http://docbook.org/ns/docbook"
	 xmlns:xlink="http://www.w3.org/1999/xlink"
	 xmlns:xi="http://www.w3.org/2001/XInclude">
  <info xml:id="info-Qlustar_Cluster_OS-Release_Notes-Release_Notes">
    <title>Release Notes</title>
    <subtitle></subtitle>
    <productname>Qlustar Cluster OS</productname>
    <productnumber>11.0</productnumber>
    <edition>1</edition>
    <abstract>
      <para>
	The 11.0 release updates Qlustar's core platform to current Ubuntu 18.04 LTS.  The
	CentOS 7 edge platform is now based on 7.8 and the new CentOS 8 edge platform has been
	added based on 8.1. As a result of our continuous platform optimization/simplification
	process we moved to <link xlink:href="http://dnsmasq.org/___blank___">dnsmasq</link> as
	a replacement of the previously used ISC DHCP and atftp TFTP server. dnsmasq also
	provides cluster internal name services (DNS) replacing the NIS hosts map and acts as a
	DNS proxy.
      </para>
      <para>
	In addition to the dnsmasq management interface, the second new major feature of QluMan
	is the possibility to handle Network filesystem resources. Initially this supports NFS
	mounts including RDMA connections and a mechanism to automatically choose the optimal
	network path to the NFS server. Mount resources are implemented as systemd automount
	units. This new interface replaces the previously used automount daemon which is now
	deactivated per default.
      </para>
      <para>
	The highlights among the numerous component updates and bug fixes are: Kernel 4.19.x,
	Slurm 18.08.x, CUDA 10.1, OpenMPI 4.0.1, BeeGFS 7.1.3.
      </para>
    </abstract>
    <author><orgname><inlinemediaobject><imageobject>
	<imagedata fileref="Common_Content/images/qlustar-logo.png" format="PNG" />
      </imageobject></inlinemediaobject></orgname></author>
  </info>
  <section>
    <title>Basic Info</title>
      <para>
	The Qlustar 11.0 release is based on Ubuntu 18.04. It includes all security fixes and
	other package updates published before June 13th 2019. Available security updates
	relevant to Qlustar 11.0, that have appeared after this date, will be announced on the
	Qlustar website and in the Qlustar security newsletter. Supported edge-platforms are
	Ubuntu 18.04 (Bionic), CentOS 7 and CentOS 8 with integration of OpenHPC 1.3.8.
      </para>
  </section>
  <section>
    <title>New features</title>
    <section>
      <title>dnsmasq</title>
      <para>
      dnsmasq is now employed as a central Qlustar component to consolidate three network
      services previously provided by three independent daemons and hence significantly reduces
      complexity on the head-node. In addition it provides DNS proxy services per default which
      had to be configured manually in earlier Qlustar releases.
      </para>
      <variablelist>
	<varlistentry>
	  <term>DHCP</term>
	  <listitem>
	    <para>
	      dnsmasq now provides cluster-internal DHCP services replacing the previously used
	      ISC DHCP server software.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>TFTP</term>
	  <listitem>
	    <para>
	      dnsmasq also acts as a TFTP/PXE boot server making the previously used atftpd
	      obsolete.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Cluster-internal DNS</term>
	  <listitem>
	    <para>
	      dnsmasq provides DNS name resolution both for cluster-internal nodes as well as
	      external machines via its proxy functionality. As a consequence, the NIS host map
	      is not needed anymore and has been removed for new installations.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Legacy support</term>
	  <listitem>
	    <para>
	      When updating from an earlier release, you have the option to keep the previous
	      DHCP/TFTP setup through a legacy option for now (see below).
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
    <section>
      <title>QluMan 11.0</title>
      <variablelist>
	<varlistentry>
	  <term>Network Mount Management</term>
	  <listitem>
	    <para>
	      QluMan has a <link
	      xlink:href="../QluMan_Guide/index.html#sec-Network-FS-Mounts-overview___blank___">new
	      Config Class</link> that allows to configure and assign network mounts to
	      nodes. Initially NFS mounts including RDMA variants are supported. They are setup
	      on the nodes as systemd automount units.
	    </para>
	    <para>
	      QluMan automatically activates NFSoRDMA on clients that support it with an option
	      to switch back to TCP if needed. It also allows to define priorities for the
	      available networks, so that the network to be used for a mount is optimally
	      chosen if a node provides multiple paths to the corresponding NFS server.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>DNSmasq Management</term>
	  <listitem>
	    <para>
	      The newly introduced dnsmasq service is fully manageable via QluMan. A <link
	      xlink:href="../QluMan_Guide/index.html#sec-Global-Network-Settings___blank___">new
	      dialog</link> has been introduced to add external DNS servers and search domains,
	      as well as name/IPs for cluster external machines and other global network
	      related settings.
	    </para>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term>Preview node-specific configs</term>
	  <listitem>
	    <para>
	      The context menu of a node in the Enclosure View now includes an entry that
	      allows a <link
	      xlink:href="../QluMan_Guide/index.html#sec-Host-Specific-Configs___blank___">preview
	      of all host-specific files/configs</link> that are assigned and sent to a node
	      when booting.
	    </para>
	  </listitem>
	</varlistentry>
      </variablelist>
    </section>
  </section>
  <section>
    <title>Major component updates</title>
      <para>
	<variablelist>
	  <varlistentry>
	    <term>Kernel 4.19</term>
	    <listitem>
	      <para>
		Qlustar 11.0 is based on the 4.19 LTS kernel series (Ubuntu only). The new
		kernel option <emphasis>mitigations=off</emphasis> has been added to QluMan for
		an easy way to run compute nodes without performance penalties from CPU
		security bug mitigations (Spectre etc.).
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Slurm</term>
	    <listitem>
	      <para>
		Qlustar 11.0 introduces the Slurm 18.08 series with the current version being
		18.08.7.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>OpenMPI</term>
	    <listitem>
	      <para>
		Qlustar 11.0 upgrades to OpenMPI 4.0.1 now using ucx transport per
		default. Furthermore, we added support for multiple gcc versions, now with a
		gcc7 flavor based on the Ubuntu default compiler (gcc 7.4.0) and a gcc8 flavor
		based on gcc 8.3.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>Nvidia CUDA</term>
	    <listitem>
	      <para>
		Qlustar 11.0 provides optimal support for Nvidia GPU hardware by supplying
		pre-compiled and up-to-date kernel drivers as well as CUDA 10.1.
	      </para>
	    </listitem>
	  </varlistentry>
	  <varlistentry>
	    <term>BeeGFS</term>
	    <listitem>
	      <para>
		Qlustar 11.0 has integrated the most recent BeeGFS release 7.1.3 for clients
		and servers with ready-to-use image modules.
	      </para>
	    </listitem>
	  </varlistentry>
	</variablelist>
      </para>
  </section>
  <section>
    <title>Other notable package version updates</title>
    <para>
      <itemizedlist>
	<listitem>
	  <para>
	    <classname>rdma-core</classname>: 21.0 (Ubuntu only, on CentOS, the original RHEL
	    OFED stack is used).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>Intel/PGI Compiler support</classname>: The Qlustar wrapper packages
	    have been updated to support the new version of the Intel parallel studio (2019)
	    and PGI community edition 2018.4/10 (package qlustar-pgi-dev-tools). Corresponding
	    OpenMPI package variants for this compiler are also provided (both Ubuntu only).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>Lustre</classname>: 2.12.4
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>ZFS</classname>: 0.7.13
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>singularity</classname>: 3.2.0
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>openblas</classname>: 0.3.5
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>hwloc</classname>: 2.0.3
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>ucx</classname>: 1.5.1
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>libpsm2</classname>: 11.2.68
	  </para>
	</listitem>
	<listitem>
	  <para>
	    <classname>OmniPath (OPA) stack</classname>: 10.8.0.0.201/2
	  </para>
	</listitem>
      </itemizedlist>
    </para>
  </section>
  <section>
    <title>General changes/improvements</title>
      <para>
	<itemizedlist>
	  <listitem>
	    <para>
	      The automount daemon together with the corresponding NIS maps have been replaced
	      in favor of the new network mount config class provided by QluMan (see
	      above). Legacy setups based on automount/NIS will continue to function and will
	      be supported.
	    </para>
	  </listitem>
	</itemizedlist>
      </para>
  </section>
  <section>
    <title>Update instructions</title>
    <task>
      <title></title>
      <procedure>
	<step>
	  <title>Preparations</title>
	  <para>
	    Upgrading to Qlustar 11.0 is only supported from a 10.1.x release.
	  </para>
	  <note><para>
	    Make sure that you have no unwritten changes in the QluMan database. If you do,
	    write them to disk as described in the <link
	    xlink:href="../QluMan_Guide/index.html#sec-Writing-Config-Files___blank___">
	    QluMan Guide</link> before proceeding with the update.
	  </para></note>
	</step>
	<step>
	  <title>Optionally clone chroots</title>
	  <para>
	    Clone existing Ubuntu 16.04 and CentOS7 chroots based on 10.1 and then afterwards
	    upgrade the clones to 11.0. That allows for easy rollback.
	  </para>
	</step>
	<step>
	  <title>Update to 11.0 package sources list</title>
	  <para>
	    The Qlustar apt sources list needs to be changed as follows both on the
	    head-node(s) and in all existing Ubuntu based chroot(s) that should be updated.
	    <screen>
<prompt>0 root@cl-head ~ #</prompt>
<command>apt update</command>
<prompt>0 root@cl-head ~ #</prompt>
<command>apt install qlustar-sources-list-11.0</command>
	    </screen>
	  </para>
	  <para>
	    To prepare a CentOS7 based chroot for the upgrade, change into it and execute the
	    following:
	    <screen>
<prompt>(centos7-11.0) 0 root@cl-head ~ #</prompt><command>
sed -i -e 's/10.1/11.0/g'  /etc/yum.repos.d/qlustar-10.1-centos7.repo</command>
	    </screen>
	  </para>
	</step>
	<step>
	  <title>Update packages</title>
	  <para>
	    On the head-node execute
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
apt update</command>
<prompt>0 root@cl-head ~ #</prompt><command>
apt dist-upgrade</command>
	    </screen>
	  </para>
	  <note>
	    <para>
	      When asked about whether you want to update the configuration file for some
	      package, you should answer 'N' (keep the old version) unless you have a specific
	      reason to change it.
	    </para>
	  </note>
	  <para>
	    Change into each Ubuntu based chroot you want to update (e.g.)
	    <screen>
<prompt>0 root@cl-head ~ #</prompt>
<command>chroot-bionic</command>
	    </screen>
	    and also execute:
	    <screen>
<prompt>(bionic) 0 root@cl-head ~ #</prompt>
<command>apt update</command>
<prompt>(bionic) 0 root@cl-head ~ #</prompt>
<command>apt dist-upgrade</command>
	    </screen>
	    Change into each CentOS based chroot you want to update (e.g.)
	    <screen>
<prompt>0 root@cl-head ~ #</prompt>
<command>chroot-centos7</command>
	    </screen>
	    and execute (twice the same command):
	    <screen>
<prompt>(centos7-11.0) 0 root@cl-head ~ #</prompt>
<command>yum update</command>
<prompt>(centos7-11.0) 0 root@cl-head ~ #</prompt>
<command>yum update</command>
	    </screen>
	    Confirm the import of the new Qlustar GPG key.
	  </para>
	</step>
	<step>
	  <title>Reboot head-node(s)</title>
	  <para>
	    Initially only reboot the head-node(s).
	  </para>
	</step>
	<step>
	  <title>Regenerating Qlustar images</title>
	  <para>
	    Regenerate your Qlustar images with the 11.0 image modules. To accomplish this,
	    you'll have to select <emphasis>Version 11.0</emphasis> in the QluMan <link
	    xlink:href="../QluMan_Guide/index.html#sec-Qlustar-OS-Images___blank___"> Qlustar
	    Images dialog</link>. If you have new cloned chroots, select those as well.
	  </para>
	  <note>
	    <para>
	      If your images include image modules that have a version in their name
	      (e.g. beegfs-6-server), make sure that you change to the corresponding module
	      with the most recent version (e.g. beegfs-7-server).
	    </para>
	  </note>
	</step>
	<step>
	  <title>Migration to GRUB PXE booting</title>
	  <para>
	    To enable support for UEFI PXE booting, <classname>GRUB</classname> is now used per
	    default as the boot loader for both EFI and PC BIOS netboot nodes. To make this
	    work, the new package <classname>qlustar-headnode</classname> must be installed at
	    this time.
	  </para>
	  <warning>
	    <para>
	      This is absolutely necessary, otherwise PXE booting won't work anymore.
	    </para>
	  </warning>
	  <note>
	    <para>
	      If for some reason, you want to keep booting PC BIOS nodes via the legacy
	      PXELINUX mechanism, you will have to install the package
	      <classname>qlustar-netboot-compat</classname>.
	    </para>
	  </note>
	</step>
	<step>
	  <title>Migration to dnsmasq</title>
	  <para>
	    Migration to dnsmasq is not absolutely required during this upgrade, but highly
	    recommended. However, for PXE booting of UEFI nodes it is mandatory. If you want to
	    delay the migration for now, you can do so by checking the <link
	    xlink:href="../QluMan_Guide/index.html#sec-Writing-Config-Files___blank___">legacy
	    checkbox in QluMan</link>. In this case you still have to disable systemd-timesyncd
	    though in order for ntp to work:
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
service systemd-timesyncd stop
systemctl disable systemd-timesyncd
</command>
	    </screen>
	    You also have to install the package <classname>qlustar-netboot-compat</classname>
	    in this case. After this, you can reboot the head-node once more and proceed with
	    step 8.
	  </para>
	  <warning>
	    <para>
	      Support for the old legacy setup with separate DHCP and TFTP servers will be
	      discontinued starting with the 12.0 release. So you'll have to do the migration
	      sometime before updating to 12.0. To do so, just follow the remainder of this
	      step at any time.
	    </para>
	  </warning>
	  <para>
	    To start the migration you first have to install dnsmasq and disable the old DHCP
	    and TFTP server as well as some systemd services:
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
apt install dnsmasq</command>
<prompt>0 root@cl-head ~ #</prompt><command>
for s in isc-dhcp-server atftpd systemd-resolved systemd-timesyncd; do
  service $s stop
  systemctl disable $s
done</command>
	    </screen>
	    Now add at least one of your external DNS servers in the corresponding <link
	    xlink:href="../QluMan_Guide/index.html#sec-Writing-Config-Files___blank___"> QluMan
	    dialog</link> and afterwards <link
	    xlink:href="../QluMan_Guide/index.html#sec-Writing-Config-Files___blank___"> write
	    the dnsmasq config</link>.
	    <warning>
	      <para>
		This <emphasis>write step</emphasis> is essential. If you forget it, qlumand
		won't be able to start after a reboot and you'll be left with a system in an
		inconsistent state that needs manual repair.
	    </para>
	  </warning>
	    Also remove <emphasis>nis</emphasis> from the <emphasis>hosts</emphasis> entry in
	    <filename>nsswitch.conf</filename>
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
sed -ie 's/^hosts:.*/hosts:\t\tfiles dns/g' /etc/nsswitch.conf</command>
	    </screen>
	    and change the <emphasis>dns-nameservers</emphasis> entry in
	    <filename>/etc/network/interfaces</filename> to <emphasis>localhost</emphasis>, so
	    that the head-node itself is using dnsmasq for DNS lookups.
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
sed -ie 's/  dns-nameservers.*/  dns-nameservers localhost/g' /etc/network/interfaces</command>
	    </screen>
	    Finally reboot the head-node once more. Once it is up again, check that dnsmasq is
	    running:
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
service dnsmasq status</command>
	    </screen>
	    If everything is working as expected, you can remove the now obsolete packages:
	    <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
apt remove atftpd isc-dhcp-server</command>
	    </screen>
	  </para>
	</step>
	<step>
	  <title>Write config file changes</title>
	  <para>
	    To activate all remaining changes in the QluMan database that were introduced by
	    the update, they need to be written to disk now. Check the QluMan Guide about <link
	    xlink:href="../QluMan_Guide/index.html#sec-Writing-Config-Files___blank___"> how to
	    write such changes</link>.
	  </para>
	</step>
	<step>
	  <title>Reboot all netboot nodes</title>
	  <para>
	    After the regeneration of the images is complete, and all the above steps have been
	    done, you can reboot all other nodes in the cluster, including virtual FE
	    nodes. This completes the update procedure.
	  </para>
	</step>
	<step>
	  <title>Adjust root bash shell initialization</title>
	  <para>
	    Starting from this release, Qlustar supplied bash shell functions and some aliases
	    for root on the head-node have been migrated to the qlustar-base package and now
	    live underneath <filename>/etc/qlustar</filename>. Previously they have been
	    generated on the fly during installation, and hence were not easily upgradeable.
	  </para>
	  <para>
	    To move to the new scheme, the following modifications have to be made manually
	    with a text editor on the cluster head-node(s). In the file
	    <filename>/root/.bashrc</filename> replace the content at the end from
	    <screen>
# Source other files
source_list="/root/.bash_aliases /root/.bash_functions"
shopt -oq posix || source_list="$source_list /etc/bash_completion"
for c in $source_list ; do
  [ -r $c ] &amp;&amp; . $c ; done; unset c
	    </screen>
	    to
	    <screen>
# Source misc bash stuff:
# First global Qlustar aliases/functions (from qlustar-base package)
source_list="/etc/qlustar/bash.aliases /etc/qlustar/bash.functions"
# ... then the local equivalents
source_list="$source_list /root/.bash_aliases /root/.bash_functions"
# Finally activate additional completions
shopt -oq posix || source_list="$source_list /etc/bash_completion"
for c in $source_list ; do
  [ -r $c ] &amp;&amp; . $c ; done; unset c
	    </screen>
	    In the file <filename>/root/.bash_aliases</filename> delete or comment out the
	    following two lines:
	    <screen>
alias console-fe-vm="connect_screen login-vm"
alias console-demo-vms="connect_screen demo-system"
	    </screen>
	    These two aliases are now provided globally and the old ones will not work anymore.
	  </para>
	</step>
      </procedure>
    </task>
  </section>
  <section>
    <title>Changelogs</title>
    <para>
      A detailed log of changes in the image modules can be found in the directories
      <filename>/usr/share/doc/qlustar-module-&#60;module-name&#62;-*-amd64-11.0.0</filename>.
      As an example, in the directory
      <filename>/usr/share/doc/qlustar-module-core-xenial-amd64-11.0.0</filename> you will find
      a summary changelog in <filename>core.changelog</filename>, a complete list of packages
      with version numbers entering the current core module in
      <filename>core.packages.version.gz</filename>, a complete changelog of the core modules
      package versions in <filename>core.packages.version.gz</filename> and finally a complete
      log of changed files in <filename>core.contents.changelog.gz</filename>.
      </para>
      </section>
</article>

