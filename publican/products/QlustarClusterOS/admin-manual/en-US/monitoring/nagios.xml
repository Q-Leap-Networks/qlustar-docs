<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE section [
<!ENTITY % BOOK_ENTITIES SYSTEM "administration-manual.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<section xmlns="http://docbook.org/ns/docbook"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xml:id="admin-man-sect-nagios">
  <title>Nagios</title>
  <indexterm><primary>Nagios</primary></indexterm>
  
  <para>
    This section describes the Qlustar Nagios setup.
  </para>
  
  <section xml:id="admin-man-sect-nag-plug-ins">
    <title>Nagios Plugins</title>
    <indexterm><primary>Nagios</primary><secondary>Nagios Plugins</secondary></indexterm>

    <para>
      The package <package>qlustar-nagios-plugins</package> contains the tools required to
      process the data received from Ganglia. The thresholds, services and nodes to monitor and
      group definitions are set in files located in the directory
      <filename>/etc/nagios3/conf.d/qlustar</filename>. The file <filename>nodes.cfg</filename>
      lists the nodes. This file is auto-generated from QluMan. A few lines are required for
      each node as shown in this example:
    </para>

    <screen>
define host {
  host_name      beo-01 
  use            generic-node
  register       1
}
define host {
  host_name      beo-10
  use            generic-node
  register       1
}
    </screen>

    <para>
      The file <filename>hostgroup-definitions.cfg</filename> defines which nodes belong to
      which hostgroup:
    </para>
    
    <screen>
define hostgroup {
  hostgroup_name        ganglia-nodes
  members               beo-0.
  register              1
}
    </screen>

    <para>
      The regular expression <systemitem class="systemname">beo-0.</systemitem> specifies, that
      all nodes with a hostname matching the expression are member of this group. If you need
      to create additional groups because you have different types of nodes with a different
      set of available metrics, or with metrics that require different thresholds, then you can
      define them here. Example:
    </para>

    <screen>
define hostgroup {
  hostgroup_name          opterons
  members                 beo-1[3-6]
  register                1 
}
    </screen>

    <para>
      The file <filename>services.cfg</filename> lists all metrics that should be monitored. It
      includes the thresholds, and for which groups each service is defined. For cluster nodes,
      the metric data is delivered via Ganglia. The following example defines the monitoring of
      the fan speed for the members of the group <systemitem
      class="systemname">opterons</systemitem>:
    </para>

    <screen>
define service {
  use                      generic-service
  hostgroup_name           opterons
  service_description      Ganglia fan1
  check_command            check_ganglia_fan!3000!0!"fan1"!$HOSTNAME$
  register                 1
}
    </screen>

    <para>
      With this definition, the service will enter the <literal>warning state</literal> once
      the fan-speed goes below 3000, and if it completely fails (speed 0), it will enter the
      <literal>error state</literal>.
    </para>
    <para>
      The following is an example for a service that is monitored for the members of two
      hostgroups:
    </para>
   
    <screen>
define service {
  use                     generic-service
  hostgroup_name          ganglia-nodes,opterons
  service_description     Ganglia temp1
  check_command           check_ganglia_temp!50!60!"temperature1"!$HOSTNAME$
  register                1
}
    </screen>
 </section>

 <section xml:id="admin-man-sect-head-node">
   <title>Monitoring the head-node(s)</title>
   <indexterm><primary>Nagios</primary><secondary>head-node</secondary></indexterm>

   <para>
     The file <filename>localhost.cfg</filename> lists the services that should be monitored
     for the head-node(s). The definitions are different because the data is not collected
     through Ganglia.
   </para>

   <note>
     <para>
       The software RAID (md) devices are monitored by mdadm and mail is sent to root if a
       device fails. The RAID devices are not monitored with the nagios setup by default.
     </para>
   </note>
   
 </section>
 
 <section xml:id="admin-man-sect-web-interface">
   <title>Webinterface</title>
   <indexterm><primary>Nagios</primary><secondary>Webinterface</secondary></indexterm>
   
   <para>
     You can open the Nagios web interface at the address
     <literal>http://<replaceable>&lt;head-node&gt;</replaceable>/nagios3/</literal>. Login as
     nagiosadmin. The password can be changed by executing the following command as root:
   </para>
   <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
htpasswd /etc/nagios3/htpasswd.users nagiosadmin</command>
   </screen>
 </section>
 
 <section xml:id="admin-man-sect-restart">
   <title>Restart</title>
   <indexterm><primary>Nagios</primary><secondary>Restart</secondary></indexterm>

   <para>
     Nagios uses the information collected by Ganglia. In case this information source is not
     available, nagios will send warning mails. To avoid being flooded by these mails when
     you need to restart Ganglia, you should first stop Nagios:
   </para>

   <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
/etc/init.d/nagios3 stop</command>
   </screen>
   
   <para>
     Then you can restart Ganglia:
   </para>
   
   <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
/etc/init.d/ganglia-monitor restart</command>

<prompt>0 root@cl-head ~ #</prompt><command>
/etc/init.d/gmetad restart</command>
   </screen>

   <para>
    After restarting Ganglia on the head-node you need to restart Ganglia on the compute
    nodes as well:
   </para>

   <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
dsh -a /etc/init.d/ganglia-monitor restart</command>

<prompt>0 root@cl-head ~ #</prompt><command>
dsh -a /etc/init.d/gmetric stop</command>

<prompt>0 root@cl-head ~ #</prompt><command>
dsh -a /etc/init.d/gmetric start</command>
   </screen>

   <para>
     Finally you can start Nagios again
   </para>

   <screen>
<prompt>0 root@cl-head ~ #</prompt><command>
/etc/init.d/nagios3 start</command>
   </screen>
   
 </section>
</section>

<!--  LocalWords:  hwmonitord
-->
